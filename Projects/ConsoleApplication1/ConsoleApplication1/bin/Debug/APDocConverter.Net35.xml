<?xml version="1.0"?>
<doc>
  <assembly>
    <name>APDocConverter.Net35</name>
  </assembly>
  <members>
    <member name="T:APDocConverter.Conversion.ConversionToPDFType">
      <summary>
            Type of conversion to PDF to use.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.ConversionToPDFType.NotSet">
      <summary>
            Not set
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.ConversionToPDFType.DirectToPDF">
      <summary>
            Direct to PDF conversion
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.ConversionToPDFType.PrintToPDF">
      <summary>
            Print to PDF conversion
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.TIFFToPDFIgnoreCompression.NotSet">
      <summary>
            Option Not Set.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.LibreOffice.CreatePDFForm">
      <summary>
            Determines whether form fields are converted into PDF form fields.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.LibreOffice.CreatePDFForm.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.LibreOffice.CreatePDFForm.False">
      <summary>
            Do not convert form fields.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.LibreOffice.CreatePDFForm.True">
      <summary>
            Convert the form fields.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet">
      <summary>
            Determines whether all worksheets are printed.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet.SingleWorksheet">
      <summary>
            Print the first worksheet only.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet.PrintEntireWorkbook">
      <summary>
            Print the entire workbook.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.MacroSecurityOption">
      <summary>
            Office Macro Security options.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.MacroSecurityOption.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.MacroSecurityOption.MacroSecurityLow">
      <summary>
            Enables macros.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.MacroSecurityOption.MacroSecurityByUI">
      <summary>
            Uses security settings specified in Security dialog box.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.MacroSecurityOption.MacroSecurityForceDisable">
      <summary>
            Disable all macros.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.OutputIntent">
      <summary>
            Specifies the intended use for the output.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.OutputIntent.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.OutputIntent.Screen">
      <summary>
            Export for screen. Generally lower quality and smaller file size.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.OutputIntent.Print">
      <summary>
            Export for print. Generally higher quality and larger file size.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags">
      <summary>
            Includes the document tags.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.IncludeDocumentStructureTags.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.IncludeDocumentStructureTags.False">
      <summary>
            Exclude document structure tags.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.IncludeDocumentStructureTags.True">
      <summary>
            Include document structure tags.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.PowerPoint.FrameSlides">
      <summary>
            Add a border frame around slides.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.FrameSlides.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.FrameSlides.NoFrame">
      <summary>
            No frame around the output.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.FrameSlides.Frame">
      <summary>
            Border around the output.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.PowerPoint.OutputType">
      <summary>
            Determines the output type of the slides.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.Slides">
      <summary>
            Output as slides. (default)
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.Outline">
      <summary>
            Output as outline view.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.Notes">
      <summary>
            Output as notes view.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.OneSlideHandouts">
      <summary>
            Output as one-slide handouts.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.TwoSlideHandouts">
      <summary>
            Output as two-slide handouts.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.ThreeSlideHandouts">
      <summary>
            Output as three-slide handouts.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.FourSlideHandouts">
      <summary>
            Output as four-slide handouts.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.SixSlideHandouts">
      <summary>
            Output as six-slide handouts.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.OutputType.NineSlideHandouts">
      <summary>
            Output as nine-slide handouts.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides">
      <summary>
            Determines whether print hidden slides.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides.False">
      <summary>
            Ignore hidden slides.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides.True">
      <summary>
            Include hidden slides.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.PowerPoint.PrintColorType">
      <summary>
            Enumerates the print color types to use.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintColorType.NotSet">
      <summary>
            NotSet
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintColorType.Color">
      <summary>
            Print in color
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintColorType.BlackAndWhite">
      <summary>
            Print in black and white
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.PowerPoint.PrintColorType.PureBlackAndWhite">
      <summary>
            Print in pure black and white (high contrast)
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Publisher.OutputIntent">
      <summary>
            Specifies the intended use for the output.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Publisher.OutputIntent.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Publisher.OutputIntent.Screen">
      <summary>
            Export with intent to be view on-screen.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Publisher.OutputIntent.Print">
      <summary>
            Export with intent to be printed.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Publisher.OutputIntent.Minimum">
      <summary>
            Export with smallest file size.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Publisher.OutputIntent.Commercial">
      <summary>
            Export with intent of commercial press.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack">
      <summary>
            Determines whether the color is converted to black.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack.False">
      <summary>
            Output in color.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack.True">
      <summary>
            Output in black and white.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Word.WordCreateBookmarks">
      <summary>
            Enumerates Word bookmark creation options.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordCreateBookmarks.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordCreateBookmarks.CreateNoBookmarks">
      <summary>
            Disable creation of bookmarks.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordCreateBookmarks.CreateHeadingBookmarks">
      <summary>
            Create bookmarks based on heading.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordCreateBookmarks.CreateWordBookmarks">
      <summary>
            Create bookmarks based on Word bookmarks.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Word.WordTrackedChanges">
      <summary>
            Enumerates the Word Tracked changes.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordTrackedChanges.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordTrackedChanges.ExportDocument">
      <summary>
            Export the document content without tracked changes.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordTrackedChanges.ExportDocumentWithMarkup">
      <summary>
            Export the document content with tracked changes.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Word.WordPrintOutItem">
      <summary>
            Determines the content that is printed in the output for Word documents.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordPrintOutItem.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordPrintOutItem.DocumentContent">
      <summary>
            Prints the current document content.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordPrintOutItem.DocumentContentWithMarkup">
      <summary>
            Prints the current document content with tracked changes.
            </summary>
    </member>
    <member name="T:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont">
      <summary>
            Determines if text should be bitmapped, if font cannot be embedded.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont.DoNotBitmap">
      <summary>
            Do not bitmap text when font cannot be embedded.
            </summary>
    </member>
    <member name="F:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont.BitmapText">
      <summary>
            Bitmap text when font cannot be embedded.
            </summary>
    </member>
    <member name="T:APDocConverter.ArchiveFileProcess">
      <summary>
            Handling of archive file.
            </summary>
    </member>
    <member name="F:APDocConverter.ArchiveFileProcess.NotSet">
      <summary>
            Handling of archive file is not set.
            </summary>
    </member>
    <member name="F:APDocConverter.ArchiveFileProcess.Extract">
      <summary>
            Extract the archive file and process.
            </summary>
    </member>
    <member name="F:APDocConverter.ArchiveFileProcess.Process">
      <summary>
            No extraction and only processing of archive file.
            </summary>
    </member>
    <member name="T:APDocConverter.IDocConverterDeprecated">
      <summary>
            Defines the methods/properties that have been deprecated in the DocConverter API.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.LoadRemoteProfile(System.String)">
      <summary>
            Sets the IP Address for a remote system on which DocConverter is installed, loading the default configuration profile for that system.
            </summary>
      <remarks>Deprecated. Do not use.</remarks>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The ip address of the server.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns 0 if success, else otherwise.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.BeginMoveToErrors(System.Int32)">
      <summary>
            Moves file to error. Similar to MoveToErrors, but invokes the method asynchronously.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="maxWait">Type: <see cref="T:System.Int32" /><para>Maximum wait time in second(s).</para></param>
      <returns>Type: <see cref="T:System.IAsyncResult" /><para>Returns the status of the asychronous operation.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.EndMoveToErrors(System.IAsyncResult)">
      <summary>
            Ends the error file move.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="asyncResult">Type: <see cref="T:System.IAsyncResult" /><para></para></param>
      <returns>Type: <see cref="T:System.Boolean" /></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.MoveToErrors(System.Int32)">
      <summary>
            Moves the last submitted file to error location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="maxWait">Type: <see cref="T:System.Int32" /><para>Maximum wait time in second(s).</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Returns the success of the move operation.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.RetrieveFile(System.String,System.Int64,System.String,System.String)">
      <summary>
            Retrieves a file from a remote location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address to the server.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number used to connect to the server.</para></param>
      <param name="remoteFilePath">Type: <see cref="T:System.String" /><para>The remote file path from which to download.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The target file path for the download.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>The result of the download of the file.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetFilterOptions(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Sets the filter options.
            <remarks><para>Deprecated. Do not use.</para></remarks></summary>
      <param name="moveUnresolved">Type: <see cref="T:System.Boolean" /><para>Moves to unresolved.</para></param>
      <param name="filterID1">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID2">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID3">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID4">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID5">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID6">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID7">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID8">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="filterID9">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetOutputSecurity(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The default 40-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetOutputSecurity128(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The 128-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
      <param name="canModifyForms">Type: <see cref="T:System.Int64" /><para>Specifies if existing form fields may be filled in the converted PDF.</para><para>&gt;0 = Form fields can be filled.</para><para>Else = Form fields cannot be filled.</para></param>
      <param name="canExtract">Type: <see cref="T:System.Int64" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para><para>&gt;0 = Text and graphics can be extracted.</para><para>Else = Text and graphics cannot be extracted.</para></param>
      <param name="canAssemble">Type: <see cref="T:System.Int64" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para><para>&gt;0 = Document assembly is allowed.</para><para>Else = Document assembly is not allowed.</para></param>
      <param name="canPrintHiResolution">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para><para>&gt;0 = Can print in high-level representation.</para><para>Else = Will not print in high-level representation.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetSecurityOptions(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The default 40-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetSecurityOptions128(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The 128-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
      <param name="canFillInFormFields">Type: <see cref="T:System.Int64" /><para>Specifies if existing form fields may be filled in the converted PDF.</para><para>&gt;0 = Form fields can be filled.</para><para>Else = Form fields cannot be filled.</para></param>
      <param name="canMakeAccessible">Type: <see cref="T:System.Int64" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para><para>&gt;0 = Text and graphics can be extracted.</para><para>Else = Text and graphics cannot be extracted.</para></param>
      <param name="canAssemble">Type: <see cref="T:System.Int64" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para><para>&gt;0 = Document assembly is allowed.</para><para>Else = Document assembly is not allowed.</para></param>
      <param name="canPrintHiResolution">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para><para>&gt;0 = Can print in high-level representation.</para><para>Else = Will not print in high-level representation.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetViewMode(System.Int64,System.Int64,System.String)">
      <summary>
            Set the viewing mode of the output PDF.
            </summary>
      <param name="initialViewMode">Type: <see cref="T:System.Int64" /><para>The initial view for the output PDF:</para><para>0 = Normal (Default)</para><para>1 = Show Outlines. Bookmarks panel is visible and all child bookmarks are expanded.</para><para>2 = Show Thumbnails. Pages panel is visible.</para><para>3 = Full Screen. The output PDF is displayed in full screen mode upon opening.</para></param>
      <param name="pageNumber">Type: <see cref="T:System.Int64" /><para>The number of the page to be displayed in the initial view.</para></param>
      <param name="pdfView">Type: <see cref="T:System.String" /><para>The PDF view applied to the output PDF.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns 0</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.Submit(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
      <summary>
            Converts the input file to a PDF.
            <remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" />.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The server IP address to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number used to connect the server.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>The path to the input file to be converted.</para></param>
      <param name="outputDirectory">Type: <see cref="T:System.String" /><para>The directory path to the output directory.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the error directory.</para></param>
      <param name="originalsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the original directory.</para></param>
      <param name="scriptName">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="scriptLang">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="supportsZip">Type: <see cref="T:System.Boolean" /><para>Not used.</para></param>
      <param name="processorOptions">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns the status of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.CheckStatusCOM(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
            Returns the status of the last Submit method call.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>Unused.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="convertedDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the last submit return code. Else, returns 1.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.LoadConfigurationCOM(System.String)">
      <summary>
            Loads a conversion configuration from <paramref name="configFile" />.
            </summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to load.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates whether the load attempt was successful.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.RetrieveFileCOM(System.String,System.Int32,System.String,System.String)">
      <summary>
            Retrieves a file from a remote location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address to the server.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number used to connect to the server.</para></param>
      <param name="remoteFilePath">Type: <see cref="T:System.String" /><para>The remote file path from which to download.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The target file path for the download.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>The result of the download of the file.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SetViewModeCOM(System.Int32,System.Int32,System.String)">
      <summary>
            Set the viewing mode of the output PDF.
            </summary>
      <param name="initialViewMode">Type: <see cref="T:System.Int32" /><para>The initial view for the output PDF:</para><para>0 = Normal (Default)</para><para>1 = Show Outlines. Bookmarks panel is visible and all child bookmarks are expanded.</para><para>2 = Show Thumbnails. Pages panel is visible.</para><para>3 = Full Screen. The output PDF is displayed in full screen mode upon opening.</para></param>
      <param name="pageNumber">Type: <see cref="T:System.Int32" /><para>The number of the page to be displayed in the initial view.</para></param>
      <param name="pdfView">Type: <see cref="T:System.String" /><para>The PDF view applied to the output PDF.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.SubmitCOM(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
      <summary>
            Converts the input file to a PDF.
            <remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" />.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The server IP address to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number used to connect the server.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>The path to the input file to be converted.</para></param>
      <param name="outputDirectory">Type: <see cref="T:System.String" /><para>The directory path to the output directory.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the error directory.</para></param>
      <param name="originalsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the original directory.</para></param>
      <param name="scriptName">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="scriptLang">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="supportsZip">Type: <see cref="T:System.Boolean" /><para>Not used.</para></param>
      <param name="processorOptions">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the status of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverterDeprecated.TransmitFileCOM(System.String,System.Int32,System.String,System.String)">
      <summary>
            Transmit the local file to the server.
            </summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address of the server to which the file is transmitted.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number to the server.</para></param>
      <param name="fileToTransmit">Type: <see cref="T:System.String" /><para>The path to the local file to be uploaded.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The path to which the remote file will be uploaded.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the status code of the transmit operation.</para></returns>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.NewDocumentName">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name of the output file after the conversion.</para><remarks><para>Deprecated. Specify the output filename in the Convert methods.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.FromPDFFormat">
      <summary>
            Type: <see cref="T:APDocConverter.FromPDFFunction" /><para>Specificies the format into which the input PDF is converted.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFA">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion will output to PDF/A.</para><remarks><para>Deprecated. Consider using <see cref="P:APDocConverter.DocConverter.Format" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFAuthor">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF author in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFKeywords">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF keywords in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFSubject">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF subject in the Document Info.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFTimeout">
      <summary>
            Type: <see cref="T:System.Int64" /><para>Specifies how many seconds before a conversion request will time out.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFTitle">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF title, in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.StatusTimeout">
      <summary>
            Type: <see cref="T:System.Int64" /><para>Specifies the timeout for the conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" /> or <see cref="P:ADK.API.TimeoutSpan" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.DebugMode">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Enables debug logging with conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Debug" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.LinearizeDocument">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the output file should be linearized.</para><remarks><para>Deprecated. Consider using <see cref="P:APDocConverter.DocConverter.LinearizePDF" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.UseLegacyReturnCode">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Converts to legacy return code for the deprecated Submit method.</para><remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" /> and avoid this property.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.PDFTimeoutCOM">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies how many seconds before a conversion request will time out.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.IDocConverterDeprecated.StatusTimeoutCOM">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the timeout for the conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" /> or <see cref="P:ADK.API.TimeoutSpan" />.</para></remarks></summary>
    </member>
    <member name="T:APDocConverter.IDocConverter">
      <summary>
            Defines the methods/properties associated with the DocConverter API.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverter.OpenRemoteConnection(System.String,System.Int32)">
      <summary>
            Specifies the IP address and port number to connect to.
            </summary>
      <param name="ipAddress">Type: <see cref="T:System.String" /><para>The IP Address of the server to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number of the server to connect to.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.CloseRemoteConnection">
      <summary>
            Clears the server connection settings.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverter.ConvertToPDF(System.String,System.String)">
      <summary>
            Converts the input file to a PDF.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The input file to be converted.</para></param>
      <param name="outputPDF">Type: <see cref="T:System.String" /><para>Optional. The filename of the output PDF. If not specified, the filename of the input will be used.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverter.ConvertFromPDF(System.String,APDocConverter.FromPDFFunction,System.String)">
      <summary>
            Converts PDF into a specified format.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The file path of the input PDF to be converted.</para></param>
      <param name="function">Type: <see cref="T:APDocConverter.FromPDFFunction" /><para>The format to convert the input PDF into. If not specified, will use the default server settings.</para></param>/// 
            <param name="outputFile">Type: <see cref="T:System.String" /><para>The filename of the output file to be generated. If not specified, the filename of the input will be used.</para></param><returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns></member>
    <member name="M:APDocConverter.IDocConverter.VerifyPDFA(System.String,System.String,APDocConverter.PDFAComplianceLevel)">
      <summary>
            Verify the input PDF with the specified PDF/A compliance level.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The input file to be verified.</para></param>
      <param name="outputFile">Type: <see cref="T:System.String" /><para>Optional. The filename of the log file of the PDF/A verification. If not specified, the filename of the input will be used.</para></param>
      <param name="level">Type: <see cref="P:APDocConverter.IDocConverter.PDFAComplianceLevel" /><para>Optional. Specifies the PDF/A compliance level used for the verification. If not specified, will use the default server settings.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetWordExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Word.WordCreateBookmarks,APDocConverter.Conversion.Office.Word.WordTrackedChanges,APDocConverter.Conversion.Office.IncludeDocumentStructureTags,APDocConverter.Conversion.Office.Word.WordBitmapMissingFont)">
      <summary>
            Sets the export options for the Microsoft Word converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="wordBookmarks">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordCreateBookmarks" /><para>Specifies whether to include the bookmarks of the document.</para></param>
      <param name="trackedChanges">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordTrackedChanges" /><para>Specifies whether tracked changes of the document should be visible.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
      <param name="bitmapMissingFont">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont" /><para>Specifies whether to bitmap text, when font is unable to be embedded.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetWordPrintOptions(APDocConverter.Conversion.Office.Word.WordPrintOutItem)">
      <summary>
            Sets the print options for the Microsoft Word converter.
            </summary>
      <param name="printOutItem">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordPrintOutItem" /><para>Specifies the type of items to print out with the document.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetExcelExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Excel.PrintAllWorksheet)">
      <summary>
            Sets the export options for the Microsoft Excel converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="printAllWorksheet">Type: <see cref="T:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet" /><para>Specifies whether to print all the worksheets.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetExcelPrintOptions(APDocConverter.Conversion.Office.Excel.PrintAllWorksheet)">
      <summary>
            Sets the print options for the Microsoft Excel converter.
            </summary>
      <param name="printAllWorksheet">Type: <see cref="T:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet" /><para>Specifies whether to print all the worksheets.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetPowerPointExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.PowerPoint.FrameSlides,APDocConverter.Conversion.Office.PowerPoint.OutputType,APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft PowerPoint converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="frameSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.FrameSlides" /><para>Specifies whether the slides should be bordered by a frame.</para></param>
      <param name="outputType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.OutputType" /><para>Specifies the output type of the slides.</para></param>
      <param name="printHiddenSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides" /><para>Specifies whether to print hidden slides.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetPowerPointPrintOptions(APDocConverter.Conversion.Office.PowerPoint.FrameSlides,APDocConverter.Conversion.Office.PowerPoint.OutputType,APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides,APDocConverter.Conversion.Office.PowerPoint.PrintColorType)">
      <summary>
            Sets the print options for the Microsoft PowerPoint converter.
            </summary>
      <param name="frameSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.FrameSlides" /><para>Specifies whether the slides should be bordered by a frame.</para></param>
      <param name="outputType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.OutputType" /><para>Specifies the output type of the slides.</para></param>
      <param name="printHiddenSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides" /><para>Specifies whether to print hidden slides.</para></param>
      <param name="printColorType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintColorType" /><para>Specifies whether to print out in color.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetVisioExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Visio.VisioColorAsBlack,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft Visio converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="colorAsBlack">Type: <see cref="T:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack" /><para>Specifies whether to convert colors into black.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetVisioPrintOptions(APDocConverter.Conversion.Office.Visio.VisioColorAsBlack)">
      <summary>
            Sets the print options for the Microsoft Visio converter.
            </summary>
      <param name="colorAsBlack">Type: <see cref="T:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack" /><para>Specifies whether to convert color into black.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetPublisherExportOptions(APDocConverter.Conversion.Office.Publisher.OutputIntent,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft Publisher converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.Publisher.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetLibreOfficeExportOptions(APDocConverter.Conversion.LibreOffice.CreatePDFForm,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the LibreOffice converter.
            </summary>
      <param name="createPdfForm">Type: <see cref="T:APDocConverter.Conversion.LibreOffice.CreatePDFForm" /><para>Specifies whether to export the form objects.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetTIFFConversionOptions(APDocConverter.Conversion.TIFFToPDFIgnoreOrientation,APDocConverter.Conversion.TIFFToPDFIgnoreCompression)">
      <summary>
            Sets the conversion options for TIFF to PDF conversion.
            </summary>
      <param name="ignoreOrientation">Type: <see cref="T:APDocConverter.Conversion.TIFFToPDFIgnoreOrientation" /><para>Specifies whether to ignore the orientation defined in the TIFF file.</para></param>
      <param name="ignoreCompression">Type: <see cref="T:APDocConverter.Conversion.TIFFToPDFIgnoreCompression" /><para>Specifies whether to ignore the compression defined in the TIFF file.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.AttachOriginal(System.Int32,System.Int32,APDocConverter.EmbedIcon,System.Boolean,System.String,System.String,System.String)">
      <summary>
            Attach the original input file into the output PDF.
            </summary>
      <param name="horizontalPosition">Type: <see cref="T:System.Int32" /><para>The horizontal location of the icon, starting from the left.</para></param>
      <param name="verticalPosition">Type: <see cref="T:System.Int32" /><para>The vertical location of the icon, starting from the bottom.</para></param>
      <param name="icon">Type: <see cref="T:APDocConverter.EmbedIcon" /><para>The type of icon to be used for the attachment.</para></param>
      <param name="visibility">Type: <see cref="T:System.Boolean" /><para>Specifies whether or not the icon to be visible.</para></param>
      <param name="color">Type: <see cref="T:System.String" /><para>Determines the color if the icon based on hexidecimal. (Example: #000000 is black)</para></param>
      <param name="author">Type: <see cref="T:System.String" /><para>The author information for the attachment.</para></param>
      <param name="subject">Type: <see cref="T:System.String" /><para>The subject information for the attachment.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.ClearAttachFiles">
      <summary>
            Clears all file attached by the method <see cref="M:APDocConverter.IDocConverter.AttachOriginal(System.Int32,System.Int32,APDocConverter.EmbedIcon,System.Boolean,System.String,System.String,System.String)" />.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverter.AddConverterOption(System.String,System.String)">
      <summary>
            Adds a custom converter option into the settings.
            </summary>
      <param name="optionName">Type: <see cref="T:System.String" /><para>Name of the option</para></param>
      <param name="optionValue">Type: <see cref="T:System.String" /><para>The value for the option</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.RemoveConverterOption(System.String)">
      <summary>
            Deletes a custom converter option, if exists.
            </summary>
      <param name="optionName">Type: <see cref="T:System.String" /><para>Name of the option to delete</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.ClearConverterOptions">
      <summary>
            Clears all custom converter options.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverter.SetClientCredentials(System.String,System.String,System.String)">
      <summary>
            Set the credentials for the connection to the server.
            </summary>
      <param name="username">Type: <see cref="T:System.String" /><para>The username of the account.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password of the account.</para></param>
      <param name="domain">Type: <see cref="T:System.String" /><para>The domain of the account.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.ClearCredentials">
      <summary>
            Clears the specified credentials.
            </summary>
    </member>
    <member name="M:APDocConverter.IDocConverter.LoadConfiguration(System.String)">
      <summary>
            Loads a conversion configuration from <paramref name="configFile" />.
            </summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to load.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Indicates whether the load attempt was successful.</para></returns>
    </member>
    <member name="M:APDocConverter.IDocConverter.SaveConfiguration(System.String)">
      <summary>
            Saves a conversion configuration from <paramref name="configFile" />.
            </summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to save.</para></param>
    </member>
    <member name="M:APDocConverter.IDocConverter.TransmitFile(System.String,System.Int64,System.String,System.String)">
      <summary>
            Transmit the local file to the server.
            </summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address of the server to which the file is transmitted.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number to the server.</para></param>
      <param name="fileToTransmit">Type: <see cref="T:System.String" /><para>The path to the local file to be uploaded.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The path to which the remote file will be uploaded.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns the status code of the transmit operation.</para></returns>
    </member>
    <member name="P:APDocConverter.IDocConverter.PredefinedSetting">
      <summary>
            Type: <see cref="T:APDocConverter.PredefinedConfiguration" /><para>Specifies which predefined PDF setting, if any, should be used when creating the output PDF. (Print Only)</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.SavePostScript">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion PostScript should be saved after the conversion completes. (Print only)</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.PDFConversionType">
      <summary>
            Type: <see cref="T:APDocConverter.Conversion.ConversionToPDFType" /><para>Specifies the type of PDF conversion to be used.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.PDFAComplianceLevel">
      <summary>
            Type: <see cref="P:APDocConverter.IDocConverter.PDFAComplianceLevel" /><para>Specifies what PDF/A compliance level to be used for PDF/A conversion.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.ArchiveProcessing">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Determines whether to extract archive files.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.ArchiveFilePassword">
      <summary>
            Type: <see cref="T:System.String" /><para>Specify the password for the archive file, if needed.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.EmailAttachmentProcessing">
      <summary>
            Type: <see cref="T:APDocConverter.EmailProcess" /><para>Determines whether to extract and convert email attachments.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.DocumentPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the document password to be used for opening the input document.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.ToPDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies a PDF to PDF conversion, during which the current PDF settings are applied to the submitted file.</para></summary>
    </member>
    <member name="P:APDocConverter.IDocConverter.UseIntelligentPDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion will use Intelligent PDF.</para></summary>
    </member>
    <member name="T:APDocConverter.DocConverter">
      <summary>
            DocConverter API.
            </summary>
    </member>
    <member name="T:APDocConverter.DocConverter.MoveInputReturn">
      <summary>
            Type: <see cref="T:APDocConverter.DocConverter.MoveInputReturn" /><para>Deprecated. The status of the move command.</para></summary>
    </member>
    <member name="F:APDocConverter.DocConverter._ConversionRequest">
      <summary>
            Type: <see cref="T:DCXml.activePDF.DocConverter.ConvertFileRequest" /><para>The conversion request object to be used in the conversion process.</para></summary>
    </member>
    <member name="F:APDocConverter.DocConverter._ServerIpAddress">
      <summary>
            Type: <see cref="T:System.String" /><para>The IP address of the server to be connected to.</para></summary>
    </member>
    <member name="F:APDocConverter.DocConverter._ServerPortNumber">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The Port number of the connection to the server.</para></summary>
    </member>
    <member name="M:APDocConverter.DocConverter.#ctor">
      <summary>
            Creates an instance of <see cref="T:APDocConverter.DocConverter" />.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.InitializeConversionSettings">
      <summary>
            Initializes the conversion settings.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.FetchConvertFileRequest(System.Boolean)">
      <summary>
            Fetches the convert file request. Contains all the properties set by the API.
            </summary>
      <param name="toPDF">
        <para>Type: <see cref="T:System.Boolean" />Determine if it is ToPDF or not.</para>
      </param>
      <returns>
        <para>Type: <see cref="T:DCXml.activePDF.DocConverter.ConvertFileRequest" />Returns the convert file request with the settings.</para>
      </returns>
    </member>
    <member name="M:APDocConverter.DocConverter.FetchPDFConversionOptions">
      <summary>
            Fetches the PDF profile settings.
            </summary>
      <returns>Type: <see cref="T:DCXml.activePDF.PDF.CtPDFConversionOptions" /><para>Returns the PDF profile settings.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.RunConvertFileRequest(System.String)">
      <summary>
            Processes a file conversion request, as outlined in <paramref name="xml" />.
            </summary>
      <param name="xml">Type: <see cref="T:System.String" /><para>String containing the xml associated with the conversion request.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>Details the success/failures of the conversion request.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.UploadFile(System.String,System.String)">
      <summary>
            Uploads the file.
            </summary>
      <param name="filePath">Type: <see cref="T:System.String" /><para>The input file to be uploaded.</para></param>
      <param name="destinationFilename">Type: <see cref="T:System.String" /><para>The filename of the destination file on the server.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.DocConverterStatus" /><para>Returns the status of the operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.DownloadFile(System.String,System.String)">
      <summary>
            Downloads the file from remote location.
            </summary>
      <param name="remoteFile">The file path to the file in the remote location.</param>
      <param name="targetFile">The file path to the download location.</param>
      <returns>Type: <see cref="T:System.String" /><para>The status of the download operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.MoveFile(System.String,System.String,System.Int32)">
      <summary>
            Attempts to move the <paramref name="srcFile" /> to the <paramref name="destFile" />. The attempt will last until <paramref name="waitTime" /> is exhausted, or the move is successful.
            </summary>
      <param name="srcFile">Type: <see cref="T:System.String" /><para>The full path of the file to move.</para></param>
      <param name="destFile">Type: <see cref="T:System.String" /><para>The full path of the desired location to move the <paramref name="srcFile" /> to.</para></param>
      <param name="waitTime">Type: <see cref="T:System.String" /><para>The maximum time, in seconds, allowed for the move to complete. <see cref="F:System.Int32.MaxValue" /> indicates the move has no maximum limits.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True, if the file was moved.</para><para>False, if the file was unable to be moved in the allowed time.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.MoveInputFile(System.String,System.String)">
      <summary>
            Moves the <paramref name="srcFile" /> to <paramref name="destFile" />.
            </summary>
      <param name="srcFile">Type: <see cref="T:System.String" /><para>The full path of the file to move.</para></param>
      <param name="destFile">Type: <see cref="T:System.String" /><para>The full path where the <paramref name="srcFile" /> should be moved to.</para></param>
      <returns>Type: <see cref="T:APDocConverter.DocConverter.MoveInputReturn" /><para>Details the success/failure of the move attempt.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.RetrieveOutputFile(System.String,System.String,System.Boolean)">
      <summary>
            Upload if there is a conflicting output file, used for overwrite method handling.
            </summary>
      <param name="outputFilename">The output file location</param>
      <param name="targetFilename">The name of the file in the remote location</param>
      <param name="isRemote">Specifies if the conversion is remote or local.</param>
      <returns>Type: <see cref="T:DCDK.Results.DocConverterResult" /><para>Returns the status of the retrieving.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.ApplyPDFSecurity(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Initializes security properties for subsequent conversions to PDF.
            </summary>
      <param name="encryptionLength">Type: <see cref="T:System.Int32" /><para>The length of the encryption</para><remarks><para>Currently, only 40 and 128 are supported values.</para></remarks></param>
      <param name="encryptionRevision">Type: <see cref="T:System.Int32" /><para>The revision to use for the encryption.</para></param>.
            <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param><param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param><param name="canPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param><param name="canEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param><param name="canCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param><param name="canAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param><param name="canFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param><param name="canMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param><param name="canAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param><param name="printHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param></member>
    <member name="M:APDocConverter.DocConverter.ConvertToLegacyDocConverterStatus(DCDK.Results.DocConverterStatus)">
      <summary>
        <para>Converts <see cref="T:DCDK.Results.DocConverterStatus" /> to legacy <see cref="T:System.Int64" /> return code.</para>
      </summary>
      <param name="status">Type: <see cref="T:DCDK.Results.DocConverterStatus" /><para>DocConverter status to be converted.</para></param>
      <returns>Type: <see cref="T:System.Int64" />The legacy return code to be converted.</returns>
    </member>
    <member name="M:APDocConverter.DocConverter.CheckStatus(System.String,System.Int64,System.String,System.String,System.String)">
      <summary>
            Returns the status of the last Submit method call.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>Unused.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="convertedDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns the last submit return code. Else, returns 1.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SetWordExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Word.WordCreateBookmarks,APDocConverter.Conversion.Office.Word.WordTrackedChanges,APDocConverter.Conversion.Office.IncludeDocumentStructureTags,APDocConverter.Conversion.Office.Word.WordBitmapMissingFont)">
      <summary>
            Sets the export options for the Microsoft Word converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="wordBookmarks">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordCreateBookmarks" /><para>Specifies whether to include the bookmarks of the document.</para></param>
      <param name="trackedChanges">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordTrackedChanges" /><para>Specifies whether tracked changes of the document should be visible.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
      <param name="bitmapMissingFont">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordBitmapMissingFont" /><para>Specifies whether to bitmap text, when font is unable to be embedded.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetWordPrintOptions(APDocConverter.Conversion.Office.Word.WordPrintOutItem)">
      <summary>
            Sets the print options for the Microsoft Word converter.
            </summary>
      <param name="printOutItem">Type: <see cref="T:APDocConverter.Conversion.Office.Word.WordPrintOutItem" /><para>Specifies the type of items to print out with the document.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetExcelExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Excel.PrintAllWorksheet)">
      <summary>
            Sets the export options for the Microsoft Excel converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="printAllWorksheet">Type: <see cref="T:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet" /><para>Specifies whether to print all the worksheets.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetExcelPrintOptions(APDocConverter.Conversion.Office.Excel.PrintAllWorksheet)">
      <summary>
            Sets the print options for the Microsoft Excel converter.
            </summary>
      <param name="printAllWorksheet">Type: <see cref="T:APDocConverter.Conversion.Office.Excel.PrintAllWorksheet" /><para>Specifies whether to print all the worksheets.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetPowerPointExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.PowerPoint.FrameSlides,APDocConverter.Conversion.Office.PowerPoint.OutputType,APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft PowerPoint converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="frameSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.FrameSlides" /><para>Specifies whether the slides should be bordered by a frame.</para></param>
      <param name="outputType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.OutputType" /><para>Specifies the output type of the slides.</para></param>
      <param name="printHiddenSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides" /><para>Specifies whether to print hidden slides.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetPowerPointPrintOptions(APDocConverter.Conversion.Office.PowerPoint.FrameSlides,APDocConverter.Conversion.Office.PowerPoint.OutputType,APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides,APDocConverter.Conversion.Office.PowerPoint.PrintColorType)">
      <summary>
            Sets the print options for the Microsoft PowerPoint converter.
            </summary>
      <param name="frameSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.FrameSlides" /><para>Specifies whether the slides should be bordered by a frame.</para></param>
      <param name="outputType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.OutputType" /><para>Specifies the output type of the slides.</para></param>
      <param name="printHiddenSlides">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintHiddenSlides" /><para>Specifies whether to print hidden slides.</para></param>
      <param name="printColorType">Type: <see cref="T:APDocConverter.Conversion.Office.PowerPoint.PrintColorType" /><para>Specifies whether to print out in color.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetVisioExportOptions(APDocConverter.Conversion.Office.OutputIntent,APDocConverter.Conversion.Office.Visio.VisioColorAsBlack,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft Visio converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="colorAsBlack">Type: <see cref="T:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack" /><para>Specifies whether to convert colors into black.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetVisioPrintOptions(APDocConverter.Conversion.Office.Visio.VisioColorAsBlack)">
      <summary>
            Sets the print options for the Microsoft Visio converter.
            </summary>
      <param name="colorAsBlack">Type: <see cref="T:APDocConverter.Conversion.Office.Visio.VisioColorAsBlack" /><para>Specifies whether to convert color into black.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetPublisherExportOptions(APDocConverter.Conversion.Office.Publisher.OutputIntent,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the Microsoft Publisher converter.
            </summary>
      <param name="outputIntent">Type: <see cref="T:APDocConverter.Conversion.Office.Publisher.OutputIntent" /><para>Specifies the output intent of the conversion.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetLibreOfficeExportOptions(APDocConverter.Conversion.LibreOffice.CreatePDFForm,APDocConverter.Conversion.Office.IncludeDocumentStructureTags)">
      <summary>
            Sets the export options for the LibreOffice converter.
            </summary>
      <param name="createPdfForm">Type: <see cref="T:APDocConverter.Conversion.LibreOffice.CreatePDFForm" /><para>Specifies whether to export the form objects.</para></param>
      <param name="includeTags">Type: <see cref="T:APDocConverter.Conversion.Office.IncludeDocumentStructureTags" /><para>Specifies whether include additional data to help screen readers.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetTIFFConversionOptions(APDocConverter.Conversion.TIFFToPDFIgnoreOrientation,APDocConverter.Conversion.TIFFToPDFIgnoreCompression)">
      <summary>
            Sets the conversion options for TIFF to PDF conversion.
            </summary>
      <param name="ignoreOrientation">Type: <see cref="T:APDocConverter.Conversion.TIFFToPDFIgnoreOrientation" /><para>Specifies whether to ignore the orientation defined in the TIFF file.</para></param>
      <param name="ignoreCompression">Type: <see cref="T:APDocConverter.Conversion.TIFFToPDFIgnoreCompression" /><para>Specifies whether to ignore the compression defined in the TIFF file.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetFromPDFOptions(APDocConverter.FromPDFOptions)">
      <summary>
            Sets the export options for conversion from PDF to various types.
            </summary>
      <param name="options">Type: <see cref="T:APDocConverter.FromPDFOptions" /><para>Type: <see cref="T:APDocConverter.FromPDFOptions" /><para>Contains all the export options for 'FromPDF' conversion.</para></para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.AttachOriginal(System.Int32,System.Int32,APDocConverter.EmbedIcon,System.Boolean,System.String,System.String,System.String)">
      <summary>
            Embeds the original input file into the output PDF.
            </summary>
      <param name="horizontalPosition">Type: <see cref="T:System.Int32" /><para>The horizontal location of the icon, starting from the left.</para></param>
      <param name="verticalPosition">Type: <see cref="T:System.Int32" /><para>The vertical location of the icon, starting from the bottom.</para></param>
      <param name="icon">Type: <see cref="T:APDocConverter.EmbedIcon" /><para>The type of icon to be used for the attachment.</para></param>
      <param name="visibility">Type: <see cref="T:System.Boolean" /><para>Specifies whether or not the icon to be visible.</para></param>
      <param name="color">Type: <see cref="T:System.String" /><para>Determines the color if the icon based on hexidecimal. (Example: #000000 is black)</para></param>
      <param name="author">Type: <see cref="T:System.String" /><para>The author information for the attachment.</para></param>
      <param name="subject">Type: <see cref="T:System.String" /><para>The subject information for the attachment.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.ClearAttachFiles">
      <summary>
            Clears all file attached by the method <see cref="M:APDocConverter.DocConverter.AttachOriginal(System.Int32,System.Int32,APDocConverter.EmbedIcon,System.Boolean,System.String,System.String,System.String)" />.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.AddConverterOption(System.String,System.String)">
      <summary>
            Adds a custom converter option into the settings.
            </summary>
      <param name="optionName">Type: <see cref="T:System.String" /><para>Name of the option</para></param>
      <param name="optionValue">Type: <see cref="T:System.String" /><para>The value for the option</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.RemoveConverterOption(System.String)">
      <summary>
            Deletes a custom converter option, if exists.
            </summary>
      <param name="optionName">Type: <see cref="T:System.String" /><para>Name of the option to delete</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.ClearConverterOptions">
      <summary>
            Clears all custom converter options.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.SetMetadata(System.String,System.String,System.String,System.String)">
      <summary>
            Applies the user-specified <paramref name="author" />, <paramref name="keywords" />, <paramref name="subject" />, and <paramref name="title" /> to the output PDF or PDF/A document information.
            </summary>
      <param name="author">Type: <see cref="T:System.String" /><para>The value to use as the document author.</para></param>
      <param name="keywords">Type: <see cref="T:System.String" /><para>The value to use as the document keywords.</para></param>
      <param name="subject">Type: <see cref="T:System.String" /><para>The value to use as the document subject.</para></param>
      <param name="title">Type: <see cref="T:System.String" /><para>The value to use as the document title.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)">
      <summary>
            Converts the input file to a PDF.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The input file to be converted.</para></param>
      <param name="outputPDF">Type: <see cref="T:System.String" /><para>Optional. The filename of the output PDF. If not specified, the filename of the input will be used.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.ConvertFromPDF(System.String,APDocConverter.FromPDFFunction,System.String)">
      <summary>
            Converts PDF into a specified format.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The file path of the input PDF to be converted.</para></param>
      <param name="function">Type: <see cref="T:APDocConverter.FromPDFFunction" /><para>The format into which the input PDF is converted. If not specified, will use the default server settings.</para></param>
      <param name="outputFile">Type: <see cref="T:System.String" /><para>The filename of the output file to be generated. If not specified, the filename of the input will be used.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.VerifyPDFA(System.String,System.String,APDocConverter.PDFAComplianceLevel)">
      <summary>
            Verify the input PDF with the specified PDF/A compliance level.
            </summary>
      <param name="inputPath">Type: <see cref="T:System.String" /><para>The input file to be verified.</para></param>
      <param name="outputFile">Type: <see cref="T:System.String" /><para>Optional. The filename of the log file of the PDF/A verification. If not specified, the filename of the input will be used.</para></param>
      <param name="level">Type: <see cref="P:APDocConverter.DocConverter.PDFAComplianceLevel" /><para>Optional. Specifies the PDF/A compliance level for used for the verification. If not specified, will use the default server settings.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>The result of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.OpenRemoteConnection(System.String,System.Int32)">
      <summary>
            Specifies the IP address and port number to connect to.
            </summary>
      <param name="ipAddress">Type: <see cref="T:System.String" /><para>The IP Address of the server to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number of the server to connect to.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.CloseRemoteConnection">
      <summary>
            Clears the server connection settings.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.LoadRemoteProfile(System.String)">
      <summary>
            Sets the IP Address for a remote system on which DocConverter is installed, loading the default configuration profile for that system.
            </summary>
      <remarks>Deprecated. Do not use.</remarks>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The ip address of the server.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns 0 if success, else otherwise.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.BeginMoveToErrors(System.Int32)">
      <summary>
            Moves file to error. Similar to MoveToErrors, but invokes the method asynchronously.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="maxWait">Type: <see cref="T:System.Int32" /><para>Maximum wait time in second(s).</para></param>
      <returns>Type: <see cref="T:System.IAsyncResult" /><para>Returns the status of the asychronous operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.MoveToErrors(System.Int32)">
      <summary>
            Moves the last submitted file to error location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="maxWait">Type: <see cref="T:System.Int32" /><para>Maximum wait time in second(s).</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Returns the success of the move operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.RetrieveFile(System.String,System.Int64,System.String,System.String)">
      <summary>
            Retrieves a file from a remote location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address to the server.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number used to connect to the server.</para></param>
      <param name="remoteFilePath">Type: <see cref="T:System.String" /><para>The remote file path from which to download.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The target file path for the download.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>The result of the download of the file.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SetFilterOptions(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Sets the filter options.
            <remarks><para>Deprecated. Do not use.</para></remarks></summary>
      <param name="MoveUnresolved">Type: <see cref="T:System.Boolean" /><para>Moves to unresolved.</para></param>
      <param name="FilterID1">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID2">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID3">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID4">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID5">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID6">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID7">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID8">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
      <param name="FilterID9">Type: <see cref="T:System.String" /><para>The filter ID</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetOutputSecurity(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The default 40-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetOutputSecurity128(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The 128-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
      <param name="canFillInFormFields">Type: <see cref="T:System.Int64" /><para>Specifies if existing form fields may be filled in the converted PDF.</para><para>&gt;0 = Form fields can be filled.</para><para>Else = Form fields cannot be filled.</para></param>
      <param name="canMakeAccessible">Type: <see cref="T:System.Int64" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para><para>&gt;0 = Text and graphics can be extracted.</para><para>Else = Text and graphics cannot be extracted.</para></param>
      <param name="canAssemble">Type: <see cref="T:System.Int64" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para><para>&gt;0 = Document assembly is allowed.</para><para>Else = Document assembly is not allowed.</para></param>
      <param name="canPrintHiResolution">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para><para>&gt;0 = Can print in high-level representation.</para><para>Else = Will not print in high-level representation.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetSecurityOptions(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The default 40-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetSecurityOptions128(System.String,System.String,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion. The 128-bit encryption is used.
            <remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />.</para></remarks></summary>
      <param name="userPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="ownerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="canPrint">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF can be printed.</para><para>&gt;0 = Can be printed.</para><para>Else = Cannot be printed.</para></param>
      <param name="canEdit">Type: <see cref="T:System.Int64" />Specifies if the converted PDF can be edited.
            <para>&gt;0 = Can be edited.</para><para>Else = Cannot be edited.</para></param>
      <param name="canCopy">Specifies if text/graphics from converted PDF can be copied.
            <para>&gt;0 = Can be copied.</para><para>Else = Cannot be copied.</para></param>
      <param name="canAnnotate">Specifies if text annotations can be added/modified in the converted PDF.
            <para>&gt;0 = Annotations can be added and modified.</para><para>Else = Annotations cannot be added or modified.</para></param>
      <param name="canFillInFormFields">Type: <see cref="T:System.Int64" /><para>Specifies if existing form fields may be filled in the converted PDF.</para><para>&gt;0 = Form fields can be filled.</para><para>Else = Form fields cannot be filled.</para></param>
      <param name="canMakeAccessible">Type: <see cref="T:System.Int64" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para><para>&gt;0 = Text and graphics can be extracted.</para><para>Else = Text and graphics cannot be extracted.</para></param>
      <param name="canAssemble">Type: <see cref="T:System.Int64" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para><para>&gt;0 = Document assembly is allowed.</para><para>Else = Document assembly is not allowed.</para></param>
      <param name="canPrintHiResolution">Type: <see cref="T:System.Int64" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para><para>&gt;0 = Can print in high-level representation.</para><para>Else = Will not print in high-level representation.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.SetViewMode(System.Int64,System.Int64,System.String)">
      <summary>
            Set the viewing mode of the output PDF.
            </summary>
      <param name="initialViewMode">Type: <see cref="T:System.Int64" /><para>The initial view for the output PDF:</para><para>0 = Normal (Default)</para><para>1 = Show Outlines. Bookmarks panel is visible and all child bookmarks are expanded.</para><para>2 = Show Thumbnails. Pages panel is visible.</para><para>3 = Full Screen. The output PDF is displayed in full screen mode upon opening.</para></param>
      <param name="pageNumber">Type: <see cref="T:System.Int64" /><para>The number of the page to be displayed in the initial view.</para></param>
      <param name="pdfView">Type: <see cref="T:System.String" /><para>The PDF view applied to the output PDF.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns 0</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.Submit(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
      <summary>
            Converts the input file to a PDF.
            <remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" />.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The server IP address to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number used to connect the server.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>The path to the input file to be converted.</para></param>
      <param name="outputDirectory">Type: <see cref="T:System.String" /><para>The directory path to the output directory.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the error directory.</para></param>
      <param name="originalsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the original directory.</para></param>
      <param name="scriptName">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="scriptLang">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="supportsZip">Type: <see cref="T:System.Boolean" /><para>Not used.</para></param>
      <param name="processorOptions">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns the status of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.TransmitFile(System.String,System.Int64,System.String,System.String)">
      <summary>
            Transmit the local file to the server.
            </summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address of the server to transmit to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int64" /><para>The port number to the server.</para></param>
      <param name="fileToTransmit">Type: <see cref="T:System.String" /><para>The path to the local file to be uploaded.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The path of the remote file location to be uploaded to.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>Returns the status code of the transmit operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.CheckStatusCOM(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
            Returns the status of the last Submit method call.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>Unused.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="convertedDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>Unused.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the last submit return code. Else, returns 1.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.LoadConfigurationCOM(System.String)">
      <summary>
            Loads a conversion configuration from <paramref name="configFile" />.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to load.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates whether the load attempt was successful.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.RetrieveFileCOM(System.String,System.Int32,System.String,System.String)">
      <summary>
            Retrieves a file from a remote location.
            <remarks><para>Deprecated.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address to the server.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number used to connect to the server.</para></param>
      <param name="remoteFilePath">Type: <see cref="T:System.String" /><para>The remote file path from which to download.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The target file path for the download.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>The result of the download of the file.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SetViewModeCOM(System.Int32,System.Int32,System.String)">
      <summary>
            Set the viewing mode of the output PDF.
            </summary>
      <param name="initialViewMode">Type: <see cref="T:System.Int32" /><para>The initial view for the output PDF:</para><para>0 = Normal (Default)</para><para>1 = Show Outlines. Bookmarks panel is visible and all child bookmarks are expanded.</para><para>2 = Show Thumbnails. Pages panel is visible.</para><para>3 = Full Screen. The output PDF is displayed in full screen mode upon opening.</para></param>
      <param name="pageNumber">Type: <see cref="T:System.Int32" /><para>The number of the page to be displayed in the initial view.</para></param>
      <param name="pdfView">Type: <see cref="T:System.String" /><para>The PDF view applied to the output PDF.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SubmitCOM(System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
      <summary>
            Converts the input file to a PDF.
            <remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" />.</para></remarks></summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The server IP address to connect to.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number used to connect the server.</para></param>
      <param name="fileToConvert">Type: <see cref="T:System.String" /><para>The path to the input file to be converted.</para></param>
      <param name="outputDirectory">Type: <see cref="T:System.String" /><para>The directory path to the output directory.</para></param>
      <param name="errorsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the error directory.</para></param>
      <param name="originalsDirectory">Type: <see cref="T:System.String" /><para>The directory path to the original directory.</para></param>
      <param name="scriptName">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="scriptLang">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <param name="supportsZip">Type: <see cref="T:System.Boolean" /><para>Not used.</para></param>
      <param name="processorOptions">Type: <see cref="T:System.String" /><para>Not used.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the status of the conversion.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.TransmitFileCOM(System.String,System.Int32,System.String,System.String)">
      <summary>
            Transmit the local file to the server.
            </summary>
      <param name="serverIPAddress">Type: <see cref="T:System.String" /><para>The IP address of the server to which the file is transmitted.</para></param>
      <param name="portNumber">Type: <see cref="T:System.Int32" /><para>The port number to the server.</para></param>
      <param name="fileToTransmit">Type: <see cref="T:System.String" /><para>The path to the local file to be uploaded.</para></param>
      <param name="destinationFilePath">Type: <see cref="T:System.String" /><para>The path to which the remote file will be uploaded.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns the status code of the transmit operation.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SetClientCredentials(System.String,System.String,System.String)">
      <summary>
            Set the credentials for the connection to the server.
            </summary>
      <param name="username">Type: <see cref="T:System.String" /><para>The username of the account.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password of the account.</para></param>
      <param name="domain">Type: <see cref="T:System.String" /><para>The domain of the account.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.ClearCredentials">
      <summary>
            Clears the specified credentials.
            </summary>
    </member>
    <member name="M:APDocConverter.DocConverter.SaveConfiguration(System.String)">
      <summary>
            Saves a conversion configuration from <paramref name="configFile" />.
            </summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to save.</para></param>
    </member>
    <member name="M:APDocConverter.DocConverter.LoadConfiguration(System.String)">
      <summary>
            Loads a conversion configuration from <paramref name="configFile" />.
            </summary>
      <param name="configFile">Type: <see cref="T:System.String" /><para>The path of the file to load.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates whether the load attempt was successful.</para></returns>
    </member>
    <member name="M:APDocConverter.DocConverter.SetAddonOptions(System.String)">
      <summary>
            Sets the options for the specified add-on converter.
            </summary>
      <param name="addonProperty">Type: <see cref="T:System.Object" /><para>The object with the encapsulated options.</para></param>
      <returns>
        <see cref="T:System.Boolean" />
        <para>Returns true if the options is set. Return false, otherwise.</para>
      </returns>
    </member>
    <member name="P:APDocConverter.DocConverter.LinearizePDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the output file should be linearized.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFAComplianceLevel">
      <summary>
            Type: <see cref="P:APDocConverter.DocConverter.PDFAComplianceLevel" /><para>Specifies what PDF/A compliance level to be used for PDF/A conversion.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.ArchiveProcessing">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Determines whether to extract archive files.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.ArchiveFilePassword">
      <summary>
            Type: <see cref="T:System.String" /><para>Specify the password for the archive file, if needed.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.EmailAttachmentProcessing">
      <summary>
            Type: <see cref="T:APDocConverter.EmailProcess" /><para>Determines whether to extract and convert email attachments.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFConversionType">
      <summary>
            Type: <see cref="T:APDocConverter.Conversion.ConversionToPDFType" /><para>Specifies whether the conversion to PDF will be handled via export or via print.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.DebugMode">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Enables debug logging with conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Debug" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.LinearizeDocument">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the output file should be linearized.</para><remarks><para>Deprecated. Consider using <see cref="P:APDocConverter.DocConverter.LinearizePDF" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.UseLegacyReturnCode">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Converts to legacy return code for the deprecated Submit method.</para><remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.ConvertToPDF(System.String,System.String)" /> and avoid this property.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFAuthor">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF author in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFKeywords">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF keywords in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFTitle">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF title, in the document information.</para><remarks><para>Deprecated. Consider using <see cref="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFSubject">
      <summary>
            Type: <see cref="T:System.String" /><para>The current value used for the PDF subject in the Document Info.</para><remarks><para>Deprecated. Consider using <see cref="M:APDocConverter.DocConverter.SetMetadata(System.String,System.String,System.String,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFA">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion will output to PDF/A.</para><remarks><para>Deprecated. Consider using <see cref="P:APDocConverter.DocConverter.Format" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFTimeout">
      <summary>
            Type: <see cref="T:System.Int64" /><para>Specifies how many seconds before a conversion request will time out.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.StatusTimeout">
      <summary>
            Type: <see cref="T:System.Int64" /><para>Specifies the timeout for the conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" /> or <see cref="P:ADK.API.TimeoutSpan" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PDFTimeoutCOM">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies how many seconds before a conversion request will time out.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.StatusTimeoutCOM">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the timeout for the conversion.</para><remarks><para>Deprecated. Consider using <see cref="P:ADK.API.Timeout" /> or <see cref="P:ADK.API.TimeoutSpan" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.SavePostScript">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion PostScript should be saved after the conversion completes. (Print only)</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.PredefinedSetting">
      <summary>
            Type: <see cref="T:APDocConverter.PredefinedConfiguration" /><para>Specifies which predefined PDF setting, if any, should be used when creating the output PDF. (Print Only)</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.FromPDFFormat">
      <summary>
            Type: <see cref="T:APDocConverter.FromPDFFunction" /><para>Specifies the format for the PDF conversion.</para><remarks><para>Deprecated. Specify the format in the parameter of <see cref="M:APDocConverter.DocConverter.ConvertFromPDF(System.String,APDocConverter.FromPDFFunction,System.String)" />.</para></remarks></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.ToPDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies a PDF to PDF conversion, during which the current PDF settings are applied to the submitted file.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.UseIntelligentPDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion will use Intelligent PDF.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.Format">
      <summary>
            Type: <see cref="T:APDocConverter.OutputFormat" /><para>Specifies whether to output PDF or PDF/A, when performing conversions to PDF.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.DocumentPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the document password to be used for opening the input document.</para></summary>
    </member>
    <member name="P:APDocConverter.DocConverter.NewDocumentName">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name of the output file after the conversion.</para><remarks><para>Deprecated. Specify the output filename in the Convert methods.</para></remarks></summary>
    </member>
    <member name="T:APDocConverter.EmailProcess">
      <summary>
            Handling of email attachments.
            </summary>
    </member>
    <member name="F:APDocConverter.EmailProcess.NotSet">
      <summary>
            Handling of email attachment is not set.
            </summary>
    </member>
    <member name="F:APDocConverter.EmailProcess.ConvertOnlyEmail">
      <summary>
            Do not extract email attachments.
            </summary>
    </member>
    <member name="F:APDocConverter.EmailProcess.ConvertEmailAndAttachments">
      <summary>
            Extract email attachments.
            </summary>
    </member>
    <member name="T:APDocConverter.EmbedIcon">
      <summary>
            Enumerates the icon for the type of notes
            </summary>
    </member>
    <member name="F:APDocConverter.EmbedIcon.Paperclip">
      <summary>
            Paperclip
            </summary>
    </member>
    <member name="F:APDocConverter.EmbedIcon.Graph">
      <summary>
            Graph
            </summary>
    </member>
    <member name="F:APDocConverter.EmbedIcon.Pushpin">
      <summary>
            Push-pin
            </summary>
    </member>
    <member name="F:APDocConverter.EmbedIcon.Tag">
      <summary>
            Tag
            </summary>
    </member>
    <member name="T:APDocConverter.FromPDFFunction">
      <summary>
            Enumerates FromPDF conversion types
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.NotSet">
      <summary>
            Not used or not set.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToWord">
      <summary>
            Microsoft Word document.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToWordDocX">
      <summary>
            Word Microsoft Office Open XML Format document (.docx)
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToExcel">
      <summary>
            Microsoft Excel spreadsheet.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToPowerPoint">
      <summary>
            PowerPoint Microsoft Office Open XML Format presentation (.pptx)
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToHtml">
      <summary>
            Html file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToText">
      <summary>
            Text file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImageBMP">
      <summary>
            BMP image file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImageJPEG">
      <summary>
            JPEG image file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImagePNG">
      <summary>
            PNG image file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImageTIFF">
      <summary>
            TIFF image file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToPDFA">
      <summary>
            PDF/A compliant PDF.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.VerifyPDFA">
      <summary>
            Verifies the PDF/A compliance of the input PDF.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToRTF">
      <summary>
            Rich Text Format.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImageGIF">
      <summary>
            GIF Image file.
            </summary>
    </member>
    <member name="F:APDocConverter.FromPDFFunction.ToImageMultiPageTIFF">
      <summary>
            Multi-Page TIFF file.
            </summary>
    </member>
    <member name="T:APDocConverter.PredefinedConfiguration">
      <summary>
            Enumerates the supported predefined PDF settings
            </summary>
    </member>
    <member name="F:APDocConverter.PredefinedConfiguration.Undefined">
      <summary>
            Setting has not been specified.
            </summary>
    </member>
    <member name="F:APDocConverter.PredefinedConfiguration.Screen">
      <summary>
            Produces a PDF optimized for screen viewing, using reduced image resolution to reduce file size.
            </summary>
    </member>
    <member name="F:APDocConverter.PredefinedConfiguration.Printer">
      <summary>
            Produces a PDF optimized for printing to most home and office printers.
            </summary>
    </member>
    <member name="F:APDocConverter.PredefinedConfiguration.eBook">
      <summary>
            Produces a PDF optimized for eBook usage.
            </summary>
    </member>
    <member name="F:APDocConverter.PredefinedConfiguration.Prepress">
      <summary>
            Produces a PDF optimized for printing to commercial-quality printers, automatically embedding all fonts and using high resolution images.
            </summary>
    </member>
    <member name="T:APDocConverter.ToWordHeadersAndFootersOptions">
      <summary>
            Enumerates the option for creating of the Word headers.
            </summary>
    </member>
    <member name="F:APDocConverter.ToWordHeadersAndFootersOptions.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.ToWordHeadersAndFootersOptions.Detect">
      <summary>
            Attempt to detect and generate headers.
            </summary>
    </member>
    <member name="F:APDocConverter.ToWordHeadersAndFootersOptions.Ignore">
      <summary>
            Ignore the creation of headers.
            </summary>
    </member>
    <member name="F:APDocConverter.ToWordHeadersAndFootersOptions.Remove">
      <summary>
            Removal of the headers.
            </summary>
    </member>
    <member name="T:APDocConverter.ToExcelTablesFromContentOptions">
      <summary>
            Enumerates on the type of content to export from the input PDFs.
            </summary>
    </member>
    <member name="F:APDocConverter.ToExcelTablesFromContentOptions.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.ToExcelTablesFromContentOptions.Default">
      <summary>
            Default DocConverter behavior. Will attempt to extract table contents first. If fails, will extract non-table contents.
            </summary>
    </member>
    <member name="F:APDocConverter.ToExcelTablesFromContentOptions.TablesOnly">
      <summary>
            Extracts only tables.
            </summary>
    </member>
    <member name="F:APDocConverter.ToExcelTablesFromContentOptions.ForceNonTableContent">
      <summary>
            Extracts non-table contents.
            </summary>
    </member>
    <member name="T:APDocConverter.ToImageStitchPagesOptions">
      <summary>
            Enumerates on the whether or not the output images should be stitched together.
            </summary>
    </member>
    <member name="F:APDocConverter.ToImageStitchPagesOptions.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.ToImageStitchPagesOptions.NoStitch">
      <summary>
            Default behavior of no stitching with multiple files.
            </summary>
    </member>
    <member name="F:APDocConverter.ToImageStitchPagesOptions.StitchVertically">
      <summary>
            Stitch images vertically into a single image file.
            </summary>
    </member>
    <member name="F:APDocConverter.ToImageStitchPagesOptions.StitchHorizontally">
      <summary>
            Stitch images horizontally into a single image file.
            </summary>
    </member>
    <member name="T:APDocConverter.FromPDFOptions">
      <summary>
            Contains the properties for conversion from PDF.
            </summary>
    </member>
    <member name="M:APDocConverter.FromPDFOptions.#ctor">
      <summary>
            Creates an instance of <see cref="T:APDocConverter.FromPDFOptions" />.
            </summary>
    </member>
    <member name="P:APDocConverter.FromPDFOptions.ToWordHeadersAndFootersMode">
      <summary>
            Type: <see cref="T:APDocConverter.ToWordHeadersAndFootersOptions" /><para>Specifies the header and footer options.</para></summary>
    </member>
    <member name="P:APDocConverter.FromPDFOptions.ToExcelAutoDetectSeparators">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if automatic detection for decimal should be enabled.</para></summary>
    </member>
    <member name="P:APDocConverter.FromPDFOptions.ToExcelTablesFromContent">
      <summary>
            Type: <see cref="T:APDocConverter.ToExcelTablesFromContentOptions" /><para>Specifies if table contents or non-table contents be included in the conversion.</para></summary>
    </member>
    <member name="P:APDocConverter.FromPDFOptions.ToImagePageDPI">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the DPI of the output image.</para></summary>
    </member>
    <member name="P:APDocConverter.FromPDFOptions.ToImageStitchPages">
      <summary>
            Type: <see cref="T:APDocConverter.ToImageStitchPagesOptions" /><para>Specifies if output images should be stitched together.</para></summary>
    </member>
    <member name="T:APDocConverter.OutputFormat">
      <summary>
            Enumerates the output format type
            </summary>
    </member>
    <member name="F:APDocConverter.OutputFormat.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.OutputFormat.PDF">
      <summary>
            Output to be PDF format.
            </summary>
    </member>
    <member name="F:APDocConverter.OutputFormat.PDFA">
      <summary>
            Output to be PDF-A format.
            </summary>
    </member>
    <member name="T:APDocConverter.PDFAComplianceLevel">
      <summary>
            Enumerates the various PDF/A compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.NotSet">
      <summary>
            Option not set.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_1A">
      <summary>
            Set to PDF/A 1-A compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_1B">
      <summary>
            Set to PDF/A 1-B compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_2A">
      <summary>
            Set to PDF/A 2-A compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_2B">
      <summary>
            Set to PDF/A 2-B compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_2U">
      <summary>
            Set to PDF/A 2-U compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_3A">
      <summary>
            Set to PDF/A 3-A compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_3B">
      <summary>
            Set to PDF/A 3-B compliance level.
            </summary>
    </member>
    <member name="F:APDocConverter.PDFAComplianceLevel.PDFA_3U">
      <summary>
            Set to PDF/A 3-U compliance level.
            </summary>
    </member>
    <member name="T:ADK.activeEnvironment">
      <summary>
            Methods and properties for common IO Environment functionality within activePDF processing.
            </summary>
    </member>
    <member name="T:ADK.activeEnvironment.APDirectory">
      <summary>
            Enumerates the common directories used by multiple activePDF Products.
            </summary>
    </member>
    <member name="F:ADK.activeEnvironment.advWatcher">
      <summary>
            Type: <see cref="T:ADK.Files.FileWatcher" /><para>Monitors the AP_Advanced.xml file for changes/updates.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment.isSafe">
      <summary>
            Type: <see cref="T:System.Threading.EventWaitHandle" /><para>Used to signal multiple threads if the propertiers are safe access.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment._ActivePDFDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to the root directory for activePDF system-wide files.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment._SettingsDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to the directory where activePDF Settings files are stored.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment._TempDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to the directory used for temporary files.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment._LogsDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to the directory used for log files.</para></summary>
    </member>
    <member name="F:ADK.activeEnvironment._ActiveProduct">
      <summary>
            Type: <see cref="T:ADK.APProduct" /><para>Indicates the currently active product.</para></summary>
    </member>
    <member name="M:ADK.activeEnvironment.InitEnvironment">
      <summary>
            Initializes the static class members.
            </summary>
    </member>
    <member name="M:ADK.activeEnvironment.LoadDirectoriesFromXml">
      <summary>
            Loads the current values for system-wide directories, from the AP_Advanced.xml file.
            </summary>
    </member>
    <member name="M:ADK.activeEnvironment.advWatcher_FileChanged(System.Object,ADK.Files.FileChangedArgs)">
      <summary>
            Handles the event fired with AP_Environment.xml is modified.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The class instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:ADK.Files.FileChangedArgs" /><para>Contains data associated with the event.</para></param>
    </member>
    <member name="M:ADK.activeEnvironment.InitializeSettingsDirectory">
      <summary>
            Initializes the path for the activePDF settings directory.
            <remarks><para>If the directory exists in the <see cref="F:System.Environment.SpecialFolder.CommonApplicationData" /> path, then that path is used.</para><para>Otherwise, the standard Windows\activePDF\Settings path is used.</para></remarks></summary>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the current activePDF Settings directory.</para></returns>
    </member>
    <member name="M:ADK.activeEnvironment.GetFolderPath(ADK.activeEnvironment.APDirectory,ADK.APProduct)">
      <summary>
            Retrieves the full path to the directory, specified by the enum value <paramref name="directory" />.
            </summary>
      <param name="directory">Type: <see cref="T:ADK.activeEnvironment.APDirectory" /><para>Specifies the directory whose full path is being requested.</para></param>
      <param name="targetProduct">Type: <see cref="T:ADK.APProduct" /><para>Specifes the target product that the path is for.</para></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="directory" /> is not a member of <see cref="T:ADK.activeEnvironment.APDirectory" />.</exception>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the location specified by <paramref name="directory" />.</para></returns>
    </member>
    <member name="M:ADK.activeEnvironment.GetFolderPath(ADK.activeEnvironment.APDirectory)">
      <summary>
            Retrieves the full path to the directory, specified by the enum value <paramref name="directory" />.
            </summary>
      <param name="directory">Type: <see cref="T:ADK.activeEnvironment.APDirectory" /><para>Specifies the directory whose full path is being requested.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the location specified by <paramref name="directory" />.</para></returns>
    </member>
    <member name="M:ADK.activeEnvironment.GetFolderPath(ADK.activeEnvironment.APDirectory,System.String)">
      <summary>
            Retrieves the full path to the directory, specified by the enum value <paramref name="directory" />.
            </summary>
      <param name="directory">Type: <see cref="T:ADK.activeEnvironment.APDirectory" /><para>Specifies the directory whose full path is being requested.</para></param>
      <param name="targetName">Type: <see cref="T:System.String" /><para>Specifes the target product that the path is for.</para></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="directory" /> is not a member of <see cref="T:ADK.activeEnvironment.APDirectory" />.</exception>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the location specified by <paramref name="directory" />.</para></returns>
    </member>
    <member name="M:ADK.activeEnvironment.GetSettingsPath(System.String,ADK.APProduct)">
      <summary>
            Retrieves the full path to the settings file, whose <paramref name="fileName" /> is provided.
            </summary>
      <param name="fileName">Type: <see cref="T:System.String" /><para>The file name of the settings file whose path is requested.</para></param>
      <param name="targetProduct">Type: <see cref="T:ADK.APProduct" /><para>Specifes the target product that the path is for.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the settings file, using the current settings directory.</para></returns>
    </member>
    <member name="M:ADK.activeEnvironment.GetSettingsPath(System.String,System.String)">
      <summary>
            Retrieves the full path to the settings file, whose <paramref name="fileName" /> is provided.
            </summary>
      <param name="fileName">Type: <see cref="T:System.String" /><para>The file name of the settings file whose path is requested.</para></param>
      <param name="targetName">Type: <see cref="T:System.String" /><para>Specifes the target product that the path is for.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full path to the settings file, using the current settings directory.</para></returns>
    </member>
    <member name="P:ADK.activeEnvironment.ActiveProduct">
      <summary>
            Type: <see cref="T:ADK.APProduct" /><para>Specifies what the active product is, for future environment path calculations.</para></summary>
    </member>
    <member name="P:ADK.activeEnvironment.RootDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the root activePDF directory to use for this instance.</para></summary>
    </member>
    <member name="T:ADK.activeObject">
      <summary>
            Contains the methods/properties that are common to all ADK based objects.
            </summary>
    </member>
    <member name="F:ADK.activeObject._StartObject">
      <summary>
            Type: <see cref="T:ADK.activeStartObject" /><para>Contains the property values required for initialization.</para></summary>
    </member>
    <member name="F:ADK.activeObject._ClassName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name to use with subsequent calls to <see cref="M:ADK.activeObject.GetOrigin(System.String)" />.</para></summary>
    </member>
    <member name="M:ADK.activeObject.#ctor(ADK.activeStartObject)">
      <summary>
            Creates a new instance of <see cref="T:ADK.activeObject" /> with the associated <paramref name="sObj" />.
            </summary>
      <param name="sObj">Type: <see cref="T:ADK.activeStartObject" /><para>Provides the necessary properties for initialization.</para></param>
    </member>
    <member name="M:ADK.activeObject.WriteLogHandler(System.Object,ADK.Diagnostics.WriteLogEventArgs)">
      <summary>
            Default handler for event-driven log requests.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the request originated.</para></param>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the data to be written.</para></param>
    </member>
    <member name="M:ADK.activeObject.WriteDebugLogHandler(System.Object,ADK.Diagnostics.WriteLogEventArgs)">
      <summary>
            Default handler for event-driven debug log requests.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the request originated.</para></param>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the data to be written.</para></param>
    </member>
    <member name="M:ADK.activeObject.GetOrigin(System.String)">
      <summary>
            Gets the <see cref="T:ADK.Results.ResultOrigin" /> associated with the <see cref="F:ADK.activeObject._ClassName" /> and the specified <paramref name="functionName" />.
            </summary>
      <param name="functionName">Type: <see cref="T:System.String" /><para>The name of the target function.</para></param>
      <returns>Type: <see cref="T:ADK.Results.ResultOrigin" /><para>New instance associated with the current class and target function.</para></returns>
    </member>
    <member name="M:ADK.activeObject.GetFolderPath(ADK.activeEnvironment.APDirectory)">
      <summary>
            Gets the <see cref="T:System.String">folder directory</see> associated with <paramref name="directory" /> for the current <see cref="P:ADK.activeObject.Product" />.
            </summary>
      <param name="directory">Type: <see cref="T:ADK.activeEnvironment.APDirectory" /><para>Indicates the directory to grab the path for.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full path of the requested folder.</para></returns>
    </member>
    <member name="M:ADK.activeObject.GetFolderPath(ADK.activeEnvironment.APDirectory,System.String)">
      <summary>
            Gets the <see cref="T:System.String">folder directory</see> associated with <paramref name="directory" /> for the current <see cref="P:ADK.activeObject.Product" />.
            </summary>
      <param name="directory">Type: <see cref="T:ADK.activeEnvironment.APDirectory" /><para>Indicates the directory to grab the path for.</para></param>
      <param name="targetName">Type: <see cref="T:System.String" /><para>Specifes the target product that the path is for.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full path of the requested folder.</para></returns>
    </member>
    <member name="M:ADK.activeObject.GetSettingsPath">
      <summary>
            Gets the folder path associated with the settings for the current <see cref="P:ADK.activeObject.Product" />.
            </summary>
      <returns>Type: <see cref="T:System.String" /><para>The full settings path.</para></returns>
    </member>
    <member name="P:ADK.activeObject.Log">
      <summary>
            Type: <see cref="T:ADK.Diagnostics.ILog" /><para>The current logging instance that the object will use when writing messages.</para></summary>
    </member>
    <member name="P:ADK.activeObject.Product">
      <summary>
            Type: <see cref="T:ADK.APProduct" /><para>The current product that the object is associated with.</para></summary>
    </member>
    <member name="P:ADK.activeObject.StartObject">
      <summary>
            Type: <see cref="T:ADK.activeStartObject" /><para>Contains the property values required for initialization/logging.</para></summary>
    </member>
    <member name="P:ADK.activeObject.RootDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The root activePDF directory path to use when retrieving product file paths.</para></summary>
    </member>
    <member name="T:ADK.activeStartObject">
      <summary>
            Contains the properties required for <see cref="T:ADK.activeObject" /> to initialize properly.
            </summary>
    </member>
    <member name="F:ADK.activeStartObject._ProductName">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the product name, if any, that is associated with the new <see cref="T:ADK.activeObject" />.</para></summary>
    </member>
    <member name="F:ADK.activeStartObject._RootDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The root activePDF directory path to use when retrieving product file paths.</para></summary>
    </member>
    <member name="M:ADK.activeStartObject.#ctor">
      <summary>
            Creates a default instance of <see cref="T:ADK.activeStartObject" />.
            </summary>
    </member>
    <member name="M:ADK.activeStartObject.#ctor(ADK.Diagnostics.ILog,ADK.APProduct,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.activeObject" />.
            </summary>
      <param name="log">Type: <see cref="T:ADK.Diagnostics.ILog" /><para>The log instance to associate with the new object.</para></param>
      <param name="product">Type: <see cref="T:ADK.APProduct" /><para>Indicates the predefined product the object is associated with.</para></param>
      <param name="productName">Type: <see cref="T:System.String" /><para>The name of the product.  If none is provided, then the <see cref="T:System.String" /> value of <paramref name="product" /> will be used.</para></param>
    </member>
    <member name="P:ADK.activeStartObject.Log">
      <summary>
            Type: <see cref="T:ADK.Diagnostics.ILog" /><para>The current logging instance that the object will use when writing messages.</para></summary>
    </member>
    <member name="P:ADK.activeStartObject.Product">
      <summary>
            Type: <see cref="T:ADK.APProduct" /><para>Indicates the product that is associated with the new <see cref="T:ADK.activeObject" />.</para></summary>
    </member>
    <member name="P:ADK.activeStartObject.ProductName">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the product name, if any, that is associated with the new <see cref="T:ADK.activeObject" />.</para></summary>
    </member>
    <member name="P:ADK.activeStartObject.RootDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>The root activePDF directory path to use when retrieving product file paths.</para></summary>
    </member>
    <member name="T:ADK.API">
      <summary>
            Contains the implementation of common API functionality.
            </summary>
    </member>
    <member name="F:ADK.API._Log">
      <summary>
            Type: <see cref="T:ADK.Diagnostics.ILog" /><para>Instance used for logging debug/error messages encountered during API processing.</para></summary>
    </member>
    <member name="F:ADK.API._Debug">
      <summary>
            Type: <see cref="T:System.Nullable`1" /><para>Indicates if subsequent requests should use verbose logging.</para></summary>
    </member>
    <member name="F:ADK.API._EmbedAllFonts">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies if all fonts should be embedded into the output PDF.</para></summary>
    </member>
    <member name="F:ADK.API._EmbedBase14Fonts">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies if the base-14 fonts should be embedded into the output PDF.</para></summary>
    </member>
    <member name="F:ADK.API._SubsetFonts">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies if font subsetting should be used when embedding fonts into the output PDF.</para></summary>
    </member>
    <member name="F:ADK.API._SubstituteTTFonts">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies if TrueType fonts should be substituted for fonts in the source PostScript file.</para></summary>
    </member>
    <member name="F:ADK.API._EmailAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion output should be attached to EmailRequests.</para></summary>
    </member>
    <member name="F:ADK.API._EmailRequests">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>Contains the collection of <see cref="T:ADK.Email.EmailRequest" />s </para></summary>
    </member>
    <member name="F:ADK.API._CurrentEmailRequest">
      <summary>
            Type: <see cref="T:ADK.Email.EmailRequest" /><para>The current email request.</para></summary>
    </member>
    <member name="F:ADK.API._CurrentMailMessage">
      <summary>
            Type: <see cref="T:ADK.Email.MailMessage" /><para>The current email message.</para></summary>
    </member>
    <member name="F:ADK.API._FTPAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the conversion output should be attached to FTPRequests.</para></summary>
    </member>
    <member name="F:ADK.API._FTPPassive">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current FTP request should use Passive FTP or Active FTP.</para></summary>
    </member>
    <member name="F:ADK.API._FTPRequests">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>Contains the collection of <see cref="T:ADK.FTP.FTPRequest" />s associated with the current settings.</para></summary>
    </member>
    <member name="F:ADK.API._CurrentFTPRequest">
      <summary>
            Type: <see cref="T:ADK.FTP.FTPRequest" /><para>The current FTP request.</para></summary>
    </member>
    <member name="F:ADK.API._StampCollections">
      <summary>
            Type: <see cref="T:System.Collections.Generic.Dictionary`2" /><para>Contains the collection of <see cref="T:ADK.PDF.StampCollection" /> associated with the current settings.</para></summary>
    </member>
    <member name="F:ADK.API._CurrentStampCollection">
      <summary>
            Type: <see cref="T:ADK.PDF.StampCollection" /><para>The current stamp collection.</para></summary>
    </member>
    <member name="F:ADK.API._InvisibleSignatureInfo">
      <summary>
            Type: <see cref="T:ADK.Signatures.InvisibleSignatureInfo" /><para>Contains the properties required for the desired InvisiblySignFile call, if any.</para></summary>
    </member>
    <member name="M:ADK.API.#ctor(ADK.Diagnostics.ILog)">
      <summary>
            Creates a new instance of <see cref="T:ADK.API" /> with the provided <paramref name="log" />.
            </summary>
      <param name="log">Type: <see cref="T:ADK.Diagnostics.ILog" /><para>Instance to be used for logging debug/error messages encountered during API processing.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(System.Exception)">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(System.String,System.Exception)">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(System.String)">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(System.String,System.String)">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(ADK.Results.IResult)">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebug(System.String,ADK.Results.IResult)">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.Result" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.Write(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.Write(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">
      </param>
    </member>
    <member name="M:ADK.API.Write(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.Write(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.Write(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.Write(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.API.ApplyPDFSecurity(System.Int32,System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Initializes security properties for subsequent conversions to PDF.
            </summary>
      <param name="EncryptionLength">Type: <see cref="T:System.Int32" /><para>The length of the encryption</para><remarks><para>Currently, only 40 and 128 are supported values.</para></remarks></param>
      <param name="EncryptionRevision">Type: <see cref="T:System.Int32" /><para>The revision to use for the encryption.</para></param>.
            <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param><param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param><param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param><param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param><param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param><param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param><param name="CanFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param><param name="CanMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param><param name="CanAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param><param name="PrintHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param></member>
    <member name="M:ADK.API.AddMailMessage">
      <summary>
            Adds a new <see cref="T:ADK.Email.MailMessage" /> instance to the <see cref="F:ADK.API._CurrentEmailRequest" />.  The instance can be access at <see cref="F:ADK.API._CurrentMailMessage" />.
            </summary>
    </member>
    <member name="M:ADK.API.SetMetadata(System.String,System.String,System.String,System.String)">
      <summary>
            Applies the user-specified <paramref name="author" />, <paramref name="keywords" />, <paramref name="subject" />, and <paramref name="title" /> to the output PDF document information.
            </summary>
      <param name="author">Type: <see cref="T:System.String" /><para>The value to use as the document author.</para></param>
      <param name="keywords">Type: <see cref="T:System.String" /><para>The value to use as the document keywords.</para><para>Note: Multiple keywords may be separated with commas.</para></param>
      <param name="subject">Type: <see cref="T:System.String" /><para>The value to use as the document subject.</para></param>
      <param name="title">Type: <see cref="T:System.String" /><para>The value to use as the document title.</para></param>
    </member>
    <member name="M:ADK.API.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  The default 40-bit encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
    </member>
    <member name="M:ADK.API.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  128-bit encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
      <param name="CanFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param>
      <param name="CanMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param>
      <param name="CanAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param>
      <param name="PrintHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param>
    </member>
    <member name="M:ADK.API.SetPDFSecurityAES(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,ADK.PDF.AESEncryptionLength)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  128-bit AES encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
      <param name="CanFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param>
      <param name="CanMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param>
      <param name="CanAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param>
      <param name="PrintHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param>
      <param name="Encryption">Type: <see cref="T:ADK.PDF.AESEncryptionLength" /><para>Specifies if 128b or 256b encryption is to be used.</para></param>
    </member>
    <member name="M:ADK.API.SetPDFCompression(System.Boolean)">
      <summary>
            Compresses eligible objects in the output PDF, which include page objects and fonts. Streams (including content, text, images, and data) are not affected.
            </summary>
      <param name="pdfCompression">Type: <see cref="T:System.Boolean" /><para>Specifies to enable PDF compression.</para></param>
    </member>
    <member name="M:ADK.API.WriteMessage(System.String)">
      <summary>
            Adds the <paramref name="message" /> to the current API log.
            </summary>
      <param name="message">Type: <see cref="T:System.String" /><para>The message to be written.</para></param>
    </member>
    <member name="M:ADK.API.WriteDebugMessage(System.String)">
      <summary>
            Adds the <paramref name="message" /> to the current API log, if <see cref="P:ADK.API.Debug" /> is currently enabled.
            </summary>
      <param name="message">Type: <see cref="T:System.String" /><para>The message to be written.</para></param>
    </member>
    <member name="M:ADK.API.InvisiblySignFile(ADK.Signatures.InvisibleSignatureInfo)">
      <summary>
            Provides the information required to invisibly sign the conversion output.
            </summary>
      <param name="signatureInfo">Type: <see cref="T:ADK.Signatures.InvisibleSignatureInfo" /><para>Contains the properties required for the signing operation.</para></param>
    </member>
    <member name="M:ADK.API.InvisiblySignFile(System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32)">
      <summary>
            Sets the information required to invisibly sign the conversion output.
            </summary>
      <param name="CommonName">Type: <see cref="T:System.String" /><para>The common name of the certificate to use while signing.</para></param>
      <param name="CertificateStore">Type: <see cref="T:System.String" /><para>The name of the store where the certificate is stored.</para></param>
      <param name="UseLocalMachine">Type: <see cref="T:System.Boolean" /><para>Indicates if the certificate is stored in the HKEY_LOCAL_MACHINE, or the HKEY_CURRENT_USER registry tree.</para></param>
      <param name="Location">Type: <see cref="T:System.String" /><para>The location where the signature is applied.</para></param>
      <param name="Reason">Type: <see cref="T:System.String" /><para>The reason for the signing of the document.</para></param>
      <param name="ContactInfo">Type: <see cref="T:System.String" /><para>The contact information of the signer.</para></param>
      <param name="SignatureType">Type: <see cref="T:System.Int32" /><para>Indicates the type of signature to use:</para><para>0 = PKCS#1 Acrobat 4+.  Offers the best backwards compatibility.</para><para>1 = PKCS#7 Acrobat 4+ signature.</para><para>2 = VeriSign Signature (R).  Certificate authority must be VeriSign.  Requires the VeriSign plug-in.</para><para>3 = Microsoft Signature (Acrobat 6+).</para></param>
    </member>
    <member name="M:ADK.API.AddEMailRequest(ADK.Email.EmailRequest)">
      <summary>
            Adds a new <paramref name="request" /> to the current collection of <see cref="T:ADK.Email.EmailRequest" />s.
            </summary>
      <param name="request">Type: <see cref="T:ADK.Email.EmailRequest" /><para>Contains the details associated with the new email-based request.</para></param>
    </member>
    <member name="M:ADK.API.AddToCC(System.String,System.String)">
      <summary>
            Adds a recipient to the CC list of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient to be added.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient to be added.</para></param>
    </member>
    <member name="M:ADK.API.AddToBcc(System.String,System.String)">
      <summary>
            Adds a recipient to the Bcc list of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient to be added.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient to be added.</para></param>
    </member>
    <member name="M:ADK.API.SetSenderInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the account sending the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the sender.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the sender.</para></param>
    </member>
    <member name="M:ADK.API.SetRecipientInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the primary recipient of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient.</para></param>
    </member>
    <member name="M:ADK.API.SetReplyToInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the target recipient of any replies to the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient.</para></param>
    </member>
    <member name="M:ADK.API.SetSMTPInfo(System.String,System.Int32)">
      <summary>
            Provides the information to use when connecting to an SMTP server to send the mail message(s).
            </summary>
      <param name="server">Type: <see cref="T:System.String" /><para>The address of the server where the SMTP is hosted.</para></param>
      <param name="port">Type: <see cref="T:System.Int32" /><para>The port to use when accessing the SMTP server, 0 if default.</para></param>
    </member>
    <member name="M:ADK.API.SetSMTPCredentials(System.String,System.String,System.String)">
      <summary>
            Sets the authentication credentials to be used when attempting to connect to the SMTP server.
            </summary>
      <param name="user">Type: <see cref="T:System.String" /><para>The name of the user.</para></param>
      <param name="domain">Type: <see cref="T:System.String" /><para>The domain of the user to authenticate.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password to use while authenticating.</para></param>
    </member>
    <member name="M:ADK.API.SetEMailBody(System.String,System.Boolean)">
      <summary>
            Sets the text for the body of the current email message.
            </summary>
      <param name="bodyText">Type: <see cref="T:System.String" /><para>The contents for the email body.</para></param>
      <param name="isHtml">Type: <see cref="T:System.Boolean" /><para>Indicates if <paramref name="bodyText" /> is html formatted.</para></param>
    </member>
    <member name="M:ADK.API.AddEMail">
      <summary>
            Creates a new email message to be sent upon successful completion of the current conversion.
            </summary>
    </member>
    <member name="M:ADK.API.ClearEMails">
      <summary>
            Clears all email messages for the current conversion.
            </summary>
    </member>
    <member name="M:ADK.API.RemoveEMail(System.String)">
      <summary>
            Removes the first email message, in the current conversion, containing the specified <paramref name="EMailAddress">email address(es).</paramref>.
            </summary>
      <param name="EMailAddress">Type: <see cref="T:System.String" /><para>The recipient address associated with the email message to be removed.</para></param>
    </member>
    <member name="M:ADK.API.AddEMailAttachment(System.String)">
      <summary>
            Adds a file attachment to the current email message.
            </summary>
      <param name="Filename">Full path of the file to be attached.</param>
    </member>
    <member name="M:ADK.API.AddEMailBinaryAttachment(System.String,System.Byte[])">
      <summary>
            Adds binary data to be attached to the current email message.
            </summary>
      <param name="Filename">The name of the binary data.</param>
      <param name="FileData">The binary data.</param>
    </member>
    <member name="M:ADK.API.ClearEMailAttachments">
      <summary>
            Removes all attachments from the current email message.
            </summary>
    </member>
    <member name="M:ADK.API.AddFTPRequest(ADK.FTP.FTPRequest)">
      <summary>
            Adds a custom <paramref name="request" /> to the current collection of <see cref="T:ADK.FTP.FTPRequest" />s.
            </summary>
      <param name="request">Type: <see cref="T:ADK.FTP.FTPRequest" /><para>Contains the details associated with the new FTP-based request.</para></param>
    </member>
    <member name="M:ADK.API.AddFTPRequest(System.String,System.String)">
      <summary>
            Creates a new FTP <see cref="T:ADK.FTP.FTPRequest">request</see> to be uploaded upon successful completion of the current conversion.
            </summary>
      <param name="hostAddress">Type: <see cref="T:System.String" /><para>The address of the host which the new request targets.</para></param>
      <param name="targetDirectory">Type: <see cref="T:System.String" /><para>The subdirectory, if any, that is targeted on the FTP host.</para></param>
    </member>
    <member name="M:ADK.API.ClearFTPs">
      <summary>
            Clears all FTP requests for the current conversion.
            </summary>
    </member>
    <member name="M:ADK.API.RemoveFTP(System.String,System.String)">
      <summary>
            Removes the first FTP request, in the current conversion, containing the specified <paramref name="FTPHost" /> and (optional) <paramref name="FTPDirectory" />.
            </summary>
      <param name="FTPHost">The FTP Host of the FTP request to be removed.</param>
      <param name="FTPDirectory">Optional.  The directory on <paramref name="FTPHost" /> of the FTP request to be removed.</param>
    </member>
    <member name="M:ADK.API.SetFTPCredentials(System.String,System.String)">
      <summary>
            Sets the credentials to use when accessing the target FTP host.
            <para><remarks>NOTE: Must be called AFTER <see cref="M:ADK.API.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
      <param name="user">Type: <see cref="T:System.String" /><para>The name of the user.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password to use while authenticating.</para></param>
    </member>
    <member name="M:ADK.API.AddFTPAttachment(System.String)">
      <summary>
            Adds a file attachment to the current FTP request.
            </summary>
      <param name="Filename">Full path of the file to be attached.</param>
    </member>
    <member name="M:ADK.API.AddFTPBinaryAttachment(System.String,System.Byte[])">
      <summary>
            Adds binary data to be attached to the current FTP request.
            </summary>
      <param name="Filename">The name of the binary data.</param>
      <param name="FileData">The binary data.</param>
    </member>
    <member name="M:ADK.API.ClearFTPAttachments">
      <summary>
            Clears all attachments associated with the current FTP request.
            </summary>
    </member>
    <member name="M:ADK.API.AddStampCollection(ADK.PDF.StampCollection)">
      <summary>
            Adds the <paramref name="newCollection" /> to the current conversion settings.
            </summary>
      <param name="newCollection">Type: <see cref="T:ADK.PDF.StampCollection" /><para>Contains the collection/settings for various stamps that are to be added to the output.</para></param>
    </member>
    <member name="M:ADK.API.RemoveStampCollection(System.String)">
      <summary>
            Removes the <see cref="T:ADK.PDF.StampCollection" /> associated with the <paramref name="collectionName" />.
            </summary>
      <param name="collectionName">Type: <see cref="T:System.String" />The name of the collection to be removed.</param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the target collection was successfully removed.</para></returns>
    </member>
    <member name="M:ADK.API.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font.
            </summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0.</para></returns>
    </member>
    <member name="M:ADK.API.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font, if <see cref="P:ADK.API.StampFillMode" /> is set to <see cref="F:ADK.PDF.FontFillMode.StrokeOnly" /> or <see cref="F:ADK.PDF.FontFillMode.FillThenStroke" />.
            </summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
    </member>
    <member name="M:ADK.API.AddStampText(System.Single,System.Single,System.String)">
      <summary>
            Adds a text stamp to the current stamp collection.
            </summary>
      <param name="x">Type: <see cref="T:System.Single" /><para>The x-coordinate for the origin of the new text stamp.</para></param>
      <param name="y">Type: <see cref="T:System.Single" /><para>The y-coordinate for the origin of the new text stamp.</para></param>
      <param name="stampText">Type: <see cref="T:System.String" /><para>The text of the new stamp.</para></param>
    </member>
    <member name="M:ADK.API.AddStampImage(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Adds an image stamp to the current stamp collection.
            </summary>
      <param name="ImageFile">Type: <see cref="T:System.String" /><para>The full path of the file to use for the image stamp.</para></param>
      <param name="x">Type: <see cref="T:System.Single" /><para>The x-coordinate for the origin of the new image stamp.</para></param>
      <param name="y">Type: <see cref="T:System.Single" /><para>The y-coordinate for the origin of the new image stamp.</para></param>
      <param name="Width">Type: <see cref="T:System.Single" /><para>The desired width of the new image stamp.</para></param>
      <param name="Height">Type: <see cref="T:System.Single" /><para>The desired height of the new image stamp.</para></param>
      <param name="PersistRatio">Type: <see cref="T:System.Boolean" /><para>Indicates if the original ratio of the <paramref name="ImageFile" /> should be persisted.</para></param>
    </member>
    <member name="M:ADK.API.AddStampCollection(System.String)">
      <summary>
            Adds a new stamp collection to the current conversion settings.
            </summary>
      <param name="collectionName">Type: <see cref="T:System.String" /><para>The name of the new collection.</para></param>
    </member>
    <member name="M:ADK.API.ClearStampCollections">
      <summary>
            Clears all stamp collections from the current conversion settings.
            </summary>
    </member>
    <member name="M:ADK.API.AddFTP">
      <summary>
            Creates a new FTP request to be uploaded upon successful completion of the current conversion.
            <para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="M:ADK.API.StampColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font.
            <para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" />.</remarks></para></summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0.</para></returns>
    </member>
    <member name="M:ADK.API.StampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" />.</remarks></para></summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
    </member>
    <member name="M:ADK.API.AddStampCollection">
      <summary>
            Adds a new stamp collection to the current conversion settings.
            <para><remarks>Deprecated.  Consider calling <see cref="M:ADK.IWatermarkAPI.AddStampCollection(System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.CurrentEmailRequest">
      <summary>
            Type: <see cref="T:ADK.Email.EmailRequest" /><para>The current message, creating a new instance if none already exists.</para></summary>
    </member>
    <member name="P:ADK.API.CurrentMailMessage">
      <summary>
            Type: <see cref="T:ADK.Email.MailMessage" /><para>Retrieves the current message, creating a new instance if none already exists.</para></summary>
    </member>
    <member name="P:ADK.API.CurrentFTPRequest">
      <summary>
            Type: <see cref="T:ADK.FTP.FTPRequest" /><para>The current FTP request, creating a new instance if none already exists.</para></summary>
    </member>
    <member name="P:ADK.API.CurrentStampCollection">
      <summary>
            Type: <see cref="T:ADK.PDF.StampCollection" /><para>The current stamp collection.  A new instance will be created if none exists.</para></summary>
    </member>
    <member name="P:ADK.API.Debug">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion request(s) should be processed with debug/verbose logging enabled.</para></summary>
    </member>
    <member name="P:ADK.API.CaptureRequestXml">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the Xml, associated with the API requests, should be saved to a file.</para></summary>
    </member>
    <member name="P:ADK.API.CompatibilityLevel">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFVersion" /><para>Indicates the desired compatibility level for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.API.EmbedAllFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if all fonts should be embedded into the output PDF.</para><para><remarks>Note: This property does not apply to Base 14 fonts.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EmbedBase14Fonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the Base 14 fonts should be embedded into the output PDF.</para></summary>
    </member>
    <member name="P:ADK.API.SubsetFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if font subsetting should be used when embedding fonts into the output PDF.</para></summary>
    </member>
    <member name="P:ADK.API.SubstituteTTFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if TrueType fonts should be substituted for fonts in the source PostScript stream/file.</para></summary>
    </member>
    <member name="P:ADK.API.OverwriteMethod">
      <summary>
            Type: <see cref="T:ADK.Conversion.OverwriteMethod" /><para>Specifies how the conversion should handle the presence of a file having the same name in the same location as the current output.</para></summary>
    </member>
    <member name="P:ADK.API.LinearizePDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the output file should be linearized.</para></summary>
    </member>
    <member name="P:ADK.API.TimeoutSpan">
      <summary>
            Type: <see cref="T:System.TimeSpan" /><para>Specifies how long a conversion request may take before it will be timed-out.</para></summary>
    </member>
    <member name="P:ADK.API.Timeout">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies how many seconds before a conversion request will time out.</para></summary>
    </member>
    <member name="P:ADK.API.OutputDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the full path of the directory in which to place output PDFs.</para></summary>
    </member>
    <member name="P:ADK.API.EMailSubject">
      <summary>
            Type: <see cref="T:System.String" /><para>The subject of the current email message.</para></summary>
    </member>
    <member name="P:ADK.API.EMailAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the default conversion output should be attached to the current email message.</para></summary>
    </member>
    <member name="P:ADK.API.EMailReadReceipt">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the sender should be notified when the recipient opens/reads the current mail message.</para></summary>
    </member>
    <member name="P:ADK.API.FTPAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the conversion output should be attached to the current FTP request.</para></summary>
    </member>
    <member name="P:ADK.API.FTPPassive">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current FTP request should use Passive FTP or Active FTP.</para></summary>
    </member>
    <member name="P:ADK.API.StampFont">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.StampFontSize">
      <summary>
            Type: <see cref="T:System.Single" /><para>The size of the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.StampFontTransparency">
      <summary>
            Type: <see cref="T:System.Single" /><para>Sets the transparency to use for text in the current stamp collection.</para><remarks><para>1.0 is totally opaque, while 0.0 is totally transparent.</para></remarks></summary>
    </member>
    <member name="P:ADK.API.StampFillMode">
      <summary>
            Type: <see cref="T:ADK.PDF.FontFillMode" /><para>The type of fill for the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.StampRotation">
      <summary>
            Type: <see cref="T:System.Single" /><para>The rotation, in degrees, of the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.StampBackground">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates if the contents of the current stamp collection should be in the background.</para></summary>
    </member>
    <member name="P:ADK.API.StampColorNET">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Indicates the complete color settings to use with the font of the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.StampStrokeColorNET">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Indicates the complete color settings to use with the font, if <see cref="P:ADK.API.StampFillMode" /> supports Strokes, of the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.API.EMailAllow8Bits">
      <summary>
            Type: <see cref="T:System.Int32" /><para><remarks>Deprecated.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailBCC">
      <summary>
            Type: <see cref="T:System.String" /><para>The BCC: email address for the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.AddToBcc(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailCC">
      <summary>
            Type: <see cref="T:System.String" /><para>The CC: email address for the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.AddToCC(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailIDFrom">
      <summary>
            Type: <see cref="T:System.String" /><para>The email address for the sender of the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetSenderInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailNameFrom">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name of the <see cref="P:ADK.API.EMailIDFrom">sender</see>.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetSenderInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailNameReply">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name to use when replying to the email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetReplyToInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailReplyTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The email address for to use when replying to the email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetReplyToInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailText">
      <summary>
            Type: <see cref="T:System.String" /><para>The Body text for the current email.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetEMailBody(System.String,System.Boolean)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The address to which the current email messsage is to be sent.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetRecipientInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailNameTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name of the <see cref="P:ADK.API.EMailTo">recipient</see>.</para><para><remarks>Deprected.  Consider using <see cref="M:ADK.API.SetRecipientInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.EMailSendMail">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current email message should be sent.  Default is true.</para><para><remarks>Deprecated.  This property does not have any effect.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.SMTPServer">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the SMTP server to use when sending the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetSMTPInfo(System.String,System.Int32)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.FTPPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>The password to be used, along with <see cref="P:ADK.API.FTPUserName" />, when connecting to the target FTP host.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetFTPCredentials(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.FTPUserName">
      <summary>
            Type: <see cref="T:System.String" /><para>The user name to be used, along with <see cref="P:ADK.API.FTPPassword" />, when connecting to the target FTP host.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.SetFTPCredentials(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.FTPDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>A valid directory for the specified <see cref="P:ADK.API.FTPHost" /> to place the output.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.AddFTPRequest(System.String,System.String)">AddFTPRequest</see>.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.FTPHost">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the host where the current request will be sent.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.API.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampColorRed">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of red coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampColorGreen">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of green coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampColorBlue">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of blue coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampColorGray">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of gray coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampStrokeColorRed">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of red coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampStrokeColorGreen">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of green coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampStrokeColorBlue">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of blue coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.API.StampStrokeColorGray">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of gray coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="T:ADK.APProduct">
      <summary>
            Enumerates the supported products for environment path variables.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Default">
      <summary>
            The default environment paths.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Server">
      <summary>
            The environment paths associated with Server.
            </summary>
    </member>
    <member name="F:ADK.APProduct.DocConverter">
      <summary>
            The environment paths associated with DocConverter.
            </summary>
    </member>
    <member name="F:ADK.APProduct.CadConverter">
      <summary>
            The environment paths associated with CadConverter.
            </summary>
    </member>
    <member name="F:ADK.APProduct.WebGrabber">
      <summary>
            The environment paths associated with WebGrabber.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Portal">
      <summary>
            The environment paths associated with Portal.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Toolkit">
      <summary>
            The environment paths associated with Toolkit.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Meridian">
      <summary>
            The environment paths associated with Meridian.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Extension">
      <summary>
            The environment paths associated with a non-product specific extension to P3.
            </summary>
    </member>
    <member name="F:ADK.APProduct.Xtractor">
      <summary>
            The environment paths associated with Xtractor.
            </summary>
    </member>
    <member name="T:ADK.IAPI">
      <summary>
            Defines the properties/methods required to implement a standard conversion API.
            </summary>
    </member>
    <member name="M:ADK.IAPI.SetMetadata(System.String,System.String,System.String,System.String)">
      <summary>
            Applies the user specifies <paramref name="author" />, <paramref name="keywords" />, <paramref name="subject" />, and <paramref name="title" /> to the output Document Information.
            </summary>
      <param name="author">Type: <see cref="T:System.String" /><para>The value to use as the document author.</para></param>
      <param name="keywords">Type: <see cref="T:System.String" /><para>The value to use as the document keywords.</para></param>
      <param name="subject">Type: <see cref="T:System.String" /><para>The value to use as the document subject.</para></param>
      <param name="title">Type: <see cref="T:System.String" /><para>The value to use as the document title.</para></param>
    </member>
    <member name="M:ADK.IAPI.SetPDFSecurity(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  The default 40-bit encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
    </member>
    <member name="M:ADK.IAPI.SetPDFSecurity128(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  128-bit encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
      <param name="CanFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param>
      <param name="CanMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param>
      <param name="CanAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param>
      <param name="PrintHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param>
    </member>
    <member name="M:ADK.IAPI.SetPDFSecurityAES(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,ADK.PDF.AESEncryptionLength)">
      <summary>
            Sets the properties to use for applying security to PDFs after conversion.  128-bit AES encryption is used.
            </summary>
      <param name="UserPassword">Type: <see cref="T:System.String" /><para>Password used for opening the converted PDF.</para></param>
      <param name="OwnerPassword">Type: <see cref="T:System.String" /><para>Password used for editing the converted PDF.</para></param>
      <param name="CanPrint">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be printed.</para></param>
      <param name="CanEdit">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF can be edited.</para></param>
      <param name="CanCopy">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be copied from the converted PDF.</para></param>
      <param name="CanAnnotate">Type: <see cref="T:System.Boolean" /><para>Specifies if text annotations can be added/modified in the converted PDF.</para></param>
      <param name="CanFillInFormFields">Type: <see cref="T:System.Boolean" /><para>Specifies if existing form fields may be filled in the converted PDF.</para></param>
      <param name="CanMakeAccessible">Type: <see cref="T:System.Boolean" /><para>Specifies if text/graphics can be extracted, to support accessiblity to disabled users, from the converted PDF.</para></param>
      <param name="CanAssemble">Type: <see cref="T:System.Boolean" /><para>Specifies if document assembly (insert, rotate, or delete page, etc...) is allowed in the converted PDF.</para></param>
      <param name="PrintHiResolution">Type: <see cref="T:System.Boolean" /><para>Specifies if the converted PDF may be printed to a high-level representation.</para></param>
      <param name="Encryption">Type: <see cref="T:ADK.PDF.AESEncryptionLength" /><para>Specifies if 128b or 256b encryption is to be used.</para></param>
    </member>
    <member name="M:ADK.IAPI.WriteMessage(System.String)">
      <summary>
            Adds the <paramref name="message" /> to the current API log.
            </summary>
      <param name="message">Type: <see cref="T:System.String" /><para>The message to be written.</para></param>
    </member>
    <member name="M:ADK.IAPI.WriteDebugMessage(System.String)">
      <summary>
            Adds the <paramref name="message" /> to the current API log, if <see cref="P:ADK.IAPI.Debug" /> is currently enabled.
            </summary>
      <param name="message">Type: <see cref="T:System.String" /><para>The message to be written.</para></param>
    </member>
    <member name="P:ADK.IAPI.Debug">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion request(s) should be processed with debug/verbose logging enabled.</para></summary>
    </member>
    <member name="P:ADK.IAPI.CaptureRequestXml">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the Xml, associated with the API requests, should be saved to a file.</para></summary>
    </member>
    <member name="P:ADK.IAPI.CompatibilityLevel">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFVersion" /><para>Indicates the desired compatibility level for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.IAPI.EmbedAllFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if all fonts should be embedded into the output PDF.</para></summary>
    </member>
    <member name="P:ADK.IAPI.EmbedBase14Fonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the base-14 fonts should be embedded into the output PDF.</para></summary>
    </member>
    <member name="P:ADK.IAPI.SubsetFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if font subsetting should be used when embedding fonts into the output PDF.</para></summary>
    </member>
    <member name="P:ADK.IAPI.SubstituteTTFonts">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if TrueType fonts should be substituted for fonts in the source PostScript file.</para></summary>
    </member>
    <member name="P:ADK.IAPI.Timeout">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies how many seconds before a conversion request will time out.</para></summary>
    </member>
    <member name="P:ADK.IAPI.TimeoutSpan">
      <summary>
            Type: <see cref="T:System.TimeSpan" /><para>Specifies how long a conversion has until the request timesout.</para></summary>
    </member>
    <member name="P:ADK.IAPI.OverwriteMethod">
      <summary>
            Type: <see cref="T:ADK.Conversion.OverwriteMethod" /><para>Specifies how the conversion should handle the presence of an existing output file.</para></summary>
    </member>
    <member name="P:ADK.IAPI.LinearizePDF">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the output file should be linearized.</para></summary>
    </member>
    <member name="P:ADK.IAPI.OutputDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the full path of the directory to place output PDFs in.</para></summary>
    </member>
    <member name="T:ADK.IInvisiblySignAPI">
      <summary>
            Defines the properties/methods required to implement an InvisiblySign api.
            </summary>
    </member>
    <member name="M:ADK.IInvisiblySignAPI.InvisiblySignFile(ADK.Signatures.InvisibleSignatureInfo)">
      <summary>
            Provides the information required to invisibly sign the conversion output.
            </summary>
      <param name="signatureInfo">Type: <see cref="T:ADK.Signatures.InvisibleSignatureInfo" /><para>Contains the properties required for the signing operation.</para></param>
    </member>
    <member name="M:ADK.IInvisiblySignAPI.InvisiblySignFile(System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32)">
      <summary>
            Sets the information required to invisibly sign the conversion output.
            </summary>
      <param name="CommonName">Type: <see cref="T:System.String" /><para>The common name of the certificate to use while signing.</para></param>
      <param name="CertificateStore">Type: <see cref="T:System.String" /><para>The name of the store where the certificate is stored.</para></param>
      <param name="UseLocalMachine">Type: <see cref="T:System.Boolean" /><para>Indicates if the certificate is stored in the HKEY_LOCAL_MACHINE, or the HKEY_CURRENT_USER registry tree.</para></param>
      <param name="Location">Type: <see cref="T:System.String" /><para>The location where the signature is applied.</para></param>
      <param name="Reason">Type: <see cref="T:System.String" /><para>The reason for the signing of the document.</para></param>
      <param name="ContactInfo">Type: <see cref="T:System.String" /><para>The contact information of the signer.</para></param>
      <param name="SignatureType">Type: <see cref="T:System.Int32" /><para>Indicates the type of signature to use:</para><para>0 = PKCS#1 Acrobat 4+.  Offers the best backwards compatibility.</para><para>1 = PKCS#7 Acrobat 4+ signature.</para><para>2 = VeriSign Signature (R).  Certificate authority must be VeriSign.  Requires the VeriSign plug-in.</para><para>3 = Microsoft Signature (Acrobat 6+).</para></param>
    </member>
    <member name="T:ADK.IEmailAPI">
      <summary>
            Defines the properties/methods required to implement an email API.
            </summary>
    </member>
    <member name="M:ADK.IEmailAPI.AddEMailRequest(ADK.Email.EmailRequest)">
      <summary>
            Adds a new <paramref name="request" /> to the current collection of <see cref="T:ADK.Email.EmailRequest" />s.
            </summary>
      <param name="request">Type: <see cref="T:ADK.Email.EmailRequest" /><para>Contains the details associated with the new email-based request.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.AddToCC(System.String,System.String)">
      <summary>
            Adds a recipient to the CC list of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient to be added.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient to be added.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.AddToBcc(System.String,System.String)">
      <summary>
            Adds a recipient to the Bcc list of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient to be added.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient to be added.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetSenderInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the account "sending" the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the sender.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the sender.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetRecipientInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the primary recipient of the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetReplyToInfo(System.String,System.String)">
      <summary>
            Sets the address/name for the target recipient of any replies to the current mail message.
            </summary>
      <param name="friendlyName">Type: <see cref="T:System.String" /><para>The user-friendly name of the recipient.</para></param>
      <param name="address">Type: <see cref="T:System.String" /><para>The email address of the recipient.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetSMTPInfo(System.String,System.Int32)">
      <summary>
            Provides the information to use when connecting to an SMTP server to send the mail message(s).
            </summary>
      <param name="server">Type: <see cref="T:System.String" /><para>The address of the server where the SMTP is hosted.</para></param>
      <param name="port">Type: <see cref="T:System.Int32" /><para>The port to use when accessing the SMTP server, 0 if default.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetSMTPCredentials(System.String,System.String,System.String)">
      <summary>
            Sets the authentication credentials to be used when attempting to connect to the STMP server.
            </summary>
      <param name="user">Type: <see cref="T:System.String" /><para>The name of the user.</para></param>
      <param name="domain">Type: <see cref="T:System.String" /><para>The domain of the user to authenticate.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password to use while authenticating.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.SetEMailBody(System.String,System.Boolean)">
      <summary>
            Sets the text of for the body of the current email message.
            </summary>
      <param name="bodyText">Type: <see cref="T:System.String" /><para>The contents for the email body.</para></param>
      <param name="isHtml">Type: <see cref="T:System.Boolean" /><para>Indicates if <paramref name="bodyText" /> is html formatted.</para></param>
    </member>
    <member name="M:ADK.IEmailAPI.AddEMail">
      <summary>
            Creates a new email message to be sent upon successful completion of the current conversion.
            </summary>
    </member>
    <member name="M:ADK.IEmailAPI.ClearEMails">
      <summary>
            Deletes all email messages in the current instance.
            </summary>
    </member>
    <member name="M:ADK.IEmailAPI.RemoveEMail(System.String)">
      <summary>
            Removes the first email message to be sent to the <paramref name="EMailAddress" />.
            </summary>
      <param name="EMailAddress">
      </param>
    </member>
    <member name="M:ADK.IEmailAPI.AddEMailAttachment(System.String)">
      <summary>
            Adds a file attachment to the current email message.
            </summary>
      <param name="Filename">Full path of the file to be attached.</param>
    </member>
    <member name="M:ADK.IEmailAPI.AddEMailBinaryAttachment(System.String,System.Byte[])">
      <summary>
            Adds binary data to be attached to the current email message.
            </summary>
      <param name="Filename">The name of the binary data.</param>
      <param name="FileData">The binary data.</param>
    </member>
    <member name="M:ADK.IEmailAPI.ClearEMailAttachments">
      <summary>
            Removes all attachments from the current email message.
            </summary>
    </member>
    <member name="P:ADK.IEmailAPI.EMailSubject">
      <summary>
            Type: <see cref="T:System.String" /><para>The subject of the current email message.</para></summary>
    </member>
    <member name="P:ADK.IEmailAPI.EMailAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the default conversion output should be attached to the current email message.</para></summary>
    </member>
    <member name="P:ADK.IEmailAPI.EMailReadReceipt">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the sender should be notify when the recipient opens/reads the current mail message.</para></summary>
    </member>
    <member name="T:ADK.IFtpAPI">
      <summary>
            Defines the properties/methods required to implement an FTP api.
            </summary>
    </member>
    <member name="M:ADK.IFtpAPI.AddFTPRequest(ADK.FTP.FTPRequest)">
      <summary>
            Adds a new <paramref name="request" /> to the current collection of <see cref="T:ADK.FTP.FTPRequest" />s.
            </summary>
      <param name="request">Type: <see cref="T:ADK.FTP.FTPRequest" /><para>Contains the details associated with the new FTP-based request.</para></param>
    </member>
    <member name="M:ADK.IFtpAPI.AddFTPRequest(System.String,System.String)">
      <summary>
            Creates a new FTP request to be uploaded upon successful completion of the current conversion.
            </summary>
      <param name="hostAddress">Type: <see cref="T:System.String" /><para>The address of the host which the new request targets.</para></param>
      <param name="targetDirectory">Type: <see cref="T:System.String" /><para>The subdirectory, if any, that is targeted on the FTP host.</para></param>
    </member>
    <member name="M:ADK.IFtpAPI.ClearFTPs">
      <summary>
            Clears all FTP requests for the current conversion.
            </summary>
    </member>
    <member name="M:ADK.IFtpAPI.RemoveFTP(System.String,System.String)">
      <summary>
            Removes the first FTP request for <paramref name="FTPHost" /> and (optional) <paramref name="FTPDirectory" />.
            </summary>
      <param name="FTPHost">The FTP Host of the FTP request to be removed.</param>
      <param name="FTPDirectory">Optional.  The directory on <paramref name="FTPHost" /> of the FTP request to be removed.</param>
    </member>
    <member name="M:ADK.IFtpAPI.SetFTPCredentials(System.String,System.String)">
      <summary>
            Sets the credentials to use when accessing the target FTP host.
            </summary>
      <param name="user">Type: <see cref="T:System.String" /><para>The name of the user.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password to use while authenticating.</para></param>
    </member>
    <member name="M:ADK.IFtpAPI.AddFTPAttachment(System.String)">
      <summary>
            Adds a file attachment to the current FTP request.
            </summary>
      <param name="Filename">Full path of the file to be attached.</param>
    </member>
    <member name="M:ADK.IFtpAPI.AddFTPBinaryAttachment(System.String,System.Byte[])">
      <summary>
            Adds binary data to be attached to the current FTP request.
            </summary>
      <param name="Filename">The name of the binary data.</param>
      <param name="FileData">The binary data.</param>
    </member>
    <member name="M:ADK.IFtpAPI.ClearFTPAttachments">
      <summary>
            Clears all attachments associated with the current FTP request.
            </summary>
    </member>
    <member name="P:ADK.IFtpAPI.FTPAttachOutput">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the default conversion output should be attached to the current FTP request.</para></summary>
    </member>
    <member name="P:ADK.IFtpAPI.FTPPassive">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current FTP request should use Passive FTP or Active FTP.</para></summary>
    </member>
    <member name="T:ADK.IWatermarkAPI">
      <summary>
            Defines the properties/methods required to implement a Watermark API.
            </summary>
    </member>
    <member name="M:ADK.IWatermarkAPI.AddStampCollection(ADK.PDF.StampCollection)">
      <summary>
            Adds the custom <paramref name="newCollection" /> to the current conversion settings.
            </summary>
      <param name="newCollection">Type: <see cref="T:ADK.PDF.StampCollection" />Contains the collection/settings for various stamps that are to be added to the output.</param>
    </member>
    <member name="M:ADK.IWatermarkAPI.RemoveStampCollection(System.String)">
      <summary>
            Removes the <see cref="T:ADK.PDF.StampCollection" /> associated with the <paramref name="collectionName" />.
            </summary>
      <param name="collectionName">Type: <see cref="T:System.String" />The name of the collection to be removed.</param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the target collection was successfully removed.</para></returns>
    </member>
    <member name="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font.
            </summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0.</para></returns>
    </member>
    <member name="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /></summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
    </member>
    <member name="M:ADK.IWatermarkAPI.AddStampText(System.Single,System.Single,System.String)">
      <summary>
            Adds a text stamp to the current stamp collection.
            </summary>
      <param name="x">Type: <see cref="T:System.Single" /><para>The x-coordinate for the origin of the new text stamp.</para></param>
      <param name="y">Type: <see cref="T:System.Single" /><para>The y-coordinate for the origin of the new text stamp.</para></param>
      <param name="stampText">Type: <see cref="T:System.String" /><para>The text of the new stamp.</para></param>
    </member>
    <member name="M:ADK.IWatermarkAPI.AddStampImage(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Adds an image stamp to the current stamp collection.
            </summary>
      <param name="ImageFile">Type: <see cref="T:System.String" /><para>The full path of the file to use for the image stamp.</para></param>
      <param name="x">Type: <see cref="T:System.Single" /><para>The x-coordinate for the origin of the new image stamp.</para></param>
      <param name="y">Type: <see cref="T:System.Single" /><para>The y-coordinate for the origin of the new image stamp.</para></param>
      <param name="Width">Type: <see cref="T:System.Single" /><para>The desired width of the new image stamp.</para></param>
      <param name="Height">Type: <see cref="T:System.Single" /><para>The desired height of the new image stamp.</para></param>
      <param name="PersistRatio">Type: <see cref="T:System.Boolean" /><para>Indicates if the original ratio of the <paramref name="ImageFile" /> should be persisted.</para></param>
    </member>
    <member name="M:ADK.IWatermarkAPI.AddStampCollection(System.String)">
      <summary>
            Adds a new stamp collection to the current conversion settings.
            </summary>
      <param name="collectionName">Type: <see cref="T:System.String" /><para>The name of the new collection.</para></param>
    </member>
    <member name="M:ADK.IWatermarkAPI.ClearStampCollections">
      <summary>
            Removes all stamp collections from the current conversion settings.
            </summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampFont">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampFontSize">
      <summary>
            Type: <see cref="T:System.Single" /><para>The size of the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampFontTransparency">
      <summary>
            Type: <see cref="T:System.Single" /><para>Sets the transparency to use for text in the current stamp collection.</para><remarks><para>1.0 is totally opaque, while 0.0 is totally transparent.</para></remarks></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampFillMode">
      <summary>
            Type: <see cref="T:ADK.PDF.FontFillMode" /><para>The type of fill for the font to use in the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampRotation">
      <summary>
            Type: <see cref="T:System.Single" /><para>The rotation, in degrees, of the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampBackground">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates if the contents of the current stamp collection should be in the background.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampColorNET">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Indicates the complete color settings to use with the font of the current stamp collection.</para></summary>
    </member>
    <member name="P:ADK.IWatermarkAPI.StampStrokeColorNET">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Indicates the complete color settings to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para></summary>
    </member>
    <member name="T:ADK.IEnterpriseDeprecated">
      <summary>
            Defines the methods/properties that have been deprecated across multiple products.
            </summary>
    </member>
    <member name="T:ADK.IEMailDeprecated">
      <summary>
            Defines the email methods/properties that have been deprecated.
            </summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailAllow8Bits">
      <summary>
            Type: <see cref="T:System.Int32" /><para><remarks>Deprecated.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailBCC">
      <summary>
            Type: <see cref="T:System.String" /><para>The BCC: email address for the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.AddToBcc(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailCC">
      <summary>
            Type: <see cref="T:System.String" /><para>The CC: email address for the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.AddToCC(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailIDFrom">
      <summary>
            Type: <see cref="T:System.String" /><para>The email address for the sender of the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetSenderInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailNameFrom">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name of the <see cref="P:ADK.IEMailDeprecated.EMailIDFrom">sender</see>.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetSenderInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailNameReply">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name to use when replying to the email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetReplyToInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailReplyTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The email address to use when replying to the email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetReplyToInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailText">
      <summary>
            Type: <see cref="T:System.String" /><para>The Body text for the current email.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetEMailBody(System.String,System.Boolean)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The address to which the current email messsage is to be sent.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetRecipientInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailNameTo">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name of the <see cref="P:ADK.IEMailDeprecated.EMailTo">recipient</see>.</para><para><remarks>Deprected.  Consider using <see cref="M:ADK.IEmailAPI.SetRecipientInfo(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.EMailSendMail">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current email message should be sent.  Default is true.</para><para><remarks>Deprecated.  This property does not have any effect.</remarks></para></summary>
    </member>
    <member name="P:ADK.IEMailDeprecated.SMTPServer">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the SMTP server to use when sending the current email message.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IEmailAPI.SetSMTPInfo(System.String,System.Int32)" />.</remarks></para></summary>
    </member>
    <member name="T:ADK.IFTPDeprecated">
      <summary>
            Defines the FTP methods/properties that have been deprecated.
            </summary>
    </member>
    <member name="M:ADK.IFTPDeprecated.AddFTP">
      <summary>
            Creates a new FTP request to be uploaded upon successful completion of the current conversion.
            <para><remarks>Deprecated.  Consider using <see cref="M:ADK.IFtpAPI.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IFTPDeprecated.FTPPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>The password to be used, along with <see cref="P:ADK.IFTPDeprecated.FTPUserName" />, when connecting to the target FTP host.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IFtpAPI.SetFTPCredentials(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IFTPDeprecated.FTPUserName">
      <summary>
            Type: <see cref="T:System.String" /><para>The user name to be used, along with <see cref="P:ADK.IFTPDeprecated.FTPPassword" />, when connecting to the target FTP host.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IFtpAPI.SetFTPCredentials(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IFTPDeprecated.FTPDirectory">
      <summary>
            Type: <see cref="T:System.String" /><para>A valid directory for the specified <see cref="P:ADK.IFTPDeprecated.FTPHost" /> to place the output.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IFtpAPI.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IFTPDeprecated.FTPHost">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the host where the current request will be sent.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IFtpAPI.AddFTPRequest(System.String,System.String)" />.</remarks></para></summary>
    </member>
    <member name="T:ADK.IWatermarkDeprecated">
      <summary>
            Defines the watermark/stamping methods/properties that have been deprecated.
            </summary>
    </member>
    <member name="M:ADK.IWatermarkDeprecated.StampColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font.
            <para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" />.</remarks></para></summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Returns 0.</para></returns>
    </member>
    <member name="M:ADK.IWatermarkDeprecated.StampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the color for the current stamp collection font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" />.</remarks></para></summary>
      <param name="Red">Type: <see cref="T:System.Int32" /><para>The amount of red coloring to use.</para></param>
      <param name="Green">Type: <see cref="T:System.Int32" /><para>The amount of green coloring to use.</para></param>
      <param name="Blue">Type: <see cref="T:System.Int32" /><para>The amount of blue coloring to use.</para></param>
      <param name="GrayScale">Type: <see cref="T:System.Int32" /><para>The amount of gray coloring to use.</para></param>
    </member>
    <member name="M:ADK.IWatermarkDeprecated.AddStampCollection">
      <summary>
            Adds a new stamp collection to the current conversion settings.
            <para><remarks>Deprecated.  Consider calling <see cref="M:ADK.IWatermarkAPI.AddStampCollection(System.String)" />.</remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampColorRed">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of red coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampColorGreen">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of green coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampColorBlue">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of blue coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampColorGray">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of gray coloring to use with the font of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampStrokeColorRed">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of red coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampStrokeColorGreen">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of green coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampStrokeColorBlue">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of blue coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="P:ADK.IWatermarkDeprecated.StampStrokeColorGray">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value of gray coloring to use with the font, if <see cref="P:ADK.IWatermarkAPI.StampFillMode" /> supports Strokes, of the current stamp collection.</para><para><remarks>Deprecated.  Consider using <see cref="M:ADK.IWatermarkAPI.SetStampStrokeColor(System.Int32,System.Int32,System.Int32,System.Int32)" /></remarks></para></summary>
    </member>
    <member name="T:ADK.Zip.ZipHandling">
      <summary>
            Details the Zip file settings.
            </summary>
    </member>
    <member name="P:ADK.Zip.ZipHandling.HandleZip">
      <summary>
            Type: <see cref="T:ADK.Zip.ZipHandlingType" /><para>How zip files should be handled during the processing.</para></summary>
    </member>
    <member name="P:ADK.Zip.ZipHandling.Password">
      <summary>
            Type: <see cref="T:System.String" /><para>The password, if any, required to open the zip file.</para></summary>
    </member>
    <member name="T:ADK.Zip.ZipHandlingType">
      <summary>
            Enumerates the currently supported handling methods for Zip files.
            </summary>
    </member>
    <member name="F:ADK.Zip.ZipHandlingType.Process">
      <summary>
            The zip file is processed as it's own entity.
            </summary>
    </member>
    <member name="F:ADK.Zip.ZipHandlingType.UnzipThenProcess">
      <summary>
            The zip file is extracted, and its content files are then processed.
            </summary>
    </member>
    <member name="T:ADK.WCF.BindingFactory">
      <summary>
            Default implementation of <see cref="T:ADK.WCF.IBindingFactory" />.
            </summary>
    </member>
    <member name="M:ADK.WCF.BindingFactory.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.WCF.BindingFactory" />.
            </summary>
    </member>
    <member name="M:ADK.WCF.BindingFactory.CreateNamedPipeBinding(ADK.WCF.BindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.BindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.NetNamedPipeBinding" /><para>The new <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.</para></returns>
    </member>
    <member name="M:ADK.WCF.BindingFactory.CreateNetTcpBinding(ADK.WCF.TcpBindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.NetTcpBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.TcpBindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.NetTcpBinding" /><para>The new <see cref="T:System.ServiceModel.NetTcpBinding" />.</para></returns>
    </member>
    <member name="M:ADK.WCF.BindingFactory.CreateHttpBinding(ADK.WCF.HttpBindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.BasicHttpBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.HttpBindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.BasicHttpBinding" /><para>The new <see cref="T:System.ServiceModel.BasicHttpBinding" />.</para></returns>
    </member>
    <member name="P:ADK.WCF.BindingFactory.MaxMessageSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Sets the maximum message size allowed for the binding.</para></summary>
    </member>
    <member name="T:ADK.WCF.BindingSecurity">
      <summary>
            Enumerates the options currently allowed for various WCF binding security.
            </summary>
    </member>
    <member name="F:ADK.WCF.BindingSecurity.None">
      <summary>
            No security is applied.
            </summary>
    </member>
    <member name="F:ADK.WCF.BindingSecurity.Windows">
      <summary>
            Windows Authentication is used.
            </summary>
    </member>
    <member name="F:ADK.WCF.BindingSecurity.Certificate">
      <summary>
            Certificate authentication is used.
            </summary>
    </member>
    <member name="F:ADK.WCF.BindingSecurity.UsernamePassword">
      <summary>
            Message Security is used with username/password authentication.
            </summary>
    </member>
    <member name="T:ADK.WCF.BindingStartInfo">
      <summary>
            Contains the common binding properties that can be set while creating a new binding.
            </summary>
    </member>
    <member name="M:ADK.WCF.BindingStartInfo.#ctor(System.ServiceModel.TransferMode)">
      <summary>
            Creates a new instance of <see cref="T:ADK.WCF.BindingStartInfo" />.
            </summary>
      <param name="transferMode">Type: <see cref="T:System.ServiceModel.TransferMode" /><para>Specifies the transfer protocol that new new instance will use.</para></param>
    </member>
    <member name="P:ADK.WCF.BindingStartInfo.TransferType">
      <summary>
            Type: <see cref="T:System.ServiceModel.TransferMode" /><para>Specifies the transfer protocol that this binding will use.</para></summary>
    </member>
    <member name="P:ADK.WCF.BindingStartInfo.ReceiveTimeout">
      <summary>
            Type: <see cref="T:System.TimeSpan" /><para>Specifies the maximum time allowed before a receive operation faults.</para></summary>
    </member>
    <member name="P:ADK.WCF.BindingStartInfo.SendTimeout">
      <summary>
            Type: <see cref="T:System.TimeSpan" /><para>Specifies the maximum time allowed before a send operation faults.</para></summary>
    </member>
    <member name="P:ADK.WCF.BindingStartInfo.OpenTimeout">
      <summary>
            Type: <see cref="T:System.TimeSpan" /><para>Specifies the maximum time allowed before an open operation faults.</para></summary>
    </member>
    <member name="T:ADK.WCF.HttpBindingStartInfo">
      <summary>
            Defines the properties supported while creating new <see cref="T:System.ServiceModel.BasicHttpBinding" />s.
            </summary>
    </member>
    <member name="M:ADK.WCF.HttpBindingStartInfo.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.WCF.HttpBindingStartInfo" />.
            </summary>
    </member>
    <member name="T:ADK.WCF.IBindingFactory">
      <summary>
            Defines the properties/methods required to implement a standard binding factory.
            </summary>
    </member>
    <member name="M:ADK.WCF.IBindingFactory.CreateNamedPipeBinding(ADK.WCF.BindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.BindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.Channels.Binding" /><para>The new <see cref="T:System.ServiceModel.NetNamedPipeBinding" />.</para></returns>
    </member>
    <member name="M:ADK.WCF.IBindingFactory.CreateNetTcpBinding(ADK.WCF.TcpBindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.NetTcpBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.TcpBindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.NetTcpBinding" /><para>The new <see cref="T:System.ServiceModel.NetTcpBinding" />.</para></returns>
    </member>
    <member name="M:ADK.WCF.IBindingFactory.CreateHttpBinding(ADK.WCF.HttpBindingStartInfo)">
      <summary>
            Creates a new <see cref="T:System.ServiceModel.BasicHttpBinding" />.
            </summary>
      <param name="bindingInfo">Type: <see cref="T:ADK.WCF.HttpBindingStartInfo" /><para>Provides details about the properties for the new binding.</para></param>
      <returns>Type: <see cref="T:System.ServiceModel.BasicHttpBinding" /><para>The new <see cref="T:System.ServiceModel.BasicHttpBinding" />.</para></returns>
    </member>
    <member name="T:ADK.WCF.PortBindingStartInfo">
      <summary>
            Details the parameters passed when creating/starting a new PortBinding.
            </summary>
    </member>
    <member name="M:ADK.WCF.PortBindingStartInfo.#ctor(ADK.WCF.BindingSecurity,System.ServiceModel.TransferMode)">
      <summary>
            Creates a new instance of <see cref="T:ADK.WCF.PortBindingStartInfo" />.
            </summary>
      <param name="security">Type: <see cref="T:ADK.WCF.BindingSecurity" /><para>Specifies the type of security that the new binding will utilize.</para></param>
      <param name="transferMode">Type: <see cref="T:System.ServiceModel.TransferMode" /><para>Specifies the transfer protocol that new new instance will use.</para></param>
    </member>
    <member name="P:ADK.WCF.PortBindingStartInfo.SecurityType">
      <summary>
            Type: <see cref="T:ADK.WCF.BindingSecurity" /><para>Specifies the type of security that the new binding will utilize.</para></summary>
    </member>
    <member name="T:ADK.WCF.TcpBindingStartInfo">
      <summary>
            Defines the properties supported while creating new <see cref="T:System.ServiceModel.NetTcpBinding" />s.
            </summary>
    </member>
    <member name="M:ADK.WCF.TcpBindingStartInfo.#ctor(ADK.WCF.BindingSecurity,System.ServiceModel.TransferMode)">
      <summary>
            Creates a new instance of <see cref="T:ADK.WCF.TcpBindingStartInfo" />.
            </summary>
      <param name="security">Type: <see cref="T:ADK.WCF.BindingSecurity" /><para>Specifies the type of security that the new binding will utilize.</para></param>
      <param name="transferMode">Type: <see cref="T:System.ServiceModel.TransferMode" /><para>Specifies the transfer protocol that new new instance will use.</para></param>
    </member>
    <member name="P:ADK.WCF.TcpBindingStartInfo.ListenBackLog">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the back-log queue size.</para></summary>
    </member>
    <member name="T:ADK.Signatures.FindCertificateInfo">
      <summary>
            Contains the properties required to find a certificate.
            </summary>
    </member>
    <member name="M:ADK.Signatures.FindCertificateInfo.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Signatures.FindCertificateInfo" />.
            </summary>
    </member>
    <member name="P:ADK.Signatures.FindCertificateInfo.CertificateCommonName">
      <summary>
            Type: <see cref="T:System.String" /><para>The common name of the certificate.</para></summary>
    </member>
    <member name="P:ADK.Signatures.FindCertificateInfo.CertificateStore">
      <summary>
            Type: <see cref="T:System.String" /><para>The certificate store name.</para></summary>
    </member>
    <member name="P:ADK.Signatures.FindCertificateInfo.UseLocalMachine">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates which registry tree the certificate will be stored under:</para><para>If 1, then it will be stored under HKEY_LOCAL_MACHINE.</para><para>If 0, then it will be stored under HKEY_CURRENT_USER.</para></summary>
    </member>
    <member name="T:ADK.Signatures.InvisibleSignatureInfo">
      <summary>
            Contains the information required to successfully utilize a InvisiblySignFile method call.
            </summary>
    </member>
    <member name="T:ADK.Signatures.SignatureInfo">
      <summary>
            Details the common signature-function parameters.
            </summary>
    </member>
    <member name="M:ADK.Signatures.SignatureInfo.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Signatures.SignatureInfo" />.
            </summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.Signature">
      <summary>
            Type: <see cref="T:ADK.Signatures.FindCertificateInfo" /><para>Details the certificate that is to be used when signing the file.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.Location">
      <summary>
            Type: <see cref="T:System.String" /><para>The location where the signature was applied.
            <para><remarks>Typically, this is the city/state or company location.</remarks></para></para></summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.Reason">
      <summary>
            Type: <see cref="T:System.String" /><para>The reason for the signing the document.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.ContactInfo">
      <summary>
            Type: <see cref="T:System.String" /><para>Contact information of the signer.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.SignatureType">
      <summary>
            Type: <see cref="P:ADK.Signatures.SignatureInfo.SignatureType" /><para>Indicates the type of signature that is to be applied.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignatureInfo.SignFile">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current signature is enabled for use.</para></summary>
    </member>
    <member name="T:ADK.Signatures.SignatureType">
      <summary>
            Enumerates the supported types of signatures.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignatureType.PKCS_1">
      <summary>
            Acrobat 4+ signature (best for backwards compatibility).
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignatureType.PKCS_7">
      <summary>
            Acrobat 4+ signature.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignatureType.VeriSign">
      <summary>
            VeriSign Signature.  Requires the VeriSign plug-in.  Certificate Authority must be VeriSign.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignatureType.MicrosoftSign">
      <summary>
            Microsoft Signature (Acrobat 6+).
            </summary>
    </member>
    <member name="T:ADK.Signatures.SignFieldInfo">
      <summary>
            Contains information required to correctly sign an existing Form Field.
            </summary>
    </member>
    <member name="M:ADK.Signatures.SignFieldInfo.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Signatures.SignFieldInfo" />.
            </summary>
    </member>
    <member name="P:ADK.Signatures.SignFieldInfo.FieldName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the field where the signature is to be applied.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignFieldInfo.AppearanceInfo">
      <summary>
             Type: <see cref="T:System.String" /><para>Appearance parameter depending on the value of <see cref="P:ADK.Signatures.SignFieldInfo.Flags" />:</para><para>256 = <see cref="P:ADK.Signatures.SignFieldInfo.AppearanceInfo" /> must be the path to the image file (or MEMORY and set TK.ImageByteStream).</para><para>512 = <see cref="P:ADK.Signatures.SignFieldInfo.AppearanceInfo" /> must be the path to the PDF file (not yet supported).</para><para>2048 = <see cref="P:ADK.Signatures.SignFieldInfo.AppearanceInfo" /> is the PDF command string to be inserted.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignFieldInfo.Flags">
      <summary>
            Type: <see cref="T:ADK.Signatures.SignFieldFlags" /><para>Indicates the desired appearance parameters.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignFieldInfo.AltText">
      <summary>
            Type: <see cref="T:System.String" /><para>If set, this string will be printed in the signature field.</para></summary>
    </member>
    <member name="P:ADK.Signatures.SignFieldInfo.AltTextFont">
      <summary>
            Type: <see cref="T:ADK.Fonts.FontInfo" /><para>Details the font/size that is to be used for the <see cref="P:ADK.Signatures.SignFieldInfo.AltText" />.</para></summary>
    </member>
    <member name="T:ADK.Signatures.SignFieldFlags">
      <summary>
            Enumerates the supported appearance flags for SignField calls.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowCommonName">
      <summary>
            Displays the Common Name.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowLocation">
      <summary>
            Displays the Location.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowDistinguishedName">
      <summary>
            Displays the Distinguished Name.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.Show_activePDFLogo">
      <summary>
            Displays the activePDF Logo.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowDate">
      <summary>
            Displays the date.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowReason">
      <summary>
            Displays the Reason.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowLabels">
      <summary>
            Displays the labels.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.SetGraphicToImage">
      <summary>
            Sets the graphic to a client provided image.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.SetGraphicToPDF">
      <summary>
            Sets the graphic to a client provided PDF (not supported).
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.SetGraphicToCommonName">
      <summary>
            Sets the graphic to the Common Name.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.SetGraphicToPDFCommandStream">
      <summary>
            Sets the graphic to a PDF command stream.
            </summary>
    </member>
    <member name="F:ADK.Signatures.SignFieldFlags.ShowCheckmark">
      <summary>
            Displays a checkmark/red x icon.
            </summary>
    </member>
    <member name="T:ADK.Results.IPathsResult">
      <summary>
            Defines the properties/methods required to implement a result class, including a property listing file paths.
            </summary>
    </member>
    <member name="P:ADK.Results.IPathsResult.Paths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The path(s) associated with the <see cref="T:ADK.Results.IPathsResult" />.</para></summary>
    </member>
    <member name="T:ADK.Results.IResult">
      <summary>
            Defines the properties/methods required to implement a result variable.
            </summary>
    </member>
    <member name="P:ADK.Results.IResult.Status">
      <summary>
            Type: <see cref="T:ADK.Results.ResultStatus" /><para>Indicates the success/failure of the action corresponding to the current <see cref="T:ADK.Results.IResult" />.</para></summary>
    </member>
    <member name="P:ADK.Results.IResult.Details">
      <summary>
            Type: <see cref="T:System.String" /><para>Contains a detailed message, if any, associated with the result.</para></summary>
    </member>
    <member name="P:ADK.Results.IResult.Origin">
      <summary>
            Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the location where the result originated.</para></summary>
    </member>
    <member name="P:ADK.Results.IResult.ResultException">
      <summary>
            Type: <see cref="P:ADK.Results.IResult.ResultException" /><para>Details the exception, if any, associated with the result.</para></summary>
    </member>
    <member name="T:ADK.Results.IResultException">
      <summary>
            Contains data regarding the exception, if any that is associated with a result.
            </summary>
    </member>
    <member name="P:ADK.Results.IResultException.Message">
      <summary>
            Type: <see cref="T:System.String" /><para>The message describing the exception.</para></summary>
    </member>
    <member name="P:ADK.Results.IResultException.StackTrace">
      <summary>
            Type: <see cref="T:System.String" /><para>Traces the origin of the exception.</para></summary>
    </member>
    <member name="P:ADK.Results.IResultException.InnerException">
      <summary>
            Type: <see cref="T:ADK.Results.IResultException" /><para>Details the inner exception, if any, associated with the current exception.</para></summary>
    </member>
    <member name="T:ADK.Results.IResultOrigin">
      <summary>
            Provides information regarding the origin of a result.
            </summary>
    </member>
    <member name="P:ADK.Results.IResultOrigin.Class">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name of the class where the result originated.</para></summary>
    </member>
    <member name="P:ADK.Results.IResultOrigin.Function">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifics the name of the function, in <see cref="P:ADK.Results.IResultOrigin.Class" />, where the result originated.</para></summary>
    </member>
    <member name="T:ADK.Results.Result">
      <summary>
            Default implementation of <see cref="T:ADK.Results.IResult" />.
            </summary>
    </member>
    <member name="F:ADK.Results.Result._Status">
      <summary>
            Type: <see cref="T:ADK.Results.ResultStatus" /><para>Indicates the success/failure of the action corresponding to the current <see cref="T:ADK.Results.IResult" />.</para></summary>
    </member>
    <member name="F:ADK.Results.Result._ResultOrigin">
      <summary>
            Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Contains the data detailing the location where the result originated from.</para></summary>
    </member>
    <member name="F:ADK.Results.Result._ResultException">
      <summary>
            Type: <see cref="P:ADK.Results.Result.ResultException" /><para>Details the exception(s), if any, associated with the current <see cref="T:ADK.Results.Result" />.</para></summary>
    </member>
    <member name="M:ADK.Results.Result.#ctor(ADK.Results.ResultStatus,ADK.Results.ResultOrigin)">
      <summary>
            Creates a new <see cref="T:ADK.Results.Result" />.
            </summary>
      <param name="status">Type: <see cref="T:ADK.Results.ResultStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Indicates the origin of the new result.</para></param>
    </member>
    <member name="M:ADK.Results.Result.#ctor(ADK.Results.ResultStatus,System.String,System.String)">
      <summary>
            Creates a new <see cref="T:ADK.Results.Result" /> instance.
            </summary>
      <param name="status">Type: <see cref="T:ADK.Results.ResultStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="function">Type: <see cref="T:System.String" /><para>The function where the result originated.</para></param>
      <param name="className">Type: <see cref="T:System.String" /><para>The name of the class where the result originated.</para></param>
    </member>
    <member name="M:ADK.Results.Result.#ctor(ADK.Results.IResult)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Results.Result" />.
            </summary>
      <param name="iResult">Type: <see cref="T:ADK.Results.IResult" /><para>The existing instance that is to be copied into the new instance.</para></param>
    </member>
    <member name="P:ADK.Results.Result.Status">
      <summary>
            Type: <see cref="T:ADK.Results.ResultStatus" /><para>Indicates the success/failure of the action corresponding to the current <see cref="T:ADK.Results.IResult" />.</para></summary>
    </member>
    <member name="P:ADK.Results.Result.Origin">
      <summary>
            Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Specifies the origin, in the current application code, where the result was created.</para></summary>
    </member>
    <member name="P:ADK.Results.Result.Details">
      <summary>
            Type: <see cref="T:System.String" /><para>The details, if any, regarding the success/failure of the current <see cref="T:ADK.Results.IResult" />.</para></summary>
    </member>
    <member name="P:ADK.Results.Result.ResultException">
      <summary>
            Type: <see cref="P:ADK.Results.Result.ResultException" /><para>The exception, if any, which caused the failure.</para></summary>
    </member>
    <member name="T:ADK.Results.ResultException">
      <summary>
            Contains data regarding the exception, if any that is associated with a result.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultException._InnerException">
      <summary>
            Type: <see cref="T:ADK.Results.ResultException" /><para>Details the inner exception, if any, associated with the current exception.</para></summary>
    </member>
    <member name="M:ADK.Results.ResultException.#ctor">
      <summary>
            Creates a default instance of <see cref="T:ADK.Results.ResultException" />.
            </summary>
    </member>
    <member name="M:ADK.Results.ResultException.#ctor(System.Exception)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Results.ResultException" />.
            </summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The original exception upon which the new instance is based.</para></param>
    </member>
    <member name="M:ADK.Results.ResultException.#ctor(ADK.Results.IResultException)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Results.ResultException" />.
            </summary>
      <param name="ex">Type: <see cref="T:ADK.Results.IResultException" /><para>The original exception upon which the new instance is based.</para></param>
    </member>
    <member name="P:ADK.Results.ResultException.Message">
      <summary>
            Type: <see cref="T:System.String" /><para>The message describing the exception.</para></summary>
    </member>
    <member name="P:ADK.Results.ResultException.StackTrace">
      <summary>
            Type: <see cref="T:System.String" /><para>Traces the origin of the exception.</para></summary>
    </member>
    <member name="P:ADK.Results.ResultException.InnerException">
      <summary>
            Type: <see cref="T:ADK.Results.IResultException" /><para>Details the inner exception, if any, associated with the current exception.</para></summary>
    </member>
    <member name="T:ADK.Results.ResultOrigin">
      <summary>
            Provides information regarding the origin of a result.
            </summary>
    </member>
    <member name="M:ADK.Results.ResultOrigin.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Results.ResultOrigin" />.
            </summary>
      <param name="className">Type: <see cref="T:System.String" /><para>The name of the class where the new instance orginates.</para></param>
      <param name="functionName">Type: <see cref="T:System.String" /><para>The name of the function where the new instance originates.</para></param>
    </member>
    <member name="P:ADK.Results.ResultOrigin.Class">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name of the class where the result originated.</para></summary>
    </member>
    <member name="P:ADK.Results.ResultOrigin.Function">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifics the name of the function, in <see cref="P:ADK.Results.ResultOrigin.Class" />, where the result originated.</para></summary>
    </member>
    <member name="T:ADK.Results.ResultStatus">
      <summary>
            Enumerates the common cross-product status values that can be expected in a request result.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.Success">
      <summary>
            The corresponding call was successfully executed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ProductError">
      <summary>
            A product specific error has occured.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.FileNotFound">
      <summary>
            The file was not found.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.OldFileFound">
      <summary>
            The file exists, but is older than the expected conversion time.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.DirectoryNotFound">
      <summary>
            A directory could not be found.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ValueOutofRange">
      <summary>
            The specified value was not found in a collection.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.CannotOverwriteExisting">
      <summary>
            The desired output file exists, but current settings do not allow the file to be overwritten.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnableToMoveFile">
      <summary>
            A file could not be moved/copied to the desired location.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.CreateDirectoryFailed">
      <summary>
            An attempt to create a directory failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnableToAccessFile">
      <summary>
            Unable to access the desired file.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.InvalidParameter">
      <summary>
            An invalid value/object was passed to a function.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.NullParameter">
      <summary>
            A null argument was passed to a function.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.Exception">
      <summary>
            An exception occurred outside any specific functionality.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.CallNotSupported">
      <summary>
            The current call is not supported in the executing context.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.FailedPerSettings">
      <summary>
            The current call failed due to an implicit setting.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ServiceAlreadyRunning">
      <summary>
            The service engine is already running.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ServiceNotRunning">
      <summary>
            The service engine is not running.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.SettingsUpToDate">
      <summary>
            The settings are already current and require no updates.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.SettingsUpdated">
      <summary>
            The settings were updated from a 'stale' condition.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnableToAccessSettingsFile">
      <summary>
            The settings file could not be accessed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.HttpPostFailed">
      <summary>
            An attempt to Post data via Http failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.HttpUnlockFailed">
      <summary>
            An attempt to unlock the Http library failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.NotInitialized">
      <summary>
            A plugin, or initializable instance, was not properly initialized before being called.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.PluginAssemblyInvalid">
      <summary>
            The plugin assembly is not valid for hosting.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.PluginTypeMismatch">
      <summary>
            The plugin assembly/type do not match the values exported.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.EndpointNotAdded">
      <summary>
            An attempt to add an endpoint failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.EndpointNotFound">
      <summary>
            The target endpoint was not found.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.WCFCommunicationException">
      <summary>
            Unhandled WCF communication exception was encountered.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnableToAccessSemaphore">
      <summary>
            Unable to access critical section protected by a semaphore.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.Timeout">
      <summary>
            Request timed out.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.JobDataNotFound">
      <summary>
            JobData for the conversion was not present in the input stream.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnableToDecodeJobData">
      <summary>
            JobData could not be decoded.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.PrintedToPostScriptFile">
      <summary>
            The print job was saved to PostScript.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ConversionEngineInitializationFailed">
      <summary>
            The PostScript conversion engine failed to initialize.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ConversionApplicationException">
      <summary>
            The conversion application threw an exception.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.UnknownConversionCommand">
      <summary>
            The conversion application received an unknown command.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.RunStringEndFailed">
      <summary>
            Call to GhostScript RunStringEnd failed.  Check log for more details.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.OpenInputFileFailed">
      <summary>
            A call to OpenInputFile failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.OpenOutputFileFailed">
      <summary>
            A call to OpenOutputFile failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.CopyFormFailed">
      <summary>
            A call to CopyForm failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.LinearizeFailed">
      <summary>
            A call to LinearizeFile failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.InvisiblySignFileFailed">
      <summary>
            A call to InvisiblySignFile failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.ImageToPDFFailed">
      <summary>
            A call to ImageToPDF failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.SaveMemoryToDiskFailed">
      <summary>
            A call to SaveMemoryToDisk failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.FindCertificateFailed">
      <summary>
            A call to FindCertificate failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.MergeFileFailed">
      <summary>
            A call to MergeFile failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.StampPDFFailed">
      <summary>
            Attempt to add stamps to the PDF failed.
            </summary>
    </member>
    <member name="F:ADK.Results.ResultStatus.NotLicensed">
      <summary>
            The product is not licensed.
            </summary>
    </member>
    <member name="T:ADK.Properties.Resources">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:ADK.Properties.Resources.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:ADK.Properties.Resources.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:ADK.Properties.Resources.APEnvironmentXml">
      <summary>
              Looks up a localized string similar to AP_Environment.xml.
            </summary>
    </member>
    <member name="T:ADK.Profiles.ProfileSummary">
      <summary>
            Summarizes a profile.
            </summary>
    </member>
    <member name="F:ADK.Profiles.ProfileSummary._Name">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the name of the profile.</para></summary>
    </member>
    <member name="F:ADK.Profiles.ProfileSummary._Description">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the name of the </para></summary>
    </member>
    <member name="M:ADK.Profiles.ProfileSummary.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Profiles.ProfileSummary" />.
            </summary>
      <param name="name">Type: <see cref="T:System.String" /><para>The name of the profile.</para></param>
      <param name="desc">Type: <see cref="T:System.String" /><para>The description of the profile, if any.</para></param>
    </member>
    <member name="P:ADK.Profiles.ProfileSummary.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the name of the profile.</para></summary>
    </member>
    <member name="P:ADK.Profiles.ProfileSummary.Description">
      <summary>
            Type: <see cref="T:System.String" /><para>Indicates the name of the </para></summary>
    </member>
    <member name="T:ADK.Printers.ColorMode">
      <summary>
            Enumerates the Printer Color Mode options.
            </summary>
    </member>
    <member name="F:ADK.Printers.ColorMode.Undefined">
      <summary>
            No selection has been made via the API, the current system settings for the printer will be used.
            </summary>
    </member>
    <member name="F:ADK.Printers.ColorMode.BlackAndWhite">
      <summary>
            The printer output will be black and white.
            </summary>
    </member>
    <member name="F:ADK.Printers.ColorMode.Color">
      <summary>
            The printer output will be color.
            </summary>
    </member>
    <member name="T:ADK.Printers.Orientation">
      <summary>
            Enumerates the available options for printer output orientation.
            </summary>
    </member>
    <member name="F:ADK.Printers.Orientation.Undefined">
      <summary>
            No selection has been made via the API, the current system settings for the printer will be used.
            </summary>
    </member>
    <member name="F:ADK.Printers.Orientation.Portrait">
      <summary>
            The printer output will be in Portrait Orientation.
            </summary>
    </member>
    <member name="F:ADK.Printers.Orientation.Landscape">
      <summary>
            The printer output will be in Landscape Orientation.
            </summary>
    </member>
    <member name="T:ADK.Printers.PaperSize">
      <summary>
            Enumerates the predefined Printer PageSize Options
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Undefined">
      <summary>
            PaperSize has not been set.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Custom">
      <summary>
            The size is specified in the PaperLength and PaperWidth properties.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Letter">
      <summary>
            8.5 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.LetterSmall">
      <summary>
            8.5 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Tabloid">
      <summary>
            11 by 17 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Ledger">
      <summary>
            17 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Legal">
      <summary>
            8.5 by 14 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Statement">
      <summary>
            5.5 by 8.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Executive">
      <summary>
            7.25 by 10.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.A3">
      <summary>
            297 by 420 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.A4">
      <summary>
            210 by 297 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.A4Small">
      <summary>
            210 by 297 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.A5">
      <summary>
            148 by 210 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.B4">
      <summary>
            250 by 353 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.B5">
      <summary>
            176 by 250 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Folio">
      <summary>
            8.5 by 13 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Quarto">
      <summary>
            215 by 275 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Bristol">
      <summary>
            10 by 14 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.TabloidMM">
      <summary>
            11.69 by 18 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Note">
      <summary>
            8.5 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeNumber9">
      <summary>
            3.875 by 8.875 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeNumber10">
      <summary>
            4.125 by 9.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeNumber11">
      <summary>
            4.5 by 10.375 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeNumber12">
      <summary>
            4.75 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeNumber14">
      <summary>
            5 by 11.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.ArchitecturalC">
      <summary>
            18 by 24 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.ArchitecturalD">
      <summary>
            24 by 36 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.ArchitecturalE">
      <summary>
            36 by 48 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeDL">
      <summary>
            110 by 220 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeC3">
      <summary>
            324 by 428 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeC4">
      <summary>
            229 by 324 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeC5">
      <summary>
            162 by 229 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeC6">
      <summary>
            114 by 162 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeC65">
      <summary>
            114 by 229 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeB4">
      <summary>
            250 by 353 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeB5">
      <summary>
            176 by 250 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeB6">
      <summary>
            176 by 125 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeMM">
      <summary>
            110 by 230 mm.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.EnvelopeMonarch">
      <summary>
            3.875 by 7.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.Envelope">
      <summary>
            3.625 by 6.5 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.USStandardFanfold">
      <summary>
            14.875 by 11 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.GermanStandardFanfold">
      <summary>
            8.5 by 12 inches.
            </summary>
    </member>
    <member name="F:ADK.Printers.PaperSize.GermanLegalFanfold">
      <summary>
            8.5 by 13 inches.
            </summary>
    </member>
    <member name="T:ADK.Printers.PrinterUtility">
      <summary>
            Provides printer methods for use with direct printing conversions.
            </summary>
    </member>
    <member name="F:ADK.Printers.PrinterUtility.DCLock">
      <summary>
            Type: <see cref="T:System.Object" /><para>Used to synchronize access to the print-test device context.</para></summary>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.FreePtr(System.IntPtr@)">
      <summary>
            Frees any memory associated with the <paramref name="hPtr" />.
            </summary>
      <param name="hPtr">Type: <see cref="T:System.IntPtr" /><para>The handle/pointer that is to be freed.</para></param>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.ApplyPrinterSettings(System.IntPtr,System.String,ADK.Printers.Devmode.DevmodeOptions)">
      <summary>
            Applies the <paramref name="printerSet" /> to the <paramref name="PrinterName" />, accessed via <paramref name="hPrinter" />.
            </summary>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the currently opened <paramref name="PrinterName" />.</para></param>
      <param name="PrinterName">Type: <see cref="T:System.String" /><para>Name of the printer being adjusted.</para></param>
      <param name="printerSet">Type: <see cref="T:ADK.Printers.Devmode.DevmodeOptions" /><para>Desired printer settings.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Return code corresponding to the success/failure of the request.</para></returns>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.GetPrinterSettings(System.IntPtr,System.String,ADK.Printers.Devmode.DEVMODE@)">
      <summary>
            Gets the <see cref="T:ADK.Printers.Devmode.DEVMODE" /> instance associated with the provided <paramref name="hPrinter" />.
            </summary>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the currently opened <paramref name="PrinterName" />.</para></param>
      <param name="PrinterName">Type: <see cref="T:System.String" /><para>Name of the printer.</para></param>
      <param name="dm">Type: <see cref="T:ADK.Printers.Devmode.DEVMODE" /><para>The devmode settings for the printer.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Return code corresponding to the success/failure of the request.</para></returns>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.TestPrinter(System.String,System.String,System.String)">
      <summary>
            Performs a simply print test on <paramref name="pName" />.  Prints a <paramref name="dName">document</paramref>, containing <paramref name="StringToPrint" />.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the printer to print the test document on.</para></param>
      <param name="dName">Type: <see cref="T:System.String" /><para>The name of the document printed.</para></param>
      <param name="StringToPrint">Type: <see cref="T:System.String" /><para>The string of text to include in the document.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>The return code associated with the success/failure of the print test.</para></returns>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.SetDEVMODE(System.String,ADK.Printers.Devmode.DevmodeOptions)">
      <summary>
            Applies the specified <paramref name="printerSet">printer settings</paramref> to <paramref name="PrinterName" />.
            </summary>
      <param name="PrinterName">Type: <see cref="T:System.String" /><para>The name of the printer to apply <paramref name="printerSet" /> to.</para></param>
      <param name="printerSet">Type: <see cref="T:ADK.Printers.Devmode.DevmodeOptions" /><para>Class instance wrapping the XML node associated with the desired printer settings.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Return code corresponding to the success/failure of the request.</para></returns>
    </member>
    <member name="M:ADK.Printers.PrinterUtility.GetDEVMODE(System.String,ADK.Printers.Devmode.DEVMODE@)">
      <summary>
            Retrieves the <paramref name="dMode">devmode</paramref> settings for the target <paramref name="PrinterName" />.
            </summary>
      <param name="PrinterName">Type: <see cref="T:System.String" /><para>The name of the printer to grab the <see cref="T:ADK.Printers.Devmode.DEVMODE" /> settings for.</para></param>
      <param name="dMode">Type: <see cref="T:ADK.Printers.Devmode.DEVMODE" /><para>The devmode settings for the printer.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Return code corresponding to the success/failure of the request.</para></returns>
    </member>
    <member name="P:ADK.Printers.PrinterUtility.Product">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the product using <see cref="T:ADK.Printers.PrinterUtility" />.</para></summary>
    </member>
    <member name="T:ADK.Printers.WinPrintAPI">
      <summary>
            Contains the WINAPI calls associated with creating/processing a print document request.
            </summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.TRANSPARENT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value represending transparent background.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.OPAQUE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value representing opaque background.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_TEXT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_TEXT flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_LOMETRIC">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_LOMETRIC flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_HIMETRIC">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_HIMETRIC flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_LOENGLISH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_LOENGLISH flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_HIENGLISH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_HIENGLISH flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_TWIPS">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_TWIPS flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_ISOTROPIC">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_ISOTROPIC flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_ANISOTROPIC">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_ANISOTROPIC flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_MIN">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_MIN flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_MAX">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_MAX flag.</para></summary>
    </member>
    <member name="F:ADK.Printers.WinPrintAPI.MM_MAX_FIXEDSCALE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value associated with MM_TWIPS flag.</para></summary>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.CreateDC(System.String,System.String,System.String,System.IntPtr)">
      <summary>
            Creates a device context for a device.
            </summary>
      <param name="lpszDriver">Type: <see cref="T:System.String" /><para>Specifies the name of a driver.</para></param>
      <param name="lpszDevice">Type: <see cref="T:System.String" /><para>Specifies the name of the specific output device being used.</para></param>
      <param name="lpszOutput">Type: <see cref="T:System.String" /><para>The output destination.</para></param>
      <param name="lpInitData">Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure containing the device specific initialization data.</para></param>
      <returns>Type: <see cref="T:System.IntPtr" /><para>Returns the handle to a device context for the specified device, or NULL if failed.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.DeleteDC(System.IntPtr)">
      <summary>
            Deletes the specified device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>The handle to the device context to be deleleted.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates the success/failure of the delete attempt.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.StartDoc(System.IntPtr,ADK.Printers.DOCINFO@)">
      <summary>
            Starts a print job.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="ipdi">Type: <see cref="T:ADK.Printers.DOCINFO" /><para>Contains the name of the document file and the name of the output file.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates if the print job started successfully.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.StartPage(System.IntPtr)">
      <summary>
            Prepares the printer driver to accept data.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.EndPage(System.IntPtr)">
      <summary>
            Notifies the device that the application has finished writing to a page.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.EndDoc(System.IntPtr)">
      <summary>
            Ends a print job.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.SetBkMode(System.IntPtr,System.Int32)">
      <summary>
            Sets the background mix mode of the specified device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="iBkMode">Type: <see cref="T:System.Int32" /><para>The background mode.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.SelectObject(System.IntPtr,System.IntPtr)">
      <summary>
            Selects an object into the specified device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="hgdiobj">Type: <see cref="T:System.IntPtr" /><para>The handle to the object to be selected.</para></param>
      <returns>Type: <see cref="T:System.IntPtr" /><para>Handle to the object being replaced.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.SetTextColor(System.IntPtr,System.Int32)">
      <summary>
            Sets the text color for the specified device context to the specified color.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="crColor">Type: <see cref="T:System.Int32" /><para>The color of the text.</para></param>
      <returns>Type: <see cref="T:System.UInt32" /><para>Color reference for the previous text color.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.GetBkColor(System.IntPtr)">
      <summary>
            Returns the current background color for the specified device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <returns>Type: <see cref="T:System.UInt32" /><para>Color reference value for the current background color.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.GetCurrentPositionEx(System.IntPtr,ADK.Printers.POINT@)">
      <summary>
            Retrieves the current position in logical coordinates.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="lpPoint">Type: <see cref="T:ADK.Printers.POINT" /><para>Receives the logical coordinates of the current position.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.GetTextAlign(System.IntPtr)">
      <summary>
            Retrieves the text-alignment setting for the specified device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <returns>Type: <see cref="T:System.UInt32" /><para>The status of the text-alignment flags.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.SetMapMode(System.IntPtr,System.Int32)">
      <summary>
            Sets the mapping mode of the device context.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="fnMapMode">Type: <see cref="T:System.Int32" /><para>The new mapping mode.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Identifies the previous mapping mode.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.GetTextExtentPoint32(System.IntPtr,System.String,System.Int32,ADK.Printers.SIZE@)">
      <summary>
            Computes the width and height of the specified string of text.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="lpString">Type: <see cref="T:System.String" /><para>Specifies the text string.</para></param>
      <param name="cbString">Type: <see cref="T:System.Int32" /><para>The length of <paramref name="lpString" />.</para></param>
      <param name="lpSize">Type: <see cref="T:ADK.Printers.SIZE" /><para>Receives the dimensions of the string, in logical units.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.TextOut(System.IntPtr,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
            Writes a character string at the specified location, using the currently selected font, background color, and text color.
            </summary>
      <param name="hdc">Type: <see cref="T:System.IntPtr" /><para>Handle to the device context for the print job.</para></param>
      <param name="nXStart">Type: <see cref="T:System.Int32" /><para>The x-coordinate, in logical coordinates, of the reference point that the system uses to align the string.</para></param>
      <param name="nYStart">Type: <see cref="T:System.Int32" /><para>The y-coordinate, in logical coordinates, of the reference point that the system uses to align the string.</para></param>
      <param name="lpString">Type: <see cref="T:System.String" /><para>String to be drawn.</para></param>
      <param name="cbString">Type: <see cref="T:System.Int32" /><para>The length of <paramref name="lpString" />.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the output operation was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.WinPrintAPI.DeleteObject(System.IntPtr)">
      <summary>
            Deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object.
            </summary>
      <param name="hObject">Type: <see cref="T:System.IntPtr" /><para>Handle of the object to be deleted.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the delete operation was successful.</para></returns>
    </member>
    <member name="T:ADK.Printers.DOCINFO">
      <summary>
            Defines the methods associated with a WINAPI DOCINFO object.
            </summary>
    </member>
    <member name="F:ADK.Printers.DOCINFO.cbSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The size of the instance.</para></summary>
    </member>
    <member name="F:ADK.Printers.DOCINFO.lpszDocName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the document.</para></summary>
    </member>
    <member name="F:ADK.Printers.DOCINFO.lpszOutput">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the output file, if NULL output is sent to the target device.</para></summary>
    </member>
    <member name="F:ADK.Printers.DOCINFO.lpszDatatype">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the type of data used to record the print job.</para></summary>
    </member>
    <member name="F:ADK.Printers.DOCINFO.ftType">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies additional information about the print job.</para></summary>
    </member>
    <member name="T:ADK.Printers.SIZE">
      <summary>
            Defines the properties associated with a WINAPI Size instance.
            </summary>
    </member>
    <member name="F:ADK.Printers.SIZE.cx">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The width of the current size.</para></summary>
    </member>
    <member name="F:ADK.Printers.SIZE.cy">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The height of the current size.</para></summary>
    </member>
    <member name="M:ADK.Printers.SIZE.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Printers.SIZE" />.
            </summary>
      <param name="cx">Type: <see cref="T:System.Int32" /><para>The width of the current size.</para></param>
      <param name="cy">Type: <see cref="T:System.Int32" /><para>The height of the current size.</para></param>
    </member>
    <member name="T:ADK.Printers.POINT">
      <summary>
            Defines the properties associated with a WINAPI Point.
            </summary>
    </member>
    <member name="F:ADK.Printers.POINT.X">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The X-coordinate of the current point.</para></summary>
    </member>
    <member name="F:ADK.Printers.POINT.Y">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The Y-coordinate of the current point.</para></summary>
    </member>
    <member name="M:ADK.Printers.POINT.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Printers.POINT" />.
            </summary>
      <param name="x">Type: <see cref="T:System.Int32" /><para>The X-coordinate of the current point.</para></param>
      <param name="y">Type: <see cref="T:System.Int32" /><para>The Y-coordinate of the current point.</para></param>
    </member>
    <member name="T:ADK.Printers.TrueTypeOption">
      <summary>
            Enumerates the Printer TrueType options.
            </summary>
    </member>
    <member name="F:ADK.Printers.TrueTypeOption.Undefined">
      <summary>
            No selection has been made via the API, the current system settings for the printer will be used.
            </summary>
    </member>
    <member name="F:ADK.Printers.TrueTypeOption.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="F:ADK.Printers.TrueTypeOption.Bitmap">
      <summary>
            Prints TrueType fonts as graphics.
            </summary>
    </member>
    <member name="F:ADK.Printers.TrueTypeOption.Softfonts">
      <summary>
            Downloads TrueType fonts as soft fonts.
            </summary>
    </member>
    <member name="F:ADK.Printers.TrueTypeOption.Substitute">
      <summary>
            Substitues device fonts for TrueType fonts (Default).
            </summary>
    </member>
    <member name="T:ADK.Printers.Management.DRIVER_INFO_3">
      <summary>
            Contains printer driver information.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.cVersion">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The operating system version for which the driver was written.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pEnvironment">
      <summary>
            Type: <see cref="T:System.String" /><para>The environment for which the driver was written.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pDriverPath">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/full path for the file that contains the device driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pDataFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/full path for the file that contains driver data.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pConfigFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/full path for the device driver's configuration dynamic-link library.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pHelpFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/full path for the device driver's help file.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pDependentFiles">
      <summary>
            Type: <see cref="T:System.String" /><para>Sequence of strings containing the name of a file that the driver depends on.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pMonitorName">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the language monitor, only for bidirectional communication.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_3.pDefaultDataType">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the default data type of the print job.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.DRIVER_INFO_8">
      <summary>
            Contains information/settings for a printer driver.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.cVersion">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The version of the OS for which the driver was written.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pEnvironment">
      <summary>
            Type: <see cref="T:System.String" /><para>The environment which the driver supports.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pDriverPath">
      <summary>
            Type: <see cref="T:System.String" /><para>The full name/path of the file that contains the device driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pDataFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The full name/path of the file that contains the data.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pConfigFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The full name/path of the config file.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pHelpFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The full name/path of the help file.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pDependentFiles">
      <summary>
            Type: <see cref="T:System.String" /><para>The names of the dependenty files.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pMonitorName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the monitor file associated with the print driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pDefaultDataType">
      <summary>
            Type: <see cref="T:System.String" /><para>The default data type.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszzPreviousNames">
      <summary>
            Type: <see cref="T:System.String" /><para>The previous names of the driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.ftDriverDate">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.FILETIME" /><para>The date of the driver package.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.dwlDriverVersion">
      <summary>
            Type: <see cref="T:System.UInt64" /><para>The version number of the driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszMfgName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the manufacturer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszOEMUrl">
      <summary>
            Type: <see cref="T:System.String" /><para>The Url of the OEM.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszHardwareID">
      <summary>
            Type: <see cref="T:System.String" /><para>The hardware ID of the driver package.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszProvider">
      <summary>
            Type: <see cref="T:System.String" /><para>The provider string.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszPrintProcessor">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the print processor associated with the driver.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszVendorSetup">
      <summary>
            Type: <see cref="T:System.String" /><para>Indentifies the vendor dll/entry point.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszzColorProfiles">
      <summary>
            Type: <see cref="T:System.String" /><para>The supported color profiles.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszInfPath">
      <summary>
            Type: <see cref="T:System.String" /><para>The path of the inf file.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.dwPrinterDriverAttributes">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The driver attributes.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.pszzCoreDriverDependencies">
      <summary>
            Type: <see cref="T:System.String" /><para>The driver dependencies.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.ftMinInboxDriverVerDate">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.FILETIME" /><para>Earliest allowed date.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.DRIVER_INFO_8.dwlMinInboxDriverVerVersion">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>Earliest allowed version.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.MONITOR_INFO_2">
      <summary>
            Identifies a monitor.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.MONITOR_INFO_2.pName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the monitor.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.MONITOR_INFO_2.pEnvironment">
      <summary>
            Type: <see cref="T:System.String" /><para>The environment for which the monitor was written.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.MONITOR_INFO_2.pDLLName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the monitor dll.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.PRINTER_DEFAULTS">
      <summary>
            Specifies the default data type, environment, initialization data, and access rights for a printer.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_DEFAULTS.pDatatype">
      <summary>
            Type: <see cref="T:System.IntPtr" /><para>Pointer to a string specifying the default data type for a printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_DEFAULTS.pDevMode">
      <summary>
            Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure that identifies the default environment and initialization data for a printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_DEFAULTS.DesiredAccess">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies desired access rights for a printer.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.PRINTER_INFO_2">
      <summary>
            Contains the properties required for use with certain WinAPI calls.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pServerName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the machine where the printer is located.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pPrinterName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pShareName">
      <summary>
            Type: <see cref="T:System.String" /><para>The shared name of the printer, if any.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pPortName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the port associated with the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pDriverName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the driver associated with the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pComment">
      <summary>
            Type: <see cref="T:System.String" /><para>Brief description of the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pLocation">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the physical location of the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pDevMode">
      <summary>
            Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> strucutre defining the default printer data.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pSepFile">
      <summary>
            Type: <see cref="T:System.String" /><para>Name of the file used to create the separator page.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pPrintProcessor">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the print processor used by the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pDatatype">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the data type used to record the print job.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pParameters">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the default print-processor parameters.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.pSecurityDescriptor">
      <summary>
            Type: <see cref="T:System.IntPtr" /><para>Pointer to a security descriptor structure for the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.Attributes">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The printer attributes.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.Priority">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>Priority value that the spooler uses to route print jobs.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.DefaultPriority">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The default priority value assigned to each print job.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.StartTime">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The earliest time at which the printer will print a job.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.UntilTime">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The latest time at which printer will print a job.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.Status">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The printer status.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.cJobs">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The number of print jobs that have been queued for the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_2.AveragePPM">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The average number of pages per minute that have been printed on the printer.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.PRINTER_INFO_8">
      <summary>
            Struct used when retrieving only the devmode settings of a printer.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.PRINTER_INFO_8.pDevMode">
      <summary>
            Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure.</para></summary>
    </member>
    <member name="T:ADK.Printers.Management.WinAPI">
      <summary>
            Contains the Windows API Imports for Printer/Port installation.
            </summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.PRINTER_ACCESS_ADMINISTRATOR">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The permission to administrate a printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.PRINTER_ACCESS_USE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The permission to use a printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.STANDARD_RIGHTS_REQUIRED">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The permission to perform standard operations on a printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.PRINTER_ALL_ACCESS">
      <summary>
            Type: <see cref="T:System.Int32" /><para>All allowable permissions.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_ORIENTATION">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Orientation.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PAPERSIZE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PaperSize.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PAPERLENGTH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PaperLength.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PAPERWIDTH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PaperWidth.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_SCALE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Scale.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_POSITION">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Position.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_NUP">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, NUP.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DISPLAYORIENTATION">
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DisplayOrientation.</para></member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_COPIES">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Copies.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DEFAULTSOURCE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DefaultSource.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PRINTQUALITY">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PrintQuality.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_COLOR">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Color.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DUPLEX">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Duplex.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_YRESOLUTION">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, YResolution.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_TTOPTION">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, TTOption.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_COLLATE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, Collate.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_FORMNAME">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, FormName.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_LOGPIXELS">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, LogPixels.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_BITSPERPEL">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, BitsPerPixel.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PELSWIDTH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PelsWidth.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PELSHEIGHT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PelsHeight.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DISPLAYFLAGS">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DisplayFlags.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DISPLAYFREQUENCY">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DisplayFrequency.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_ICMMETHOD">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, ICMMethod.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_ICMINTENT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, ICMIntent.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_MEDIATYPE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, MediaType.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DITHERTYPE">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DitherType.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PANNINGWIDTH">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PanningWidth.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_PANNINGHEIGHT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, PanningHeight.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.DM_DISPLAYFIXEDOUTPUT">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Associated with the devmode setting for, DisplayFixedOutput.</para></summary>
    </member>
    <member name="F:ADK.Printers.Management.WinAPI.REG_DWORD">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The value corresponding to a registry attempt to read DWORD.</para></summary>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.AddPrinter(System.Int32,System.UInt32,ADK.Printers.Management.PRINTER_INFO_2@)">
      <summary>
            Adds a printer to the list of supported printers for a specified server.
            </summary>
      <param name="pName">Type: <see cref="T:System.Int32" /><para>Pointer to a string specifying the name of the server on which the printer should be installed.  If this is NULL, the printer is installed locally.</para></param>
      <param name="Level">Type: <see cref="T:System.UInt32" /><para>The version of the structure to which <paramref name="pPrinter" /> points.  This value must be 2.</para></param>
      <param name="pPrinter">Type: <see cref="T:ADK.Printers.Management.PRINTER_INFO_2" /><para>The pointer to a <see cref="T:ADK.Printers.Management.PRINTER_INFO_2" /> structure that contains information about the printer.</para></param>
      <returns>Type: <see cref="T:System.IntPtr" /><para>If the function succeeds, the return value is a handle to a new printer object, otherwise NULL.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.AddPrinterDriver(System.Int32,System.UInt32,ADK.Printers.Management.DRIVER_INFO_3@)">
      <summary>
            Installs a local or remote printer driver and associates the configuration, data, and driver files.
            </summary>
      <param name="pName">Type: <see cref="T:System.Int32" /><para>Pointer to a string specifying the name of the server on which the driver should be installed.  If this is NULL, the driver is installed locally.</para></param>
      <param name="Level">Type: <see cref="T:System.UInt32" /><para>The version of the structure to which <paramref name="pDriverInfo" /> points.</para></param>
      <param name="pDriverInfo">Type: <see cref="T:ADK.Printers.Management.DRIVER_INFO_3" /><para>Pointer to a structure containing printer driver information.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If the function succeeds, the return value is a nonzero value, else return value is zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DeletePrinterDriverEx(System.String,System.String,System.String,System.Int32,System.Int32)">
      <summary>
            Removes the specified printer-driver name from the list of names of supported drivers on a server and deletes the files associated with the driver.
            </summary>
      <param name="pName">Type: <see cref="T:System.Int32" /><para>Pointer to a string specifying the name of the server from which the driver should be deleted.  If this is NULL, the driver is deleted locally.</para></param>
      <param name="pEnvironment">Type: <see cref="T:System.String" /><para>Specifies the environment from which the driver is to be deleted.</para></param>
      <param name="pDriverName">Type: <see cref="T:System.String" /><para>The name of the driver to delete.</para></param>
      <param name="dwDeleteFlag">Type: <see cref="T:System.Int32" /><para>The options for deleting files and versions of the driver.</para></param>
      <param name="dwVersionFlag">Type: <see cref="T:System.Int32" /><para>The version of the driver to be deleted.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the delete was successful.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.AddMonitor(System.String,System.UInt32,ADK.Printers.Management.MONITOR_INFO_2@)">
      <summary>
            Installs a local port monitor and links the configuration, data, and monitor files.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the server on which the monitor should be installed.  If NULL, installed locally.</para></param>
      <param name="Level">Type: <see cref="T:System.UInt32" /><para>The version of the structure to which <see cref="T:ADK.Printers.Management.MONITOR_INFO_2" /> points.  The value must be 2.</para></param>
      <param name="pMonitors">Type: <see cref="T:ADK.Printers.Management.MONITOR_INFO_2" /><para>Contains the details regarding the monitor to be installed.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If function succeeds returns non-zero value, otherwise zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DeleteMonitor(System.String,System.String,System.String)">
      <summary>
            Removes a port monitor added by the <see cref="M:ADK.Printers.Management.WinAPI.AddMonitor(System.String,System.UInt32,ADK.Printers.Management.MONITOR_INFO_2@)" /> function.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the server from which the monitor should be removed.  If NULL, removed from the local server.</para></param>
      <param name="pEnvironment">Type: <see cref="T:System.String" /><para>Specifies the environment from which the monitor is to be removed.</para></param>
      <param name="pMonitorName">Type: <see cref="T:System.String" /><para>The name of the monitor to be removed.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.AddPort(System.String,System.Int32,System.String)">
      <summary>
            Adds the name of a port to the list of supported ports.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the server to which the port is connected.  If NULL, the port is local.</para></param>
      <param name="hWnd">Type: <see cref="T:System.Int32" /><para>The handle to parent window of the AddPort dialog box.</para></param>
      <param name="pMonitorName">Type: <see cref="T:System.String" /><para>The name of the monitor associated with the port.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If function succeeds returns non-zero value, otherwise zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DeletePort(System.String,System.Int32,System.String)">
      <summary>
            Allows the user to delete a port name.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the server from which the port should be deleted.  If NULL, the port is local.</para></param>
      <param name="hWnd">Type: <see cref="T:System.Int32" /><para>The handle to the parent window of the port-deletion dialog box.</para></param>
      <param name="pPortName">Type: <see cref="T:System.String" /><para>The name of the port that should be deleted.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If function succeeds returns non-zero value, otherwise zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.ClosePrinter(System.IntPtr)">
      <summary>
            Closes the specified printer object.
            </summary>
      <param name="pHandle">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer object to be closed.</para></param>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.OpenPrinter(System.String,System.IntPtr@,ADK.Printers.Management.PRINTER_DEFAULTS@)">
      <summary>
            Retrieves a handle to the specified printer or print server or other types of handles in the print subsystem.
            </summary>
      <param name="szPrinter">Type: <see cref="T:System.String" /><para>The name of the printer.</para></param>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Receives a handle to the open printer.</para></param>
      <param name="pDefault">Type: <see cref="T:ADK.Printers.Management.PRINTER_DEFAULTS" /><para>Pointer to a <see cref="T:ADK.Printers.Management.PRINTER_DEFAULTS" /> structure.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DeletePrinter(System.IntPtr)">
      <summary>
            Deletes the specified printer object.
            </summary>
      <param name="pHandle">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer object to be deleted.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.EnumPorts(System.String,System.Int32,System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
      <summary>
            Enumerates the ports that are available for printing on a specified server.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name of the server whose printer ports are to be enumerated.  If NULL, the local machine's ports are enumerated.</para></param>
      <param name="level">Type: <see cref="T:System.Int32" /><para>The type of information returned in the <paramref name="bufptr" /> buffer.</para></param>
      <param name="bufptr">Type: <see cref="T:System.IntPtr" /><para>Pointer to a buffer that receives an arrary of port info structures.  Each structure contains data that describes an available printer port.</para></param>
      <param name="cbBuf">Type: <see cref="T:System.Int32" /><para>The size, in bytes, of the buffer pointed to by <paramref name="bufptr" />.</para></param>
      <param name="pcbNeeded">Type: <see cref="T:System.Int32" /><para>Pointer to a variable that receives the number of bytes copied to the <paramref name="bufptr" /> buffer.</para></param>
      <param name="pcReturned">Type: <see cref="T:System.Int32" /><para>Pointer to a variable that receives the number of structures returned in the <paramref name="bufptr" /> buffer.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.GetPrinter(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32@)">
      <summary>
            Retrieves information about a specified printer.
            </summary>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer for which the function retrieves information.</para></param>
      <param name="dwLevel">Type: <see cref="T:System.Int32" /><para>The level or type of structure that the function stores in the buffer pointed to by <paramref name="pPrinter" />.</para></param>
      <param name="pPrinter">Type; <see cref="T:System.IntPtr" /><para>Pointer to a buffer that receives a structure containing information about the specified printer.</para></param>
      <param name="dwBuf">Type: <see cref="T:System.Int32" /><para>The size, in bytes, of the buffer pointed to by <paramref name="pPrinter" />.</para></param>
      <param name="dwNeeded">Type: <see cref="T:System.Int32" /><para>Variable which receives the size, in bytes, of the printer information.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.GetPrinterDriverDirectory(System.Text.StringBuilder,System.Text.StringBuilder,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32@)">
      <summary>
            Retrieves the path of the printer-driver directory.
            </summary>
      <param name="pName">Type: <see cref="T:System.Text.StringBuilder" /><para>The name of the server on which the printer driver resides. If NULL, the local driver-directory path is retrieved.</para></param>
      <param name="pEnv">Type: <see cref="T:System.Text.StringBuilder" /><para>Specifies the environment.</para></param>
      <param name="Level">Type: <see cref="T:System.Int32" /><para>The structure level.  This must be 1.</para></param>
      <param name="outPath">Type: <see cref="T:System.Text.StringBuilder" /><para>Buffer that receives the path.</para></param>
      <param name="bufferSize">Type: <see cref="T:System.Int32" /><para>The size of the buffer to which <paramref name="outPath" /> points.</para></param>
      <param name="Bytes">Type: <see cref="T:System.Int32" /><para>Specifies the number of bytes copied if the function succeeds, or the number of bytes required if the <paramref name="bufferSize" /> is too small.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.AddPrinterConnection(System.String)">
      <summary>
            Provides a connection to an existing printer on the network, and adds it to the list of available printers.
            </summary>
      <param name="pName">Type: <see cref="T:System.String" /><para>Friendly name of the printer.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is zero, else nonzero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DocumentProperties(System.IntPtr,System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32)">
      <summary>
            Retrieves or modifies printer initialization information for the specified printer.
            </summary>
      <param name="hwnd">Type: <see cref="T:System.IntPtr" /><para>Handle to the parent window of the printer-configuration property sheet.</para></param>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to a printer object.</para></param>
      <param name="pDeviceName">Type: <see cref="T:System.String" /><para>The name of the device.</para></param>
      <param name="pDevModeOutput">Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure that receives the printer configuration data specified by the user.</para></param>
      <param name="pDevModeInput">Type: <see cref="T:System.IntPtr" /><para>Pointer to a <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure that the operating system uses to initialize the property sheet controls.</para></param>
      <param name="fMode">Type: <see cref="T:System.Int32" /><para>The operations the function performs.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If the function fails, return is less than zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.SetPrinter(System.IntPtr,System.Int32,System.IntPtr,System.UInt32)">
      <summary>
            Sets the data for a specified printer or sets the state of the specified printer.
            </summary>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer.</para></param>
      <param name="Level">Type: <see cref="T:System.Int32" /><para>The type of data that the function stores into the buffer pointed to by <paramref name="pPrinter" />.</para></param>
      <param name="pPrinter">Type: <see cref="T:System.IntPtr" /><para>Pointer to a buffer containing data to set for the printer.</para></param>
      <param name="Command">Type: <see cref="T:System.UInt32" /><para>The action to perform.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>If successful, the return value is nonzero, else zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.GetPrinterDriver(System.IntPtr,System.String,System.Int32,System.IntPtr,System.Int32,System.Int32@)">
      <summary>
            Retrieves driver data for the specified printer.
            </summary>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer for which the driver data should be retrieved.</para></param>
      <param name="pEnvironment">Type: <see cref="T:System.String" /><para>Specifies the environment.</para></param>
      <param name="Level">Type: <see cref="T:System.Int32" /><para>The printer driver structure returned in the <paramref name="pDriverInfo" /> buffer.</para></param>
      <param name="pDriverInfo">Type: <see cref="T:System.IntPtr" /><para>A pointer to a buffer that receives a structure containing information about the driver.</para></param>
      <param name="cbBuf">Type: <see cref="T:System.Int32" /><para>The size, in bytes, of the array at which <paramref name="pDriverInfo" /> points.</para></param>
      <param name="pcbNeeded">Type: <see cref="T:System.Int32" /><para>Pointer to a value that receives the number of bytes copied if the function succeeds, or the number of bytes required if <paramref name="cbBuf" /> is too small.</para></param>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.GetPrinterDriver2(System.IntPtr,System.IntPtr,System.String,System.Int32,System.IntPtr,System.Int32,System.Int32@)">
      <summary>
            Retreives the driver data for the specified printer.
            </summary>
      <param name="hWnd">Type: <see cref="T:System.IntPtr" /><para>Handle of the window that will be used as the parent window of any user interface.</para></param>
      <param name="hPrinter">Type: <see cref="T:System.IntPtr" /><para>Handle to the printer for which the driver data should be retrieved.</para></param>
      <param name="pEnvironment">Type: <see cref="T:System.String" /><para>Specifies the environment.</para></param>
      <param name="Level">Type: <see cref="T:System.Int32" /><para>The printer driver structure returned in <paramref name="pDriverInfo" /> buffer.</para></param>
      <param name="pDriverInfo">Type: <see cref="T:System.IntPtr" /><para>Pointer to a buffer that receives a structure containing information about the driver.</para></param>
      <param name="cbBuf">Type: <see cref="T:System.Int32" /><para>The size, in bytes, of the array at which <paramref name="pDriverInfo" />.</para></param>
      <param name="pcbNeeded">Type: <see cref="T:System.Int32" /><para>Pointer to a value that receives the number of bytes copied if the function succeeds or number of bytes required if <paramref name="cbBuf" /> is too small.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>If function succeeds returns non-zero value, otherwise zero.</para></returns>
    </member>
    <member name="M:ADK.Printers.Management.WinAPI.DeletePrinterDriverPackage(System.String,System.String,System.String)">
      <summary>
            Deletes a printer driver package from the driver store.
            </summary>
      <param name="Server">Type: <see cref="T:System.String" /><para>The name of the print server from which the driver package is being deleted. NULL will delete from local.</para></param>
      <param name="InfPath">Type: <see cref="T:System.String" /><para>Specifies the path to the drivers *.inf file.</para></param>
      <param name="Environment">Type: <see cref="T:System.String" /><para>Specifies the processor architecture.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>Indicates the success/failure of the method.</para></returns>
    </member>
    <member name="T:ADK.Printers.Devmode.DEVMODE">
      <summary>
            Contains information about the initialization and environment of a printer or a display device.
            </summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDeviceName">
      <summary>
            Type: <see cref="T:System.String" /><para>The "friendly" name of the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmSpecVersion">
      <summary>
            Type: <see cref="T:System.Int16" /><para>The version number of the initialization data specification on which the structure is based.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDriverVersion">
      <summary>
            Type: <see cref="T:System.Int16" /><para>The driver version assigned by the driver developer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmSize">
      <summary>
            Type: <see cref="T:System.Int16" /><para>The size, in bytes, of the <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDriverExtra">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Contains the number of bytes of the private driver-data that follow this structure.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmFields">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies whether certain members of the <see cref="T:ADK.Printers.Devmode.DEVMODE" /> structure have been initialized.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmOrientation">
      <summary>
            Type: <see cref="T:System.Int16" /><para>The orientation of the paper.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPaperSize">
      <summary>
            Type: <see cref="T:System.Int16" /><para>The size of the paper to print on.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPaperLength">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Overrides the length of the paper specified in <see cref="F:ADK.Printers.Devmode.DEVMODE.dmPaperSize" /> member.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPaperWidth">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Overrides the width of the paper specified in <see cref="F:ADK.Printers.Devmode.DEVMODE.dmPaperSize" /> member.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmScale">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies the factor by which the printed output will be scaled.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmCopies">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies the number of copies printed.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDefaultSource">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies the paper source.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPrintQuality">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies the printer resolution.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmColor">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Switch between coloc and monochrome printers.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDuplex">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Selects duplex or double-sided printing.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmYResolution">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies the y-resolution, in dots per inch, of the printer.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmTTOption">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies how TrueType fonts should be printed.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmCollate">
      <summary>
            Type: <see cref="T:System.Int16" /><para>Specifies whether collation should be used when printing multiple copies.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmFormName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the form to use.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmUnusedPadding">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmBitsPerPel">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPelsWidth">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmPelsHeight">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDisplayFlags">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="F:ADK.Printers.Devmode.DEVMODE.dmDisplayFrequency">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Only used with display devices.</para></summary>
    </member>
    <member name="T:ADK.Printers.Devmode.DevmodeOptions">
      <summary>
            Contains the properties/values that indicate how a Printer should process subsquent print jobs.
            </summary>
    </member>
    <member name="M:ADK.Printers.Devmode.DevmodeOptions.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Printers.Devmode.DevmodeOptions" />.
            </summary>
    </member>
    <member name="M:ADK.Printers.Devmode.DevmodeOptions.CompareAndUpdate(ADK.Printers.Devmode.DevmodeOptions)">
      <summary>
            Compares the <paramref name="newSet" /> with the current settings, updating the current values as needed.
            </summary>
      <param name="newSet">Type: <see cref="T:ADK.Printers.Devmode.DevmodeOptions" /><para>Contains the settings that are to be compared/updated against.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Returns true if an update was performed.</para></returns>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions._PaperLength">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the paper length for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions._PaperWidth">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the paper width for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions._PaperSize">
      <summary>
            Type: <see cref="P:ADK.Printers.Devmode.DevmodeOptions.PaperSize" /><para>Specifies the paper size to a predefined value.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.ColorMode">
      <summary>
            Type: <see cref="P:ADK.Printers.Devmode.DevmodeOptions.ColorMode" /><para>Indicates the type of coloring that should be used for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.FormName">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the form size, by name, for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.Orientation">
      <summary>
            Type: <see cref="P:ADK.Printers.Devmode.DevmodeOptions.Orientation" /><para>Specifies the page orientation for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.PaperLength">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the paper length, in PDF Units, for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.PaperWidth">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the paper width, in PDF Units, for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.PaperSize">
      <summary>
            Type: <see cref="P:ADK.Printers.Devmode.DevmodeOptions.PaperSize" /><para>Specifies the paper size to a predefined value.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.PrintQuality">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the print quality for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.PrintResolution">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the resolution for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.Scaling">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the scaling percentage for the printer.</para></summary>
    </member>
    <member name="P:ADK.Printers.Devmode.DevmodeOptions.TrueTypeOption">
      <summary>
            Type: <see cref="P:ADK.Printers.Devmode.DevmodeOptions.TrueTypeOption" /><para>Specifies how the printer should handle TrueType fonts.</para></summary>
    </member>
    <member name="T:ADK.PostScript.ConversionSettings">
      <summary>
            Standard PostScript to PDF conversion properties.
            </summary>
    </member>
    <member name="M:ADK.PostScript.ConversionSettings.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.ConversionSettings" />.
            </summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.ASCII85EncodePages">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF pages should be ASCII85 encoded.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.AutoRotatePages">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the pages should be auto-rotated (based on content size).</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.ConvertCMYKImagesToRGB">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if CMYK color-space images should be converted to RGB color-space.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.UseFlateCompression">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if flate compression should be applied to the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.ColorImageCompression">
      <summary>
            Type: <see cref="T:ADK.PostScript.ImageCompression" /><para>Specifies how Color images should be compressed.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.GrayImageCompression">
      <summary>
            Type: <see cref="T:ADK.PostScript.ImageCompression" /><para>Specifies how Gray images should be compressed.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.MonoImageCompression">
      <summary>
            Type: <see cref="T:ADK.PostScript.MonochromeImageCompression" /><para>Specifies how monochrome images should be compressed.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.PredefinedConfiguration">
      <summary>
            Type: <see cref="P:ADK.PostScript.ConversionSettings.PredefinedConfiguration" /><para>Specified which predefined PostScript conversion configuration, if any, should be used.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.PreserveHalftone">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies how existing halftone information is handled.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.PreserveOverprint">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies how existing overprint settings are handled.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.PreserveTransfer">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveTransferSettings" /><para>Specifies how existing transfer functions are handled.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.Resolution">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the whole file resolution to use for the output.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.SavePostScript">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the original PostScript should be saved to a file.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.ScaleMethod">
      <summary>
            Type: <see cref="T:ADK.PostScript.Scaling" /><para>Indicates the scaling method, if any, that should be used.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.UCRandBGR">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies how existing UCR and BGR settings are handled.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.Log">
      <summary>
            Type: <see cref="T:ADK.PostScript.Logging" /><para>Specifies the logging parameters, if any, that are utilized for this configuration.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.FontPath">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the alternate font path, if any, to use during the postscript conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ConversionSettings.OptionalParams">
      <summary>
            Type: <see cref="T:System.Collections.Generic.Dictionary`2" /><para>Collection of optional parameters to be used with GhostScript-based conversions.</para></summary>
    </member>
    <member name="T:ADK.PostScript.FontOptions">
      <summary>
            Enumerates the various options available for handling fonts via PostScript to PDF conversion.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.None">
      <summary>
            No font options are used.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.EmbedAll">
      <summary>
            All fonts are embedded into the output PDF.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.EmbedBase14">
      <summary>
            The base-14 fonts are embedded into the output PDF.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.Subset">
      <summary>
            Font subsetting is used during the conversion.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.SubstituteTrueType">
      <summary>
            Substitute fonts within the PostScript file with TrueType fonts from the [WINDDOWS]\Fonts directory.
            </summary>
    </member>
    <member name="F:ADK.PostScript.FontOptions.All">
      <summary>
            Apply all options to the conversion.
            </summary>
    </member>
    <member name="T:ADK.PostScript.ImageCompressionBase">
      <summary>
            Details the common image compression settings.
            </summary>
    </member>
    <member name="M:ADK.PostScript.ImageCompressionBase.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.ImageCompressionBase" />.
            </summary>
    </member>
    <member name="P:ADK.PostScript.ImageCompressionBase.DownsampleThreshold">
      <summary>
            Type: <see cref="T:System.Double" /><para>Represents the threshold for downsampling.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ImageCompressionBase.DownsampleType">
      <summary>
            Type: <see cref="P:ADK.PostScript.ImageCompressionBase.DownsampleThreshold" /><para>Inidcates the type of downsampling used with the image.</para></summary>
    </member>
    <member name="P:ADK.PostScript.ImageCompressionBase.Resolution">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The maximum resolution support for the corresponding image type.</para></summary>
    </member>
    <member name="T:ADK.PostScript.ImageCompression">
      <summary>
            Details the non-monochrome image compression settings.
            </summary>
    </member>
    <member name="M:ADK.PostScript.ImageCompression.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.ImageCompression" />.
            </summary>
    </member>
    <member name="P:ADK.PostScript.ImageCompression.Filter">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.CompressionOption" /><para>Indicates the type of compression that will be applied.</para></summary>
    </member>
    <member name="T:ADK.PostScript.MonochromeImageCompression">
      <summary>
            Details the monochromatic image compression settings.
            </summary>
    </member>
    <member name="M:ADK.PostScript.MonochromeImageCompression.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.MonochromeImageCompression" />.
            </summary>
    </member>
    <member name="P:ADK.PostScript.MonochromeImageCompression.Filter">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.MonochromeCompression" /><para>Indicates the type of compression that is to be applied.</para></summary>
    </member>
    <member name="T:ADK.PostScript.IPostScriptAPI">
      <summary>
            Defines the properties/methods required to implement a PostScript-based conversion API.
            </summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.PredefinedSetting">
      <summary>
            Type: <see cref="T:ADK.PostScript.PredefinedConfiguration" /><para>Specifies which predefined PDF setting, if any, should be used when creating the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ASCIIEncode">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if ASCII85 encoding should be applied to binary streams including page content, sampled images and embedded fonts to produce an ASCII PDF. Otherwise the output may contain mostly binary data.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.AutoRotate">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if pages are automatically rotated, based on the orientation of the majority of the text flow.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ConvertCMYKToRGB">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if CMYK colors should be converted to RGB.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.SavePostScript">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the conversion PostScript should be saved after the conversion completes.</para><remarks><para>This setting only applies for "Print to PDF" conversions.</para></remarks></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ColorImageDownsampleType">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.DownsampleOption" /><para>Specifies the downsampling method that should be applied to color images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ColorImageDownsampleThreshold">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the threshold ratio for downsampling color images.</para><para>NOTE: Must be between 1 and 10.</para></summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The desired value is out of the allowed range (1 to 10).</exception>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ColorImageFilter">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.CompressionOption" /><para>Specifies the compression method that should be applied to color images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.GrayImageDownsampleType">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.DownsampleOption" /><para>Specifies the downsampling method that should be applied to grayscale images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.GrayImageDownsampleThreshold">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the threshold ratio for downsampling grayscale images.</para><para>NOTE: Must be between 1 and 10.</para></summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The desired value is out of the allowed range (1 to 10).</exception>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.GrayImageFilter">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.CompressionOption" /><para>Specifies the compression method that should be applied to grayscale images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.MonoImageDownsampleType">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.DownsampleOption" /><para>Specifies the downsampling method that should be applied to monochrome images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.MonoImageDownsampleThreshold">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the threshold ratio for downsampling monochrome images.</para><para>NOTE: Must be between 1 and 10.</para></summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The desired value is out of the allowed range (1 to 10).</exception>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.MonoImageFilter">
      <summary>
            Type: <see cref="T:ADK.PostScript.Images.MonochromeCompression" /><para>Specifies the compression method that should be applied to monochrome images, during a conversion.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.Resolution">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the resolution (DPI) to use for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.ColorImageResolution">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the resolution (DPI) to use for color images.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.GrayImageResolution">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the resolution (DPI) to use for grayscale images.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.MonoImageResolution">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the resolution (DPI) to use for monochrome images.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptAPI.FontPath">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the alternate font path, if any, to use during the postscript conversion.</para></summary>
    </member>
    <member name="T:ADK.PostScript.IPostScriptScalingAPI">
      <summary>
            Defines the properties required to implement an API exposing PostScript conversion-time scaling.
            </summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptScalingAPI.PageHeight">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the height, in PDF Units, that should be used for subsequent conversions.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptScalingAPI.PageWidth">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the width, in PDF Units, that should be used for subsequent conversions.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptScalingAPI.ScaleFactorX">
      <summary>
            Type: <see cref="T:System.Double" /><para>Sets the factor by which the existing PDF width will be modified.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptScalingAPI.ScaleFactorY">
      <summary>
            Type: <see cref="T:System.Double" /><para>Sets the factor by which the existing PDF height will be modified.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptScalingAPI.ScaleMethod">
      <summary>
            Type: <see cref="P:ADK.PostScript.IPostScriptScalingAPI.ScaleMethod" /><para>Specifies the scaling action to perform when converting to PDF.</para></summary>
    </member>
    <member name="T:ADK.PostScript.IPostScriptPreserveAPI">
      <summary>
            Defines the properties required to implement an API exposing PostScript conversion settings for preserving information.
            </summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptPreserveAPI.PreserveHalftone">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies if existing halftone information should be preserved.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptPreserveAPI.PreserveOverprint">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies if existing overprint settings should be preserved.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptPreserveAPI.PreserveTransferFunction">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveTransferSettings" /><para>Specifies how transfer functions, from the input file, are handled.</para></summary>
    </member>
    <member name="P:ADK.PostScript.IPostScriptPreserveAPI.UCRandBGInfo">
      <summary>
            Type: <see cref="T:ADK.PostScript.PreserveSettingOption" /><para>Specifies if the UCRandBGInfo, from the input file, should be preserved.</para></summary>
    </member>
    <member name="T:ADK.PostScript.Logging">
      <summary>
            PostScript debug logging properties.
            </summary>
    </member>
    <member name="M:ADK.PostScript.Logging.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.Logging" />.
            </summary>
    </member>
    <member name="P:ADK.PostScript.Logging.UseLog">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PostScript conversion log should be generated.</para></summary>
    </member>
    <member name="P:ADK.PostScript.Logging.LogFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path of the log file.</para></summary>
    </member>
    <member name="T:ADK.PostScript.PredefinedConfiguration">
      <summary>
            Enumerates the supported predefined PDF settings
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.Undefined">
      <summary>
            Setting has not been specified.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.Custom">
      <summary>
            Default.  Uses the user specified conversion settings (either from API or system settings files).
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.Screen">
      <summary>
            Produces a PDF optimized for screen viewing, using reduced image resolution to reduce file size.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.Printer">
      <summary>
            Produces a PDF optimized for printing to most home and office printers.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.eBook">
      <summary>
            Produces a PDF optimized for eBook usage.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PredefinedConfiguration.Prepress">
      <summary>
            Produces a PDF optimized for printing to commercial-quality printers, automatically embedding all fonts and using high resolution images.
            </summary>
    </member>
    <member name="T:ADK.PostScript.PreserveSettingOption">
      <summary>
            Enumerates the supported settings for standard "Preserve/Remove" properties.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveSettingOption.Undefined">
      <summary>
            The setting has not been defined.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveSettingOption.Preserve">
      <summary>
            The setting will be preserved.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveSettingOption.Remove">
      <summary>
            The setting will be removed.
            </summary>
    </member>
    <member name="T:ADK.PostScript.PreserveTransferSettings">
      <summary>
            Enumerates the supported values for PreserveTransfer settings.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveTransferSettings.Undefined">
      <summary>
            The setting has not been set.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveTransferSettings.Preserve">
      <summary>
            The transfer functions will be preserved.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveTransferSettings.Remove">
      <summary>
            The transfer functions will be removed.
            </summary>
    </member>
    <member name="F:ADK.PostScript.PreserveTransferSettings.Apply">
      <summary>
            The transfer functions will be applied.
            </summary>
    </member>
    <member name="T:ADK.PostScript.ScaleMethod">
      <summary>
            Enumerates the supported options for PDF-based scaling.
            </summary>
    </member>
    <member name="F:ADK.PostScript.ScaleMethod.NotSet">
      <summary>
            Scaling method has not been specified.
            </summary>
    </member>
    <member name="F:ADK.PostScript.ScaleMethod.None">
      <summary>
            No scaling is applied during the conversion
            </summary>
    </member>
    <member name="F:ADK.PostScript.ScaleMethod.ToPageDimensions">
      <summary>
            Content is scaled to the provided page size(s).
            </summary>
    </member>
    <member name="F:ADK.PostScript.ScaleMethod.Custom">
      <summary>
            Content is scaled by custom scale factors.
            </summary>
    </member>
    <member name="T:ADK.PostScript.Scaling">
      <summary>
            Details the settings for scaling during a PostScript to PDF conversion.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Scaling._XFactor">
      <summary>
            Type: <see cref="T:System.Double" /><para>Specifies the X-Factor for scaling, if any.</para></summary>
    </member>
    <member name="F:ADK.PostScript.Scaling._YFactor">
      <summary>
            Type: <see cref="T:System.Double" /><para>Specifies the Y-Factor for scaling, if any.</para></summary>
    </member>
    <member name="F:ADK.PostScript.Scaling._ScaleMethod">
      <summary>
            Type: <see cref="P:ADK.PostScript.Scaling.ScaleMethod" /><para>Indicates the type of scaling that is to be used.</para></summary>
    </member>
    <member name="M:ADK.PostScript.Scaling.#ctor(ADK.PostScript.ScaleMethod)">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.Scaling" />.
            </summary>
      <param name="scaleMethod">
      </param>
    </member>
    <member name="M:ADK.PostScript.Scaling.#ctor(System.Double,System.Double)">
      <summary>
            Creates a new instance of <see cref="T:ADK.PostScript.Scaling" />, for custom dimensions.
            </summary>
      <param name="X">Type: <see cref="T:System.Double" /><para>The X-Factor to scale with.</para></param>
      <param name="Y">Type: <see cref="T:System.Double" /><para>The Y-Factor to scale with.</para></param>
    </member>
    <member name="P:ADK.PostScript.Scaling.ScaleMethod">
      <summary>
            Type: <see cref="P:ADK.PostScript.Scaling.ScaleMethod" /><para>Indicates the type of scaling that is to be used.</para></summary>
    </member>
    <member name="P:ADK.PostScript.Scaling.XFactor">
      <summary>
            Type: <see cref="T:System.Double" /><para>Specifies the X-Factor for scaling, if any.</para></summary>
    </member>
    <member name="P:ADK.PostScript.Scaling.YFactor">
      <summary>
            Type: <see cref="T:System.Double" /><para>Specifies the Y-Factor for scaling, if any.</para></summary>
    </member>
    <member name="T:ADK.PostScript.Images.CompressionOption">
      <summary>
            Enumerates the non-monochrome compression options.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.CompressionOption.Undefined">
      <summary>
            Compression has not been defined.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.CompressionOption.None">
      <summary>
            No Compression.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.CompressionOption.DCTEncode">
      <summary>
            JPEG Compression.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.CompressionOption.FlateEncode">
      <summary>
            Flate Compression.
            </summary>
    </member>
    <member name="T:ADK.PostScript.Images.DownsampleOption">
      <summary>
            Enumerates the supported downsampling options.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.DownsampleOption.Undefined">
      <summary>
            Downsampling has not been defined.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.DownsampleOption.None">
      <summary>
            No Downsampling.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.DownsampleOption.Average">
      <summary>
            Average Downsampling.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.DownsampleOption.Bicubic">
      <summary>
            Bicubic Downsampling.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.DownsampleOption.Subsample">
      <summary>
            Subsample Downsampling.
            </summary>
    </member>
    <member name="T:ADK.PostScript.Images.MonochromeCompression">
      <summary>
            Enumerates the supported monochromatic compression images.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.MonochromeCompression.Undefined">
      <summary>
            Compression has not been set.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.MonochromeCompression.None">
      <summary>
            No Compression.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.MonochromeCompression.CCITT">
      <summary>
            CCITT Compression.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.MonochromeCompression.FlateEncode">
      <summary>
            Flate COmpression.
            </summary>
    </member>
    <member name="F:ADK.PostScript.Images.MonochromeCompression.RunLengthEncode">
      <summary>
            RunLength Compression.
            </summary>
    </member>
    <member name="T:ADK.PInvoke.WinAPI">
      <summary>
            Provides access to common imported functionality for WINAPI calls.
            </summary>
    </member>
    <member name="T:ADK.PInvoke.WinAPI.EnumDelegate">
      <summary>
            Describes the delegate structure for Enumeration Delegates for use in WINAPI calls.
            </summary>
      <param name="hWnd">Type: <see cref="T:System.IntPtr" /><para>The point to the window to enumerate through.</para></param>
      <param name="lParam">Type: <see cref="T:System.Int32" /><para>Integer-based argument.</para></param>
      <returns>
      </returns>
    </member>
    <member name="F:ADK.PInvoke.WinAPI.EnumWindowsProc_title">
      <summary>
            Type: <see cref="T:System.String" /><para>The target string to look for in Window text.</para></summary>
    </member>
    <member name="F:ADK.PInvoke.WinAPI.mTitlesList">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The collection of <see cref="T:System.IntPtr" /> associated with windows whose text matches the current search target.</para></summary>
    </member>
    <member name="M:ADK.PInvoke.WinAPI.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
      <summary>
            Determines the process ID associated with the specified <paramref name="hWnd" />.
            </summary>
      <param name="hWnd">Type: <see cref="T:System.IntPtr" /><para>Pointer to the window thread whose ProcessId is desired.</para></param>
      <param name="lpdwProcessId">Type: <see cref="T:System.Int32" /><para>The process ID, if found, associated with the <paramref name="hWnd" />.</para></param>
      <returns>Type: <see cref="T:System.Int32" /><para>The ID of the thread that created the window.</para></returns>
    </member>
    <member name="M:ADK.PInvoke.WinAPI.EnumWindowsProcTitle(System.IntPtr,System.Int32)">
      <summary>
            Checks to see if the target <paramref name="hWnd" /> matches the <see cref="F:ADK.PInvoke.WinAPI.EnumWindowsProc_title" />.  If so, the <paramref name="hWnd" /> is added to the list.
            </summary>
      <param name="hWnd">Type: <see cref="T:System.IntPtr" /><para>Handle to the pointer associated with the target dialog/window.</para></param>
      <param name="lParam">Type: <see cref="T:System.Int32" /><para>Integer-based argument.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Returns true if no errors were encountered.</para></returns>
    </member>
    <member name="M:ADK.PInvoke.WinAPI.GetWindowText(System.IntPtr)">
      <summary>
            Gets the window text associated with the <paramref name="hWnd" /> handle.
            </summary>
      <param name="hWnd">Type: <see cref="T:System.IntPtr" /><para>Handle to the pointer associated with the target dialog/window.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The text associated with the target window.</para></returns>
    </member>
    <member name="M:ADK.PInvoke.WinAPI.CloseDialogInDesktop(System.String)">
      <summary>
            Closes all dialogs with the specified <paramref name="Title" />.
            </summary>
      <param name="Title">Type: <see cref="T:System.String" /><para>The Title of the dialog(s) to close.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the dialogs were closed.</para><para>False if an error occurred.</para></returns>
    </member>
    <member name="T:ADK.PDF.PDFCompression">
      <summary>
            Details the Compression characteristics of the PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFCompression.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFCompression" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFCompression.Merge(ADK.PDF.PDFCompression)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFCompression" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFCompression.ObjectStreams">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Specifies the compression type of the PDF.</para></summary>
    </member>
    <member name="T:ADK.PDF.EmbedAnyFile">
      <summary>
            Details the EmbedAnyFile characteristics of the PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.EmbedAnyFile.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.EmbedAnyFile" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.EmbedAnyFile.Merge(ADK.PDF.EmbedAnyFile)">
      <summary>
            Merges the <paramref name="target" /> with current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.EmbedAnyFile" /><para>The target instance to be merged.</para></param>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Enabled">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Determines whether or not to embed the file.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.File">
      <summary>
            Type: <see cref="T:System.String" /><para>The path to the file to be embedded.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Left">
      <summary>
            Type: <see cref="T:System.Single" /><para>The left coordinate of the note. Note: It origins from left.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Top">
      <summary>
            Type: <see cref="T:System.Single" /><para>The top coordinate of the note. Note: It origins from bottom.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.NoteType">
      <summary>
            Type: <see cref="T:ADK.PDF.NoteTypeIcon" /><para>The type of icon to use with the note.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Visibility">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>The visibility of the embedded file.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Color">
      <summary>
            Type: <see cref="T:System.String" /><para>The color in hexadecimal value.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Author">
      <summary>
            Type: <see cref="T:System.String" /><para>The name to go in the Author field in the embedded file.</para></summary>
    </member>
    <member name="P:ADK.PDF.EmbedAnyFile.Subject">
      <summary>
            Type: <see cref="T:System.String" /><para>The subject field in the embedded file.</para></summary>
    </member>
    <member name="T:ADK.PDF.NoteTypeIcon">
      <summary>
            Enumerates the icon for the type of notes
            </summary>
    </member>
    <member name="F:ADK.PDF.NoteTypeIcon.Paperclip">
      <summary>
            Paperclip
            </summary>
    </member>
    <member name="F:ADK.PDF.NoteTypeIcon.Graph">
      <summary>
            Graph
            </summary>
    </member>
    <member name="F:ADK.PDF.NoteTypeIcon.Pushpin">
      <summary>
            Push-pin
            </summary>
    </member>
    <member name="F:ADK.PDF.NoteTypeIcon.Tag">
      <summary>
            Tag
            </summary>
    </member>
    <member name="T:ADK.PDF.Font">
      <summary>
            Expands on basic <see cref="T:ADK.Fonts.FontInfo" /> options to include standard settings for stroke/fill/opacity, etc...
            </summary>
    </member>
    <member name="M:ADK.PDF.Font.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.Font" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.Font.FillMode">
      <summary>
            Type: <see cref="T:ADK.PDF.FontFillMode" /><para>Indicates how the subsequent font usage should be filled.</para></summary>
    </member>
    <member name="P:ADK.PDF.Font.Fill">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Specifies the RGB color that should be applied for filling.</para></summary>
    </member>
    <member name="P:ADK.PDF.Font.Stroke">
      <summary>
            Type: <see cref="T:ADK.PDF.Color" /><para>Specifies the RGB color that should be applied for strokes.</para></summary>
    </member>
    <member name="P:ADK.PDF.Font.Opacity">
      <summary>
            Type: <see cref="T:System.Single" /><para>Specifies the level of opacity that should be applied.</para></summary>
    </member>
    <member name="T:ADK.PDF.Color">
      <summary>
            Properties for using an RGB-based color.
            </summary>
    </member>
    <member name="M:ADK.PDF.Color.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.Color" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.Color.Red">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The amount of red.</para></summary>
    </member>
    <member name="P:ADK.PDF.Color.Green">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The amount of green.</para></summary>
    </member>
    <member name="P:ADK.PDF.Color.Blue">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The amount of blue.</para></summary>
    </member>
    <member name="P:ADK.PDF.Color.Gray">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The amount of gray.</para></summary>
    </member>
    <member name="T:ADK.PDF.FontFillMode">
      <summary>
            Enumerates the supported options for font fill mode.
            </summary>
    </member>
    <member name="F:ADK.PDF.FontFillMode.FillOnly">
      <summary>
            The text will only be filled.
            </summary>
    </member>
    <member name="F:ADK.PDF.FontFillMode.StrokeOnly">
      <summary>
            The text will use strokes.
            </summary>
    </member>
    <member name="F:ADK.PDF.FontFillMode.FillThenStroke">
      <summary>
            The text will be filled, and then stroke.
            </summary>
    </member>
    <member name="F:ADK.PDF.FontFillMode.None">
      <summary>
            No fill or stroke will be used.
            </summary>
    </member>
    <member name="T:ADK.PDF.ICCPDFFormat">
      <summary>
            Default implementation of a PDF format based on ICC Profile.
            </summary>
    </member>
    <member name="M:ADK.PDF.ICCPDFFormat.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.ICCPDFFormat" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.ICCPDFFormat.ICCProfilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path of the ICC Profile Path, if any specified.</para></summary>
    </member>
    <member name="T:ADK.PDF.IICCProfilePath">
      <summary>
            Defines the methods/properties required to implement a format which is based on ICC Profile Path.
            </summary>
    </member>
    <member name="P:ADK.PDF.IICCProfilePath.ICCProfilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path of the ICC Profile Path, if any specified.</para></summary>
    </member>
    <member name="T:ADK.PDF.ImageStamp">
      <summary>
            Image-based toolkit stamp.
            </summary>
    </member>
    <member name="M:ADK.PDF.ImageStamp.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.ImageStamp" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.ImageStamp.ImageFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The path of the image file to stamp.</para></summary>
    </member>
    <member name="P:ADK.PDF.ImageStamp.Width">
      <summary>
            Type: <see cref="T:System.Single" /><para>The width of the image stamp.</para></summary>
    </member>
    <member name="P:ADK.PDF.ImageStamp.Height">
      <summary>
            Type: <see cref="T:System.Single" /><para>The height of the image stamp.</para></summary>
    </member>
    <member name="P:ADK.PDF.ImageStamp.PersistRatio">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the image ratio should be persisted for the current <see cref="P:ADK.PDF.ImageStamp.Height" /> and <see cref="P:ADK.PDF.ImageStamp.Width" />.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFA">
      <summary>
            Contains the properties associated with a PDF/A conversion.
            </summary>
    </member>
    <member name="P:ADK.PDF.PDFA.ComplianceLevel">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates the desired PDF/A compliance level.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFConversionOptions">
      <summary>
            Contains the common PDF conversion options.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFConversionOptions.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFConversionOptions" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFConversionOptions.Merge(ADK.PDF.PDFConversionOptions)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFConversionOptions" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFConversionOptions.PDF">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOutput" /><para>Contains the properties associated with the PDF output file.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFConversionOptions.Fonts">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFFont" /><para>Contains the properties associated with the Font aspects of the conversion.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFConversionOptions.Format">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFFormat" /><para>Contains the properties associated with the desired output format.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFConversionOptions.PageSetup">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFDimensions" /><para>Contains the properties associated with the page size/orientation of the conversion.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFDimensions">
      <summary>
            Details the dimension settings of the PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFDimensions.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFDimensions" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFDimensions.Merge(ADK.PDF.PDFDimensions)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFDimensions" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFDimensions.Height">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The height, in PDF units, of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFDimensions.Width">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The width, in PDF units, of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFDimensions.Orientation">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOrientation" /><para>The orientation of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFDimensions.PaperSize">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the papersize to use for the output PDF.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFOrientation">
      <summary>
            Enumerates the supported orientations for PDF output.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOrientation.Undefined">
      <summary>
            The orientation has not been set.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOrientation.Portrait">
      <summary>
            The PDF should be in Portrait mode.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOrientation.Landscape">
      <summary>
            The PDF should be in Landscape mode.
            </summary>
    </member>
    <member name="T:ADK.PDF.PDFFont">
      <summary>
            Details the font settings of a PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFFont.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFFont" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFFont.Merge(ADK.PDF.PDFFont)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFFont" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFFont.EmbedAll">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if all fonts should be embedded.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFFont.EmbedBase14">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the base-14 fonts should be embedded.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFFont.Subset">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if fonts should be embedded as a subset.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFFont.SubstituteTrueType">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if TrueType fonts should be substituted.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFFormat">
      <summary>
            Provides details on the desired output format for pending conversions.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFFormat._PDFA">
      <summary>
            Type: <see cref="P:ADK.PDF.PDFFormat.PDFA" /><para>Contains properties associated with a PDF/A compliant conversion.</para></summary>
    </member>
    <member name="F:ADK.PDF.PDFFormat._PDFX">
      <summary>
            Type: <see cref="P:ADK.PDF.PDFFormat.PDFX" /><para>Contains properties associated with a PDF/X compliant conversion.</para></summary>
    </member>
    <member name="F:ADK.PDF.PDFFormat._Format">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOutputFormat" /><para>Indicates the type of format that is currently selected.</para></summary>
    </member>
    <member name="M:ADK.PDF.PDFFormat.Merge(ADK.PDF.PDFFormat)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFFormat" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFFormat.Format">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOutputFormat" /><para>Indicates the type of format that is currently selected.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFFormat.PDFA">
      <summary>
            Type: <see cref="P:ADK.PDF.PDFFormat.PDFA" /><para>Contains properties associated with a PDF/A compliant conversion.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFFormat.PDFX">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOutputFormat" /><para>Contains properties associated with a PDF/X compliant conversion.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFOutputFormat">
      <summary>
            Enumerates the currently supported PDF output formats.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOutputFormat.PDF">
      <summary>
            Standard PDF format.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOutputFormat.PDFA">
      <summary>
            PDF/A compliant format.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOutputFormat.PDFX">
      <summary>
            PDF/X compliant format.
            </summary>
    </member>
    <member name="T:ADK.PDF.PDFMetadata">
      <summary>
            Contains the properties associated with the metadata of a PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFMetadata.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFMetadata" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFMetadata.Merge(ADK.PDF.PDFMetadata)">
      <summary>
            Merges the <paramref name="target" /> settings with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFMetadata" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFMetadata.Author">
      <summary>
            Type: <see cref="T:System.String" /><para>The author of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFMetadata.Keywords">
      <summary>
            Type: <see cref="T:System.String" /><para>The keywords associated with the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFMetadata.Subject">
      <summary>
            Type: <see cref="T:System.String" /><para>The subject of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFMetadata.Title">
      <summary>
            Type: <see cref="T:System.String" /><para>The title of the PDF.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFOutput">
      <summary>
            Details the output settings for the PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFOutput.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFOutput" /></summary>
    </member>
    <member name="M:ADK.PDF.PDFOutput.Merge(ADK.PDF.PDFOutput)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFOutput" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Compression">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFCompression" /><para>The compression value for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Metadata">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFMetadata" /><para>The document metadata for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Version">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFVersion" /><para>The compatibility level of the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Linearize">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF should be linearized.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.OverwriteMethod">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFOverwriteMethod" /><para>Specifies how the PDF should handle existing output files.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Security">
      <summary>
            Type: <see cref="T:ADK.PDF.PDFSecurity" /><para>The security settings for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.ViewMode">
      <summary>
            Type: <see cref="P:ADK.PDF.PDFOutput.ViewMode" /><para>The view mode settings for the output PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Stamps">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of stamps that are to be applied to the output file.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.InvisiblySign">
      <summary>
            Type: <see cref="T:ADK.Signatures.InvisibleSignatureInfo" /><para>Details the parameters, if any, that are to be used with InvisiblySignFile.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.Signatures">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of signatures that are to be applied to the output file.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFOutput.EmbedAnyFile">
      <summary>
            Type: <see cref="P:ADK.PDF.PDFOutput.EmbedAnyFile" /><para>Details of embed file settings to be applied to the output file.</para></summary>
    </member>
    <member name="T:ADK.PDF.PDFOverwriteMethod">
      <summary>
            Enumerates the supported methods for dealing with existing PDF output files.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOverwriteMethod.Always">
      <summary>
            The new PDF always overwrites any existing file.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOverwriteMethod.Concatenate">
      <summary>
            The new PDF is concatenated to the existing file.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOverwriteMethod.Never">
      <summary>
            The existing file will never be overwritten.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFOverwriteMethod.AlterFilename">
      <summary>
            The new PDF will alter the output name to create a unique filename.
            </summary>
    </member>
    <member name="T:ADK.PDF.PDFSecurity">
      <summary>
            Details the security settings for a PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFSecurity.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.PDFSecurity" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.PDFSecurity.Merge(ADK.PDF.PDFSecurity)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.PDFSecurity" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.UserPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>The password required to open the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.OwnerPassword">
      <summary>
            Type: <see cref="T:System.String" /><para>The password required to edit the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanAnnotate">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF can be annotated.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanAssemble">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF supports document assembly.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanCopy">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if text/images can be copied from the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanEdit">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF can be edited.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanFillFormFields">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Inidicates if the PDF form fields can be modified/filled in.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanMakeAccessible">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if text can be extracted from the PDF for purposes of accessibility.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanPrint">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF can be printed.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.CanPrintHighResolution">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the PDF can be printed in high-resolution.</para><para><remarks>Dependent on <see cref="P:ADK.PDF.PDFSecurity.CanPrint" /> being true.</remarks></para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.Revision">
      <summary>
            Type: <see cref="T:ADK.PDF.EncryptionType" /><para>Specifies the type of encryption that should be used.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.Length">
      <summary>
            Type: <see cref="T:ADK.PDF.EncryptionLength" /><para>Specifies the strength of the encrytpion key that should be used.</para></summary>
    </member>
    <member name="P:ADK.PDF.PDFSecurity.UseSecurity">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the security settings should be applied.</para></summary>
    </member>
    <member name="T:ADK.PDF.AESEncryptionLength">
      <summary>
            Enumerates the supported AES encryption lengths.
            </summary>
    </member>
    <member name="F:ADK.PDF.AESEncryptionLength.Security128Bit">
      <summary>
            Encryption uses 128-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.AESEncryptionLength.Security256Bit">
      <summary>
            Encryption uses 256-bit length.
            </summary>
    </member>
    <member name="T:ADK.PDF.EncryptionLength">
      <summary>
            Enumerates the supported encryption lengths.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionLength.Security40Bit">
      <summary>
            Encryption uses 40-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionLength.Security128Bit">
      <summary>
            Encryption uses 128-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionLength.Security256Bit">
      <summary>
            Encryption uses 256-bit length.
            </summary>
    </member>
    <member name="T:ADK.PDF.EncryptionType">
      <summary>
            Enumerates the supported encryption types.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionType.None">
      <summary>
            No Encryption should be used.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionType.Security40Bit">
      <summary>
            Standard RSA encryption with 40-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionType.Security128Bit">
      <summary>
            Standard RSA encryption with 128-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionType.AES128Bit">
      <summary>
            AES Encryption with 128-bit length.
            </summary>
    </member>
    <member name="F:ADK.PDF.EncryptionType.AES256Bit">
      <summary>
            AES Encryption with 256-bit length.
            </summary>
    </member>
    <member name="T:ADK.PDF.PDFVersion">
      <summary>
            Enumerates the supported versions for the PDF output.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.NotSet">
      <summary>
            The version has not been specified.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_2">
      <summary>
            PDF is compatible with version 1.2 of the spec.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_3">
      <summary>
            PDF is compatible with version 1.3 of the spec.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_4">
      <summary>
            PDF is compatible with version 1.4 of the spec.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_5">
      <summary>
            PDF is compatible with version 1.5 of the spec.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_6">
      <summary>
            PDF is compatible with version 1.6 of the spec.
            </summary>
    </member>
    <member name="F:ADK.PDF.PDFVersion.PDF1_7">
      <summary>
            PDF is compatible with version 1.7 of the spec.
            </summary>
    </member>
    <member name="T:ADK.PDF.PDFX">
      <summary>
            Contains the properties associated with a PDF/X conversion.
            </summary>
    </member>
    <member name="T:ADK.PDF.Stamp">
      <summary>
            Properties common to all PDF Stamp options.
            </summary>
    </member>
    <member name="M:ADK.PDF.Stamp.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.Stamp" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.Stamp.X">
      <summary>
            Type: <see cref="T:System.Single" /><para>The X point of the coordinate.</para></summary>
    </member>
    <member name="P:ADK.PDF.Stamp.Y">
      <summary>
            Type: <see cref="T:System.Single" /><para>The Y point of the coordinate.</para></summary>
    </member>
    <member name="T:ADK.PDF.StampCollection">
      <summary>
            Contains the properties, options, required to create a series of stamps in a PDF (text and image).
            </summary>
    </member>
    <member name="M:ADK.PDF.StampCollection.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.StampCollection" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the stamp.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.Font">
      <summary>
            Type: <see cref="P:ADK.PDF.StampCollection.Font" /><para>Details the font that should be used for text based stamps.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.Background">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates if the header text should be in the background.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.Rotation">
      <summary>
            Type: <see cref="T:System.Single" /><para>Indicates the level of rotation that should be applied to the header text.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.TextStamps">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>Contains the current collection of header text snippets that are to be included in the <see cref="T:ADK.PDF.StampCollection" />.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.ImageStamps">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>Contains the current collection of image stamps that are to be included in the <see cref="T:ADK.PDF.StampCollection" />.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.SmartTextStamps">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>Contains the current collection of smart text snippets that are to be included in the <see cref="T:ADK.PDF.StampCollection" />.</para></summary>
    </member>
    <member name="P:ADK.PDF.StampCollection.SmartImageStamps">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>Contains the current collection of smart image stamps that are to be included in the <see cref="T:ADK.PDF.StampCollection" />.</para></summary>
    </member>
    <member name="T:ADK.PDF.TextStamp">
      <summary>
            Text-based Toolkit stamp.
            </summary>
    </member>
    <member name="M:ADK.PDF.TextStamp.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.TextStamp" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.TextStamp.Text">
      <summary>
            Type: <see cref="T:System.String" /><para>The text that is to be stamped.</para></summary>
    </member>
    <member name="T:ADK.PDF.ViewMode">
      <summary>
            Details the View characteristics of the PDF.
            </summary>
    </member>
    <member name="M:ADK.PDF.ViewMode.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.PDF.ViewMode" />.
            </summary>
    </member>
    <member name="M:ADK.PDF.ViewMode.Merge(ADK.PDF.ViewMode)">
      <summary>
            Merges the <paramref name="target" /> instance with the current instance.
            </summary>
      <param name="target">Type: <see cref="T:ADK.PDF.ViewMode" /><para>The target instance to merge with.</para></param>
    </member>
    <member name="P:ADK.PDF.ViewMode.InitialView">
      <summary>
            Type: <see cref="T:ADK.PDF.InitialViewType" /><para>Specifies the initial view of the PDF.</para></summary>
    </member>
    <member name="P:ADK.PDF.ViewMode.PageNbr">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The page that is displayed when the PDF is opened.</para></summary>
    </member>
    <member name="P:ADK.PDF.ViewMode.View">
      <summary>
            Type: <see cref="T:System.String" /><para>The PDF view string to apply to the PDF.</para></summary>
    </member>
    <member name="T:ADK.PDF.InitialViewType">
      <summary>
            Enumerates the supported values for the Initial View of the PDF.
            </summary>
    </member>
    <member name="F:ADK.PDF.InitialViewType.Normal">
      <summary>
            Uses the default settings.
            </summary>
    </member>
    <member name="F:ADK.PDF.InitialViewType.ShowOutlines">
      <summary>
            Bookmarks panel is visible and all child bookmarks are expanded.
            </summary>
    </member>
    <member name="F:ADK.PDF.InitialViewType.ShowThumbnails">
      <summary>
            Pages panel is visible.
            </summary>
    </member>
    <member name="F:ADK.PDF.InitialViewType.FullScreen">
      <summary>
            PDF opens in full screen mode.
            </summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.SmartImageStamp">
      <summary>
            Class detailing a Smart Image stamp.
            </summary>
    </member>
    <member name="M:ADK.PDF.SmartStamps.SmartImageStamp.#ctor">
      <summary>
            Creates the default instance of <see cref="T:ADK.PDF.SmartStamps.SmartImageStamp" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartImageStamp.ImageFile">
      <summary>
            Type: <see cref="T:System.String" /><para>The path to the image file to be used in the watermark.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartImageStamp.Width">
      <summary>
            Type: <see cref="T:System.Single" /><para>The width to use with the image stamp, overriding the image size.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartImageStamp.Height">
      <summary>
            Type: <see cref="T:System.Single" /><para>The height to use with the image stamp, overriding the image size.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartImageStamp.PersistRatio">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the image ratio should be persisted in the stamp.</para></summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.SmartPosition">
      <summary>
            Base class defining the required properties for all Smart Stamps.
            </summary>
    </member>
    <member name="M:ADK.PDF.SmartStamps.SmartPosition.#ctor">
      <summary>
            Creates a default instance of <see cref="T:ADK.PDF.SmartStamps.SmartPosition" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.HorizontalDistanceType">
      <summary>
            Type: <see cref="T:ADK.PDF.SmartStamps.MeasurementUnits" /><para>The units of measurement for <see cref="P:ADK.PDF.SmartStamps.SmartPosition.HorizontalDistance" />.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.HorizontalDistance">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The horizontal distance, in PDFUnits.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.HorizontalLocation">
      <summary>
            Type: <see cref="T:ADK.PDF.SmartStamps.HorizontalLocations" /><para>The location from which the <see cref="P:ADK.PDF.SmartStamps.SmartPosition.HorizontalDistance" /> is measured.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.VerticalDistanceType">
      <summary>
            Type: <see cref="T:ADK.PDF.SmartStamps.MeasurementUnits" /><para>The units of measurement for <see cref="P:ADK.PDF.SmartStamps.SmartPosition.VerticalDistance" />.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.VerticalDistance">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The vertical distance, in PDFUnits.</para></summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartPosition.VerticalLocation">
      <summary>
            Type: <see cref="T:ADK.PDF.SmartStamps.VerticalLocations" /><para>The location from which the <see cref="P:ADK.PDF.SmartStamps.SmartPosition.VerticalDistance" /> is measured.</para></summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.MeasurementUnits">
      <summary>
            Enumerates the supported measurement units.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.MeasurementUnits.Inches">
      <summary>
            Distance is measured in inches.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.MeasurementUnits.Centimeters">
      <summary>
            Distance is measured in centimeters.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.MeasurementUnits.PDFUnits">
      <summary>
            Distance is measured in standard PDF units, or Points.
            </summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.VerticalLocations">
      <summary>
            Enumerates the supported "origin" locations for watermarks to be vertically plotted from.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.VerticalLocations.Top">
      <summary>
            The watermark is distanced from the top of the page.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.VerticalLocations.Center">
      <summary>
            The watermark is distanced from the vertical center of the page.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.VerticalLocations.Bottom">
      <summary>
            The watermark is distanced from the bottom of the page.
            </summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.HorizontalLocations">
      <summary>
            Enumerates the supported "origin" locations for watermarks to be horizontally plotted from.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.HorizontalLocations.Left">
      <summary>
            The watermark is distanced from the left margin.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.HorizontalLocations.Center">
      <summary>
            The watermark is distanced from the horizontal-center of the page.
            </summary>
    </member>
    <member name="F:ADK.PDF.SmartStamps.HorizontalLocations.Right">
      <summary>
            The watermark is distanced from the right margin.
            </summary>
    </member>
    <member name="T:ADK.PDF.SmartStamps.SmartTextStamp">
      <summary>
            Class detailing a Smart Text stamp.
            </summary>
    </member>
    <member name="M:ADK.PDF.SmartStamps.SmartTextStamp.#ctor">
      <summary>
            Creates the default instance of <see cref="T:ADK.PDF.SmartStamps.SmartTextStamp" />.
            </summary>
    </member>
    <member name="P:ADK.PDF.SmartStamps.SmartTextStamp.Text">
      <summary>
            Type: <see cref="T:System.String" /><para>The text content of the stamp.</para></summary>
    </member>
    <member name="T:ADK.Packets.HandlePacketFailure">
      <summary>
            Enumerates the available approaches for handling failures during the processing of an <see cref="T:ADK.Packets.IPacket" />.
            </summary>
    </member>
    <member name="F:ADK.Packets.HandlePacketFailure.StopOnFailure">
      <summary>
            The conversion process will stop on the first failure encountered while processing the <see cref="T:ADK.Packets.IPacket" />.
            </summary>
    </member>
    <member name="F:ADK.Packets.HandlePacketFailure.StopOnRepeatedFailure">
      <summary>
            The conversion process will stop if the same failure is encountered multiple times in a row.
            </summary>
    </member>
    <member name="F:ADK.Packets.HandlePacketFailure.ContinueProcessing">
      <summary>
            The conversion process will not stop if/when a failure is encountered, but will finish processing the <see cref="T:ADK.Packets.IPacket" />.
            <remarks><para>Any failures will be reported in the appropriate result instance.</para></remarks></summary>
    </member>
    <member name="T:ADK.Packets.IPacket">
      <summary>
            Defines data for conversion packets. 
            </summary>
    </member>
    <member name="P:ADK.Packets.IPacket.Files">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>Gets the <see cref="T:System.String" /> collection containing the contents of the packet.</para></summary>
    </member>
    <member name="P:ADK.Packets.IPacket.OnFailure">
      <summary>
            Type: <see cref="T:ADK.Packets.HandlePacketFailure" /><para>Specifies how the failures, encountered during procesing of the <see cref="T:ADK.Packets.IPacket" />, should be handled.</para></summary>
    </member>
    <member name="P:ADK.Packets.IPacket.OriginPath">
      <summary>
            Type: <see cref="T:System.String" /><para>Stores the original path of the <see cref="P:ADK.Packets.IPacket.Files" />.</para></summary>
    </member>
    <member name="T:ADK.Packets.Packet">
      <summary>
            Default implementor of <see cref="T:ADK.Packets.IPacket" />.
            <remarks>Typically, custom-packet classes will inherit this class rather than needing to fully implement their own <see cref="T:ADK.Packets.IPacket" />.</remarks></summary>
    </member>
    <member name="F:ADK.Packets.Packet._Files">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>Internal variable: The list of files associated with the <see cref="T:ADK.Packets.Packet" />.</para></summary>
    </member>
    <member name="F:ADK.Packets.Packet._OnFailure">
      <summary>
            Type: <see cref="T:ADK.Packets.HandlePacketFailure" /><para>Specifies how the failures, during procesing of the <see cref="T:ADK.Packets.IPacket" />, should be handled.</para></summary>
    </member>
    <member name="F:ADK.Packets.Packet._OriginPath">
      <summary>
            Type: <see cref="T:System.String" /><para>Stores the original path of the <see cref="P:ADK.Packets.Packet.Files" />.</para></summary>
    </member>
    <member name="M:ADK.Packets.Packet.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Creates an instance of <see cref="T:ADK.Packets.Packet" />, associated with the <paramref name="files" />.
            </summary>
      <param name="files">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of files to be associated with the new <see cref="T:ADK.Packets.Packet" />.</para></param>
    </member>
    <member name="M:ADK.Packets.Packet.#ctor(System.Collections.Generic.IEnumerable{System.String},ADK.Packets.HandlePacketFailure)">
      <summary>
            Creates an instance of <see cref="T:ADK.Packets.Packet" />, associated with the <paramref name="files" />, and using the <paramref name="onFailure" /> selection.
            </summary>
      <param name="files">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of files to be associated with the new <see cref="T:ADK.Packets.Packet" />.</para></param>
      <param name="onFailure">Type: <see cref="T:ADK.Packets.HandlePacketFailure" /><para>Specifies how the failures, during procesing of the <see cref="T:ADK.Packets.IPacket" />, should be handled.</para></param>
    </member>
    <member name="P:ADK.Packets.Packet.Files">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>Gets the <see cref="T:System.String" /> collection containing the contents of the packet.</para></summary>
    </member>
    <member name="P:ADK.Packets.Packet.OnFailure">
      <summary>
            Type: <see cref="T:ADK.Packets.HandlePacketFailure" /><para>Specifies how the failures, during procesing of the <see cref="T:ADK.Packets.IPacket" />, should be handled.</para></summary>
    </member>
    <member name="P:ADK.Packets.Packet.OriginPath">
      <summary>
            Type: <see cref="T:System.String" /><para>Stores the original path of the <see cref="P:ADK.Packets.Packet.Files" />.</para></summary>
    </member>
    <member name="T:ADK.FTP.FTPAttachment">
      <summary>
            Represents an FTP-based attachment.
            </summary>
    </member>
    <member name="T:ADK.FTP.FTPRequest">
      <summary>
            Represents a complete FTP-based request.
            </summary>
    </member>
    <member name="M:ADK.FTP.FTPRequest.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.FTP.FTPRequest" />.
            </summary>
    </member>
    <member name="M:ADK.FTP.FTPRequest.AddAttachment(ADK.FTP.FTPAttachment)">
      <summary>
            Adds the provided <paramref name="attachment" /> to the current <see cref="P:ADK.FTP.FTPRequest.Attachments" />.
            </summary>
      <param name="attachment">Type: <see cref="T:ADK.FTP.FTPAttachment" /><para>Contains the details of the FTP attachment.</para></param>
    </member>
    <member name="P:ADK.FTP.FTPRequest.Server">
      <summary>
            Type: <see cref="T:ADK.FTP.FTPServer" /><para>Details the settings required to access the FTP server.</para></summary>
    </member>
    <member name="P:ADK.FTP.FTPRequest.Directory">
      <summary>
            Type: <see cref="T:System.String" /><para>The subdirectory, if any, where the transfer(s) should be placed.</para></summary>
    </member>
    <member name="P:ADK.FTP.FTPRequest.Attachments">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of attachments that are to be transferred in this request.</para></summary>
    </member>
    <member name="P:ADK.FTP.FTPRequest.IsDisabled">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current request is active.</para></summary>
    </member>
    <member name="P:ADK.FTP.FTPRequest.Passive">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current request should use Passive or Active FTP.</para></summary>
    </member>
    <member name="T:ADK.FTP.FTPServer">
      <summary>
            Contains the information required to access/utilize an FTP server.
            </summary>
    </member>
    <member name="M:ADK.FTP.FTPServer.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.FTP.FTPServer" />.
            </summary>
    </member>
    <member name="P:ADK.FTP.FTPServer.Host">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/address of the machine where the FTP service is hosted.</para></summary>
    </member>
    <member name="P:ADK.FTP.FTPServer.Credentials">
      <summary>
            Type: <see cref="P:ADK.FTP.FTPServer.Credentials" /><para>Details the credentials that should be used when accessing the <see cref="T:ADK.FTP.FTPServer" />.</para></summary>
    </member>
    <member name="T:ADK.Fonts.FontInfo">
      <summary>
            Contains settings for selecting a font by name, and providing a desired size.
            </summary>
    </member>
    <member name="M:ADK.Fonts.FontInfo.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Fonts.FontInfo" />.
            </summary>
    </member>
    <member name="P:ADK.Fonts.FontInfo.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the font that is to be used.</para></summary>
    </member>
    <member name="P:ADK.Fonts.FontInfo.Size">
      <summary>
            Type: <see cref="T:System.Double" /><para>The desired size to apply for the font.</para></summary>
    </member>
    <member name="T:ADK.Files.FileChangedArgs">
      <summary>
            Class containing event data about a recently modified file.
            </summary>
    </member>
    <member name="F:ADK.Files.FileChangedArgs.File">
      <summary>
            Type: <see cref="T:System.String" /><para>The file associated with the event.</para></summary>
    </member>
    <member name="M:ADK.Files.FileChangedArgs.#ctor(System.String)">
      <summary>
            Instantiates a container holding event data about the recently modified <paramref name="sFile" />.
            </summary>
      <param name="sFile">Type: <see cref="T:System.String" /><para>The file associated with the event.</para></param>
    </member>
    <member name="P:ADK.Files.FileChangedArgs.FileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the file associated with the event.</para></summary>
    </member>
    <member name="T:ADK.Files.FileEnumerator">
      <summary>
            Enumerates through files on a specified file system location.
            </summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator.ERROR_FILE_NOT_FOUND">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value for the Win32 property ERROR_FILE_NOT_FOUND.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator.ERROR_NO_MORE_FILES">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Value for the Win32 property ERROR_NO_MORE_FILES.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._Parameters">
      <summary>
            Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>The parameters required to check for any existing file instances.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._findHandle">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.SafeHandle" /><para>The search handle returned by calling <see cref="M:ADK.Files.FileEnumerator.FindFirstFile(System.String,ADK.Files.WIN32_FIND_DATA@)" />.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._win32FindData">
      <summary>
            Type: <see cref="T:ADK.Files.WIN32_FIND_DATA" /><para>Structure containing information about the found file/directory.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._Impersonator">
      <summary>
            Type: <see cref="T:ADK.Authentication.Impersonator" /><para>Used to impersonate, if required, a user to access the target location.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._NoImpersonateCheck">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Files.FileFinder" /> should check for/use impersonation during enumeration options.</para></summary>
    </member>
    <member name="F:ADK.Files.FileEnumerator._Filter">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the filter, if any, that should be applied when looking for files.</para></summary>
    </member>
    <member name="M:ADK.Files.FileEnumerator.#ctor(ADK.Files.FileLocationParameters)">
      <summary>
            Creates a new instances of <see cref="T:ADK.Files.FileEnumerator" />, for the given <paramref name="Params" />.
            </summary>
      <param name="Params">Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>Parameters to use when determining the location of the desired files.</para></param>
    </member>
    <member name="M:ADK.Files.FileEnumerator.#ctor(ADK.Files.FileLocationParameters,System.Boolean)">
      <summary>
            Creates a new instances of <see cref="T:ADK.Files.FileEnumerator" />, for the given <paramref name="Params" />.
            </summary>
      <param name="Params">Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>Parameters to use when determining the location of the desired files.</para></param>
      <param name="IgnoreImpersonate">Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Files.FileEnumerator" /> should check for/use impersonation during enumeration options.</para></param>
    </member>
    <member name="M:ADK.Files.FileEnumerator.Finalize">
      <summary>
            Destructor called when the class instance is cleaned up.
            </summary>
    </member>
    <member name="M:ADK.Files.FileEnumerator.SetupEnumerator(ADK.Files.FileLocationParameters,System.Boolean)">
      <summary>
            Creates a new instances of <see cref="T:ADK.Files.FileEnumerator" />, for the given <paramref name="Params" />.
            </summary>
      <param name="Params">Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>Parameters to use when determining the location of the desired files.</para></param>
      <param name="IgnoreImpersonate">Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Files.FileEnumerator" /> should check for/use impersonation during enumeration options.</para></param>
    </member>
    <member name="M:ADK.Files.FileEnumerator.FindDataToStorageFile(ADK.Files.WIN32_FIND_DATA@)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Files.FileProps" /> based on the values from <paramref name="win32FindData" />.
            </summary>
      <param name="win32FindData">Type: <see cref="T:ADK.Files.WIN32_FIND_DATA" /><para>Values associated a file.</para></param>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Files.FileEnumerator.Dispose(System.Boolean)">
      <summary>
            Disposes of the <see cref="T:ADK.Files.FileEnumerator" /> and all of the handles/instances currently active.
            </summary>
      <param name="IsDisposing">Type: <see cref="T:System.Boolean" /><para>Specifies if the method is being called from the <see cref="M:ADK.Files.FileEnumerator.Dispose" /> method or from the destructor.</para></param>
    </member>
    <member name="M:ADK.Files.FileEnumerator.FindFirstFile(System.String,ADK.Files.WIN32_FIND_DATA@)">
      <summary>
            Searches a directory for a file or subdirectory with a name that matches a specific name (or partial name if wildcards are used).
            </summary>
      <param name="lpFileName">Type: <see cref="T:System.String" /><para>The directory or path, and the file name, which can include wildcard characters.</para></param>
      <param name="lpFindFileData">Type: <see cref="T:ADK.Files.WIN32_FIND_DATA" /><para>Structure containing information about the found file/directory.</para></param>
      <returns>Type: <see cref="T:System.IntPtr" /><para>A search handle used in subsequent calls to FindNextFile or FindClose.</para><para>INVALID_HANDLE_VALUE if the function fails.</para></returns>
    </member>
    <member name="M:ADK.Files.FileEnumerator.FindNextFile(System.Runtime.InteropServices.SafeHandle,ADK.Files.WIN32_FIND_DATA@)">
      <summary>
            Continues a file search from a previous call to the FindFirstFile or FindFirstFileEx function.
            </summary>
      <param name="hFindFile">Type: <see cref="T:System.Runtime.InteropServices.SafeHandle" /><para>The search handle returned by a previous call to the FindFirstFile or FindFirstFileEx function.</para></param>
      <param name="lpFindFileData">Type: <see cref="T:ADK.Files.WIN32_FIND_DATA" /><para>Structure containing information about the found file/directory.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the function succeeds.</para><para>False if the function fails.</para></returns>
    </member>
    <member name="M:ADK.Files.FileEnumerator.Dispose">
      <summary>
            Disposes of the <see cref="T:ADK.Files.FileEnumerator" />.
            </summary>
    </member>
    <member name="M:ADK.Files.FileEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the enumerator was successfully advanced to the next element.</para><para>False if the enumerator has passed the end of the collection.</para></returns>
    </member>
    <member name="M:ADK.Files.FileEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
    </member>
    <member name="P:ADK.Files.FileEnumerator.Current">
      <summary>
            Type: <see cref="T:ADK.Files.FileProps" /><para>The current element in the collection.</para></summary>
    </member>
    <member name="P:ADK.Files.FileEnumerator.Filter">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the filter, if any, that should be applied when looking for files.</para></summary>
    </member>
    <member name="T:ADK.Files.FileFinder">
      <summary>
            Provides an enumerable class for file systems.
            </summary>
    </member>
    <member name="F:ADK.Files.FileFinder._Parameters">
      <summary>
            Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>The configuration parameters required to check for any existing <see cref="T:ADK.Files.FileProps" /> instances.</para></summary>
    </member>
    <member name="F:ADK.Files.FileFinder._NoImpersonateCheck">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Files.FileFinder" /> should check for/use impersonation during enumeration options.</para></summary>
    </member>
    <member name="M:ADK.Files.FileFinder.#ctor(ADK.Files.FileLocationParameters)">
      <summary>
            Creates a new instances of <see cref="T:ADK.Files.FileFinder" />, for the given <paramref name="Params" />.
            </summary>
      <param name="Params">Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>Parameters to use when determining the location of the desired files.</para></param>
    </member>
    <member name="M:ADK.Files.FileFinder.#ctor(ADK.Files.FileLocationParameters,System.Boolean)">
      <summary>
            Creates a new instances of <see cref="T:ADK.Files.FileFinder" />, for the given <paramref name="Params" />.
            </summary>
      <param name="Params">Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>Parameters to use when determining the location of the desired files.</para></param>
      <param name="IgnoreImpersonate">Type: <see cref="T:System.Boolean" /><para>Specifies that the <see cref="T:ADK.Files.FileFinder" /> should not use impersonation.</para></param>
    </member>
    <member name="M:ADK.Files.FileFinder.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:ADK.Files.FileProps" /> collection.
            </summary>
      <returns>Type: <see cref="T:System.Collections.Generic.IEnumerator`1" /><para>The enumerator to use for iterating through the current <see cref="T:ADK.Files.FileProps" /> collection.</para></returns>
    </member>
    <member name="P:ADK.Files.FileFinder.Configuration">
      <summary>
            Type: <see cref="T:ADK.Files.FileLocationParameters" /><para>The configuration parameters required to check for any existing <see cref="T:ADK.Files.FileProps" /> instances.</para></summary>
    </member>
    <member name="P:ADK.Files.FileFinder.Filter">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the filter, if any, that should be applied when looking for file.</para></summary>
    </member>
    <member name="T:ADK.Files.FileLocationParameters">
      <summary>
            Details the parameters which required to access a file location.
            </summary>
    </member>
    <member name="F:ADK.Files.FileLocationParameters._CustomTags">
      <summary>
            Type: <see cref="T:System.Collections.Generic.Dictionary`2" /><para>Contains any custom tags specified by the end-user.</para></summary>
    </member>
    <member name="P:ADK.Files.FileLocationParameters.Location">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the location that the handler utilizes.</para></summary>
    </member>
    <member name="P:ADK.Files.FileLocationParameters.Credentials">
      <summary>
            Type: <see cref="T:ADK.Authentication.Credentials" /><para>Specifies the credentials, if any, required to access the <see cref="P:ADK.Files.FileLocationParameters.Location" />.</para></summary>
    </member>
    <member name="P:ADK.Files.FileLocationParameters.CustomTags">
      <summary>
            Type: <see cref="T:System.Collections.Generic.Dictionary`2" /><para>Contains any custom tags specified by the end-user.</para></summary>
    </member>
    <member name="T:ADK.Files.FileProps">
      <summary>
            Contains properties detailing information about the file.
            </summary>
    </member>
    <member name="F:ADK.Files.FileProps._ID">
      <summary>
            Type: <see cref="T:System.String" /><para>The primary ID for the <see cref="T:ADK.Files.FileProps" />.</para></summary>
    </member>
    <member name="F:ADK.Files.FileProps._Attributes">
      <summary>
            Type: <see cref="T:System.IO.FileAttributes" /><para>Specifies the attributes of the file.</para></summary>
    </member>
    <member name="F:ADK.Files.FileProps._CreationTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was created.</para></summary>
    </member>
    <member name="F:ADK.Files.FileProps._LastAccessTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was last accessed.</para></summary>
    </member>
    <member name="F:ADK.Files.FileProps._LastWriteTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was last written to.</para></summary>
    </member>
    <member name="F:ADK.Files.FileProps._Size">
      <summary>
            Type: <see cref="T:System.UInt64" /><para>The file size, in bytes.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.ID">
      <summary>
            Type: <see cref="T:System.String" /><para>The primary ID for the <see cref="T:ADK.Files.FileProps" />.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.Attributes">
      <summary>
            Type: <see cref="T:System.IO.FileAttributes" /><para>Specifies the attributes, if any, associated with the file.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.CreationTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was created.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.LastAccessTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was last accessed.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.LastWriteTime">
      <summary>
            Type: <see cref="T:System.DateTime" /><para>Specifies when the file was last written to.</para></summary>
    </member>
    <member name="P:ADK.Files.FileProps.Size">
      <summary>
            Type: <see cref="T:System.UInt64" /><para>The file size, in bytes.</para></summary>
    </member>
    <member name="T:ADK.Files.FileWatcher">
      <summary>
            Used to monitor a specified file/collection of files for changes/updates.
            </summary>
    </member>
    <member name="F:ADK.Files.FileWatcher._Watcher">
      <summary>
            Type: <see cref="T:System.IO.FileSystemWatcher" /><para>Monitors the file(s) specified by <see cref="P:ADK.Files.FileWatcher.Filter" />.</para></summary>
    </member>
    <member name="F:ADK.Files.FileWatcher._Filter">
      <summary>
            Type: <see cref="T:System.String" /><para>The filter string to use when monitoring for file changes.</para></summary>
    </member>
    <member name="F:ADK.Files.FileWatcher._Directory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to monitor for file changes.</para></summary>
    </member>
    <member name="F:ADK.Files.FileWatcher._LastChanged">
      <summary>
            Type: <see cref="T:System.Collections.Generic.Dictionary`2" /><para>Contains the filenames of monitores files, and the last time a 'changed' event was fired.</para></summary>
    </member>
    <member name="M:ADK.Files.FileWatcher.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Files.FileWatcher" />, using the default <see cref="P:ADK.Files.FileWatcher.Directory" />, <see cref="P:ADK.Files.FileWatcher.Filter" />.
            </summary>
    </member>
    <member name="M:ADK.Files.FileWatcher.#ctor(System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Files.FileWatcher" />, using the specified <paramref name="sDirectory" />, and the default <see cref="P:ADK.Files.FileWatcher.Filter" />.
            </summary>
      <param name="sDirectory">Type: <see cref="T:System.String" /><para>The full path to monitor for file change.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Files.FileWatcher" />, using the specified <paramref name="sDirectory" />, and the <paramref name="sFilter" />.
            </summary>
      <param name="sDirectory">Type: <see cref="T:System.String" /><para>The full path to monitor for file change.</para></param>
      <param name="sFilter">Type: <see cref="T:System.String" /><para>The filter string to use when monitoring for file changes.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.Finalize">
      <summary>
            Disposes of the current instance of the <see cref="T:ADK.Files.FileWatcher" />.
            </summary>
    </member>
    <member name="M:ADK.Files.FileWatcher.InitMonitor(System.String,System.String)">
      <summary>
            Initializes the <see cref="T:ADK.Files.FileWatcher" /> with the specified <paramref name="sDirectory" /> and <paramref name="sFilter" />.
            </summary>
      <param name="sDirectory">
      </param>
      <param name="sFilter">
      </param>
    </member>
    <member name="M:ADK.Files.FileWatcher._Watcher_Deleted(System.Object,System.IO.FileSystemEventArgs)">
      <summary>
            Handles the event fired when monitored file(s) are deleted.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:System.IO.FileSystemEventArgs" /><para>The data associted with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher._Watcher_Created(System.Object,System.IO.FileSystemEventArgs)">
      <summary>
            Handles the event fired when monitored file(s) are created.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:System.IO.FileSystemEventArgs" /><para>The data associted with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher._Watcher_Changed(System.Object,System.IO.FileSystemEventArgs)">
      <summary>
            Handles the event fired when monitored file(s) are changed.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:System.IO.FileSystemEventArgs" /><para>The data associted with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher._Watcher_Renamed(System.Object,System.IO.RenamedEventArgs)">
      <summary>
            Handles the event fired when monitored file(s) are renamed.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:System.IO.FileSystemEventArgs" /><para>The data associted with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.OnFileChanged(ADK.Files.FileChangedArgs)">
      <summary>
            Raises the <see cref="E:ADK.Files.FileWatcher.FileChanged" /> event, if there are currently subscribers.
            </summary>
      <param name="e">Type: <see cref="T:ADK.Files.FileChangedArgs" /><para>The data associated with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.CanAccessFile(System.String)">
      <summary>
            Determines if the <paramref name="file" /> is accessible in the current context.
            </summary>
      <param name="file">Type: <see cref="T:System.String" /><para>The full path to the file to access.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the <paramref name="file" /> is accessible.</para><para>False if an error/exception occurred.</para></returns>
    </member>
    <member name="M:ADK.Files.FileWatcher.RecentChange(ADK.Files.FileChangedArgs)">
      <summary>
            Determines if the file associated with <paramref name="e" /> has already been "handled" recently.
            </summary>
      <param name="e">Type: <see cref="T:ADK.Files.FileChangedArgs" /><para>The data associated with the event.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if a changed event has been handled for the file recently.</para><para>False if no change has been handled recently.</para></returns>
    </member>
    <member name="M:ADK.Files.FileWatcher.OnFileDeleted(ADK.Files.FileChangedArgs)">
      <summary>
            Raises the <see cref="E:ADK.Files.FileWatcher.FileDeleted" /> event, if there are currently subscribers.
            </summary>
      <param name="e">Type: <see cref="T:ADK.Files.FileChangedArgs" /><para>The data associated with the event.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.Dispose(System.Boolean)">
      <summary>
            Disposes of the current instance, depending on <paramref name="disposing" />.
            </summary>
      <param name="disposing">Type: <see cref="T:System.Boolean" /><para>If True, disposes of managed connections/instances.</para></param>
    </member>
    <member name="M:ADK.Files.FileWatcher.Dispose">
      <summary>
            Disposes of the current instance of <see cref="T:ADK.Files.FileWatcher" />.
            </summary>
    </member>
    <member name="P:ADK.Files.FileWatcher.Directory">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path to monitor for file changes.</para></summary>
    </member>
    <member name="P:ADK.Files.FileWatcher.Filter">
      <summary>
            Type: <see cref="T:System.String" /><para>The filter string to use when monitoring for file changes.</para></summary>
    </member>
    <member name="E:ADK.Files.FileWatcher.FileChanged">
      <summary>
            Type: <see cref="T:System.EventHandler`1" /><para>Event fired when a file has been modified.</para></summary>
    </member>
    <member name="E:ADK.Files.FileWatcher.FileDeleted">
      <summary>
            Type: <see cref="T:System.EventHandler`1" /><para>Event fired when a file has been deleted.</para></summary>
    </member>
    <member name="T:ADK.Files.WIN32_FIND_DATA">
      <summary>
            Contains information that is found by the FindFirstFile, FindFirstFileEx, and FindNextFile functions.
            </summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.dwFileAttributes">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The file attributes of the file.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.ftCreationTime">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.FILETIME" /><para>Specifies when the file was created.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.ftLastAccessTime">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.FILETIME" /><para>Specifies when the file was last accessed.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.ftLastWriteTime">
      <summary>
            Type: <see cref="T:System.Runtime.InteropServices.FILETIME" /><para>Specifies when the file was last written to.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.nFileSizeHigh">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The high-order DWORD value of the file size, in bytes.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.nFileSizeLow">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The low-order DWORD value of the file size, in bytes.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.dwReserved0">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>Only used if <see cref="F:ADK.Files.WIN32_FIND_DATA.dwFileAttributes" /> includes FILE_ATTRIBUTE_REPARSE_POINT.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.dwReserved1">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>Reserved for future use.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.cFileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the file.</para></summary>
    </member>
    <member name="F:ADK.Files.WIN32_FIND_DATA.cAlternateFileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The alternative name of the file.
            <remarks>This name is in the classic 8.3 file format.</remarks></para></summary>
    </member>
    <member name="T:ADK.Email.EmailAddress">
      <summary>
            Contains properties required to properly address an email.
            </summary>
    </member>
    <member name="M:ADK.Email.EmailAddress.#ctor">
      <summary>
            Type: <see cref="T:System.String" /><para>Creates a new instance of <see cref="T:ADK.Email.EmailAddress" />.</para></summary>
    </member>
    <member name="P:ADK.Email.EmailAddress.Address">
      <summary>
            Type: <see cref="T:System.String" /><para>The physical email address to send the message to.</para></summary>
    </member>
    <member name="P:ADK.Email.EmailAddress.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The user-friendly name to display for the target address.</para></summary>
    </member>
    <member name="T:ADK.Email.EmailAttachment">
      <summary>
            Represents an email-based attachment.
            </summary>
    </member>
    <member name="T:ADK.Email.EmailRequest">
      <summary>
            Represents a complete email-based request.
            </summary>
    </member>
    <member name="M:ADK.Email.EmailRequest.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Email.EmailRequest" />.
            </summary>
    </member>
    <member name="M:ADK.Email.EmailRequest.AddMessage(ADK.Email.MailMessage)">
      <summary>
            Adds a new <paramref name="message" /> to the current <see cref="P:ADK.Email.EmailRequest.Messages" /> collection.
            </summary>
      <param name="message">Type: <see cref="T:ADK.Email.MailMessage" /><para>Contains the details/properties associated with an email message.</para></param>
    </member>
    <member name="P:ADK.Email.EmailRequest.SMTP">
      <summary>
            Type: <see cref="T:ADK.Email.SMTPServer" /><para>Indicates the SMTP settings that should be used when sending the <see cref="P:ADK.Email.EmailRequest.Messages" />.</para></summary>
    </member>
    <member name="P:ADK.Email.EmailRequest.Messages">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of mail messages that are to be sent.</para></summary>
    </member>
    <member name="P:ADK.Email.EmailRequest.IsDisabled">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current request is active.</para></summary>
    </member>
    <member name="T:ADK.Email.SMTPServer">
      <summary>
            Contains settings/properties for accessing an SMTP server for email requests.
            </summary>
    </member>
    <member name="M:ADK.Email.SMTPServer.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Email.SMTPServer" />.
            </summary>
    </member>
    <member name="P:ADK.Email.SMTPServer.Server">
      <summary>
            Type: <see cref="T:System.String" /><para>The name/address of the server.</para></summary>
    </member>
    <member name="P:ADK.Email.SMTPServer.Port">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The port number assocaited with the SMTP server.</para></summary>
    </member>
    <member name="P:ADK.Email.SMTPServer.Credentials">
      <summary>
            Type: <see cref="P:ADK.Email.SMTPServer.Credentials" /><para>Details the credentials that should be used when accessing the <see cref="T:ADK.Email.SMTPServer" />.</para></summary>
    </member>
    <member name="T:ADK.Email.MailMessage">
      <summary>
            Contains settings/properties associated with a single message to be send via email.
            </summary>
    </member>
    <member name="M:ADK.Email.MailMessage.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Email.MailMessage" /></summary>
    </member>
    <member name="M:ADK.Email.MailMessage.AddAttachment(ADK.Email.EmailAttachment)">
      <summary>
            Adds the provided <paramref name="attachment" /> to the current <see cref="P:ADK.Email.MailMessage.Attachments" />.
            </summary>
      <param name="attachment">Type: <see cref="T:ADK.Email.EmailAttachment" /><para>Contains the details of the desired email attachment.</para></param>
    </member>
    <member name="M:ADK.Email.MailMessage.AddToCC(ADK.Email.EmailAddress)">
      <summary>
            Adds the <paramref name="address" /> to the current <see cref="P:ADK.Email.MailMessage.CC" /> collection.
            </summary>
      <param name="address">Type: <see cref="T:ADK.Email.EmailAddress" /><para>Contains the details of the email contact.</para></param>
    </member>
    <member name="M:ADK.Email.MailMessage.AddToBCC(ADK.Email.EmailAddress)">
      <summary>
            Adds the <paramref name="address" /> to the current <see cref="P:ADK.Email.MailMessage.BCC" /> collection.
            </summary>
      <param name="address">Type: <see cref="T:ADK.Email.EmailAddress" /><para>Contains the details of the email contact.</para></param>
    </member>
    <member name="P:ADK.Email.MailMessage.Sender">
      <summary>
            Type: <see cref="T:ADK.Email.EmailAddress" /><para>The email address/name of the sender of the message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.Recipient">
      <summary>
            Type: <see cref="T:ADK.Email.EmailAddress" /><para>The email address/name for the primary recipient(s) of the message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.ReadReceipt">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the <see cref="P:ADK.Email.MailMessage.Sender" /> should be informed when the <see cref="P:ADK.Email.MailMessage.Recipient" /> reads the message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.ReplyTo">
      <summary>
            Type: <see cref="T:ADK.Email.EmailAddress" /><para>The email address/name for the default recipient of a reply message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.CC">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of email addresses/names representing the recipients of a CC of the mail message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.BCC">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of email addresses/names representing the recipients of a BCC of the mail message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.Subject">
      <summary>
            Type: <see cref="T:System.String" /><para>The subject line for the mail message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.Body">
      <summary>
            Type: <see cref="T:ADK.Email.MessageBody" /><para>Contains the primary content for the mail message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.Attachments">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IList`1" /><para>The collection of attachments associated with the mail message.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.ZipName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name to use for the zip file, if any, containing the email attachments.</para></summary>
    </member>
    <member name="P:ADK.Email.MailMessage.IsDisabled">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the mail message is enabled for use.</para></summary>
    </member>
    <member name="T:ADK.Email.MessageBody">
      <summary>
            Contains properties associated with the primary content of the mail message.
            </summary>
    </member>
    <member name="P:ADK.Email.MessageBody.IsHtml">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the message body is formatted as HTML.</para></summary>
    </member>
    <member name="P:ADK.Email.MessageBody.Body">
      <summary>
            Type: <see cref="T:System.String" /><para>The content of the message body.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.EventBasedLog">
      <summary>
            Contains standard methods/properties required to implement a class which supports event based logging.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.EventBasedLog.Write(System.String,System.String)">
      <summary>
            Fires the <see cref="E:ADK.Diagnostics.EventBasedLog.WriteLog" /> event, if there are any subscribers.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function requesting the write operation.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The content of the message to be written.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.EventBasedLog.WriteDebug(System.String,System.String)">
      <summary>
            Fires the <see cref="E:ADK.Diagnostics.EventBasedLog.WriteDebugLog" /> event, if there are any subscribers.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function requesting the write operation.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The content of the message to be written.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.EventBasedLog.Write(System.String,System.Exception)">
      <summary>
            Fires the <see cref="E:ADK.Diagnostics.EventBasedLog.WriteLog" /> event, if there are any subscribers.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function requesting the write operation.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception associated with the write request.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.EventBasedLog.WriteDebug(System.String,System.Exception)">
      <summary>
            Fires the <see cref="E:ADK.Diagnostics.EventBasedLog.WriteDebugLog" /> event, if there are any subscribers.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function requesting the write operation.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception associated with the write request.</para></param>
    </member>
    <member name="E:ADK.Diagnostics.EventBasedLog.WriteLog">
      <summary>
            Type: <see cref="T:System.EventHandler`1" /><para>Event fired when a log entry is requested.</para></summary>
    </member>
    <member name="E:ADK.Diagnostics.EventBasedLog.WriteDebugLog">
      <summary>
            Type: <see cref="T:System.EventHandler`1" /><para>Event fired when a debug log entry is requested.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.WriteLogEventArgs">
      <summary>
            Details the log-request arguments associated with an event.
            </summary>
    </member>
    <member name="P:ADK.Diagnostics.WriteLogEventArgs.FunctionName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the function associated with the log request.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.WriteLogEventArgs.Message">
      <summary>
            Type: <see cref="T:System.String" /><para>The contents of the message to be logged.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.WriteLogEventArgs.LogException">
      <summary>
            Type: <see cref="T:System.Exception" /><para>The exception details, if any, associated with the log request.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.ILog">
      <summary>
            Defines the properties required to implement a log-source class.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ILog.CheckLogSize">
      <summary>
            Checks to see if the current log file is larger than allowed, per <see cref="P:ADK.Diagnostics.ILogProperties.MaxLogSize" />.
            <remarks><para>If the log exceeds the size limit, it is deleted.</para></remarks></summary>
    </member>
    <member name="M:ADK.Diagnostics.ILog.StartLogCheck">
      <summary>
            Tells the log instance to automatically check the log size.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ILog.StopLogCheck">
      <summary>
            Tells the log instance to no longer check the log size.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ILog.Delete">
      <summary>
            Deletes the contents of the current log.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the log was deleted.</para><para>False if an error occured.</para></returns>
    </member>
    <member name="T:ADK.Diagnostics.ILogFile">
      <summary>
            Defines the properties required to implement a file-based loggin source.
            </summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogFile.FilePath">
      <summary>
            Specifies the full path of the log file.
            </summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogFile.Directory">
      <summary>
            Type: <see cref="T:System.String" /><para>Gets/Sets the current directory of the log file.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.ILogProperties">
      <summary>
            Defines the methods/properties required to implement a class for standard log properties.
            </summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogProperties.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the logging source/location.</para><para><remarks>For a simple file-based log, this would be the name of the file.</remarks></para></summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogProperties.Debug">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the log is set for Debug/Verbose logging.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogProperties.CheckInterval">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The number of minutes to wait in between checking the log size.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogProperties.MaxLogSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The maximum size of the current log.</para><remarks>For a simple file-based log, this would be the size in MB allowed for the log file.</remarks></summary>
    </member>
    <member name="P:ADK.Diagnostics.ILogProperties.ClearOnStartup">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>&gt;Specifies if the log should be cleared when it's initialized.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.ILogWriter">
      <summary>
            Defines the methods/properties required to implement a Log writing tool.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(System.String,System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(ADK.Results.ResultOrigin,System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(System.String,System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(ADK.Results.ResultOrigin,System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(ADK.Diagnostics.WriteLogEventArgs,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes the provided <paramref name="eArgs" /> to the current log.
            </summary>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the details to be written in the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(System.String,ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.WriteDebug(ADK.Results.ResultOrigin,ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Result" /> originated.</para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">
      </param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(ADK.Results.ResultOrigin,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(ADK.Results.ResultOrigin,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(ADK.Diagnostics.WriteLogEventArgs)">
      <summary>
            Writes the provided <paramref name="eArgs" /> to the current log.
            </summary>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the details to be written in the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ILogWriter.Write(ADK.Results.ResultOrigin,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Result" /> originated.</para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="T:ADK.Diagnostics.Log">
      <summary>
            Base implementation for the <see cref="T:ADK.Diagnostics.ILogProperties" /> definition.
            </summary>
    </member>
    <member name="F:ADK.Diagnostics.Log.checkLog">
      <summary>
            Type: <see cref="T:System.Timers.Timer" /><para>Provides regular events used to monitor log file size.</para></summary>
    </member>
    <member name="M:ADK.Diagnostics.Log.#ctor(System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.Log" />.
            </summary>
      <param name="name">Type: <see cref="T:System.String" /><para>The name of the new <see cref="T:ADK.Diagnostics.Log" /> instance.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.Log.checkLog_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
      <summary>
            Handles the event fired when the <see cref="F:ADK.Diagnostics.Log.checkLog" /> timespan has elapsed.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">Type: <see cref="T:System.Timers.ElapsedEventArgs" /><para>Contains data about the elapsed event.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.Log.CheckLogSize">
      <summary>
            Checks to see if the current log file is larger than allowed, per <see cref="P:ADK.Diagnostics.Log.MaxLogSize" />.
            <remarks><para>If the log exceeds the size limit, it is deleted.</para></remarks></summary>
    </member>
    <member name="M:ADK.Diagnostics.Log.Delete">
      <summary>
            Deletes the contents of the current log.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the log was deleted.</para><para>False if an error occured.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.Log.StartLogCheck">
      <summary>
            Tells the log instance to automatically check the log size.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.Log.StopLogCheck">
      <summary>
            Tells the log instance to no longer check the log size.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.Log.Dispose">
      <summary>
            Disposes of the current <see cref="T:ADK.Diagnostics.Log" /> instance.
            </summary>
    </member>
    <member name="P:ADK.Diagnostics.Log.CheckInterval">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The number of minutes to wait in between checking the log size.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.Log.MaxLogSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The maximum size of the current log.</para><remarks>For a simple file-based log, this would be the size in MB allowed for the log file.</remarks></summary>
    </member>
    <member name="T:ADK.Diagnostics.LogFile">
      <summary>
            File-based logging class.
            </summary>
    </member>
    <member name="F:ADK.Diagnostics.LogFile.EntryPrefix">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the String.Format argument for each log entry.</para></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogFile.EntryPrefixFunction">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the String.Format argument for each log entry.</para><remarks>Used to write out the function name associated with the log entry.</remarks></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogFile._DirectoryName">
      <summary>
            Type: <see cref="T:System.String" /><para>Gets/Sets the current directory of the log file.</para></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogFile._FilePath">
      <summary>
            Specifies the full path of the log file.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.LogFile" />.
            </summary>
      <param name="name">Type: <see cref="T:System.String" /><para>The name of the log file.</para></param>
      <param name="directory">Type: <see cref="T:System.String" /><para>The directory, if provided, where the log file should be located.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.SetFileName">
      <summary>
            Changes the name of the current log file.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.CreateLogDirectory">
      <summary>
            Creates the <see cref="P:ADK.Diagnostics.LogFile.Directory" /> path.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.VerifyLogPath">
      <summary>
            Confirms that the directory exists
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteText(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log file.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteText(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteText(ADK.Results.ResultOrigin,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteException(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log file.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteException(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteException(ADK.Results.ResultOrigin,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteResult(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" /> to the current log file.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.FormatResult(ADK.Results.IResult,System.IO.TextWriter,System.Int32)">
      <summary>
            Formats and writes the the <paramref name="result" /> to the provided <paramref name="tw" /> stream.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The result instance, containing the data to be written to the log.</para></param>
      <param name="tw">Type: <see cref="T:System.IO.TextWriter" /><para>The text writer stream where the result data should be written to.</para></param>
      <param name="processId">Type: <see cref="T:System.Int32" /><para>The process ID of the current application.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.FormatResult(ADK.Results.IResult,System.IO.TextWriter,System.String,System.Int32)">
      <summary>
            Formats and writes the the <paramref name="result" /> to the provided <paramref name="tw" /> stream.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The result instance, containing the data to be written to the log.</para></param>
      <param name="tw">Type: <see cref="T:System.IO.TextWriter" /><para>The text writer stream where the result data should be written to.</para></param>
      <param name="function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="result" /> is being reported.</para></param>
      <param name="processId">Type: <see cref="T:System.Int32" /><para>The process ID of the current application.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteResult(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" />, originating from the specified <paramref name="Function" />, to the current log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.WriteResult(ADK.Results.ResultOrigin,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="result" /> originated.</para></param>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.GetEmergencyLogFile(System.String)">
      <summary>
            Retrieves the emergency file name to use with the associated <paramref name="currFile" />.
            </summary>
      <param name="currFile">Type: <see cref="T:System.String" /><para>The root path/name to use when constructing the emergency path.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The full file path to use when writing an emergency log message.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.EmergencyWriteException(System.String,System.Exception)">
      <summary>
            Writes a log message to a unique/emergency log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.CheckLogSize">
      <summary>
            Checks to see if the current log file is larger than allowed, per <see cref="P:ADK.Diagnostics.Log.MaxLogSize" />.
            <remarks><para>If the log exceeds the size limit, it is deleted.</para></remarks></summary>
    </member>
    <member name="M:ADK.Diagnostics.LogFile.Delete">
      <summary>
            Deletes the contents of the current log.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the log was deleted.</para><para>False if an error occured.</para></returns>
    </member>
    <member name="P:ADK.Diagnostics.LogFile.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the logging source/location.</para><para><remarks>For a simple file-based log, this would be the name of the file.</remarks></para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogFile.FilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the full path of the log file.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogFile.Directory">
      <summary>
            Type: <see cref="T:System.String" /><para>Gets/Sets the current directory of the log file.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.LogProperties">
      <summary>
            Default implementation of <see cref="T:ADK.Diagnostics.ILogProperties" />.
            </summary>
    </member>
    <member name="F:ADK.Diagnostics.LogProperties._MaxLogSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The maximum size of the current log.</para><remarks>For a simple file-based log, this would be the size in MB allowed for the log file.</remarks></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogProperties._Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the logging source/location.</para><para><remarks>For a simple file-based log, this would be the name of the file.</remarks></para></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogProperties._CheckInterval">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The number of minutes to wait in between checking the log size.</para></summary>
    </member>
    <member name="F:ADK.Diagnostics.LogProperties._ClearOnStartup">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>&gt;Specifies if the log should be cleared when it's initialized.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogProperties.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the logging source/location.</para><para><remarks>For a simple file-based log, this would be the name of the file.</remarks></para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogProperties.Debug">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the log is set for Debug/Verbose logging.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogProperties.CheckInterval">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The number of minutes to wait in between checking the log size.</para></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogProperties.MaxLogSize">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The maximum size of the current log.</para><remarks>For a simple file-based log, this would be the size in MB allowed for the log file.</remarks></summary>
    </member>
    <member name="P:ADK.Diagnostics.LogProperties.ClearOnStartup">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>&gt;Specifies if the log should be cleared when it's initialized.</para></summary>
    </member>
    <member name="T:ADK.Diagnostics.LogWriter">
      <summary>
            Base implementation for the <see cref="T:ADK.Diagnostics.ILog" /> definition.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.#ctor(System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.LogWriter" />, with the provided <paramref name="name" />.
            </summary>
      <param name="name">Type: <see cref="T:System.String" /><para>The name to use for the new instance of <see cref="T:ADK.Diagnostics.LogWriter" />.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.FormatResult(ADK.Results.IResult,System.IO.TextWriter,System.Int32)">
      <summary>
            Formats and writes the the <paramref name="result" /> to the provided <paramref name="tw" /> stream.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The result instance, containing the data to be written to the log.</para></param>
      <param name="tw">Type: <see cref="T:System.IO.TextWriter" /><para>The text writer stream where the result data should be written to.</para></param>
      <param name="processId">Type: <see cref="T:System.Int32" /><para>The process ID of the current application.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.FormatResult(ADK.Results.IResult,System.IO.TextWriter,System.String,System.Int32)">
      <summary>
            Formats and writes the the <paramref name="result" /> to the provided <paramref name="tw" /> stream.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The result instance, containing the data to be written to the log.</para></param>
      <param name="tw">Type: <see cref="T:System.IO.TextWriter" /><para>The text writer stream where the result data should be written to.</para></param>
      <param name="function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="result" /> is being reported.</para></param>
      <param name="processId">Type: <see cref="T:System.Int32" /><para>The process ID of the current application.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteText(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log file.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteText(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteText(ADK.Results.ResultOrigin,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteException(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log file.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteException(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteException(ADK.Results.ResultOrigin,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteResult(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" /> to the current log file.
            </summary>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteResult(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" />, originating from the specified <paramref name="Function" />, to the current log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteResult(ADK.Results.ResultOrigin,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="result" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="result" /> originated.</para></param>
      <param name="result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.EmergencyWriteException(System.String,System.Exception)">
      <summary>
            Writes a log message to a unique/emergency log file.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(System.String,System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(ADK.Results.ResultOrigin,System.Exception,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(System.String,System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(ADK.Results.ResultOrigin,System.String,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(ADK.Diagnostics.WriteLogEventArgs,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes the provided <paramref name="eArgs" /> to the current log.
            </summary>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the details to be written in the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(System.String,ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug logging is enabled, writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug logging value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.WriteDebug(ADK.Results.ResultOrigin,ADK.Results.IResult,System.Nullable{System.Boolean})">
      <summary>
            If debug is true, writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Result" /> originated.</para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
      <param name="debug">Type: <see cref="T:System.Nullable`1" /><para>Used to indicate if the current debug value should be overridden.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" /> to the current log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(ADK.Results.ResultOrigin,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Result" /> originated.</para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">
      </param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(ADK.Results.ResultOrigin,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(ADK.Results.ResultOrigin,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Write(ADK.Diagnostics.WriteLogEventArgs)">
      <summary>
            Writes the provided <paramref name="eArgs" /> to the current log.
            </summary>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the details to be written in the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.CheckLogSize">
      <summary>
            Checks to see if the current log file is larger than allowed, per <see cref="P:ADK.Diagnostics.ILogProperties.MaxLogSize" />.
            <remarks><para>If the log exceeds the size limit, it is deleted.</para></remarks></summary>
    </member>
    <member name="M:ADK.Diagnostics.LogWriter.Delete">
      <summary>
            Deletes the contents of the current log.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the log was deleted.</para><para>False if an error occured.</para></returns>
    </member>
    <member name="T:ADK.Diagnostics.ParentProcessMonitor">
      <summary>
            Monitors the parent process of the currently running application.
            </summary>
    </member>
    <member name="F:ADK.Diagnostics.ParentProcessMonitor._ParentProcess">
      <summary>
            Type: <see cref="T:System.Diagnostics.Process" /><para>Details the current state of the parent process.</para></summary>
    </member>
    <member name="F:ADK.Diagnostics.ParentProcessMonitor._ProcExtLib">
      <summary>
            Type: <see cref="T:ADK.Diagnostics.ProcessExt" /><para>Contains commonly used custom process-maninpulation calls.</para></summary>
    </member>
    <member name="M:ADK.Diagnostics.ParentProcessMonitor.#ctor(System.Int32)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.ParentProcessMonitor" />.
            </summary>
      <param name="PID">Type: <see cref="T:System.Int32" /><para>The id, if known, of the parent process.</para><para><remarks>Note: If not provided, the parent process will be determined automatically.</remarks></para></param>
    </member>
    <member name="M:ADK.Diagnostics.ParentProcessMonitor._ParentProcess_Exited(System.Object,System.EventArgs)">
      <summary>
            Handles the event fired when the parent process terminates.
            </summary>
      <param name="sender">Type: <see cref="T:System.Object" /><para>The instance where the event originated.</para></param>
      <param name="e">
      </param>
    </member>
    <member name="E:ADK.Diagnostics.ParentProcessMonitor.Exited">
      <summary>
            Type: <see cref="T:System.EventHandler" /></summary>
    </member>
    <member name="T:ADK.Diagnostics.ProcessExt">
      <summary>
            Provides various methods for standard process interactions.
            </summary>
    </member>
    <member name="T:ADK.Diagnostics.ProcessExt.PROCESSENTRY32">
      <summary>        
            Describes an entry from a list of the processes residing        
            in the system address space when a snapshot was taken.        
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.CreateToolhelp32Snapshot(System.UInt32,System.UInt32)">
      <summary>        
            Takes a snapshot of the specified processes, as well as the heaps,         
            modules, and threads used by these processes.        
            </summary>
      <param name="dwFlags">        
            The portions of the system to be included in the snapshot.        
            </param>        /// <param name="th32ProcessID">        
            The process identifier of the process to be included in the snapshot.        
            </param><returns>        
            If the function succeeds, it returns an open handle to the specified snapshot.        
            If the function fails, it returns INVALID_HANDLE_VALUE.        
            </returns></member>
    <member name="M:ADK.Diagnostics.ProcessExt.Process32First(System.IntPtr,ADK.Diagnostics.ProcessExt.PROCESSENTRY32@)">
      <summary>        
            Retrieves information about the first process encountered in a system snapshot.        
            </summary>
      <param name="hSnapshot">A handle to the snapshot.</param>
      <param name="lppe">A pointer to a PROCESSENTRY32 structure.</param>
      <returns>        
            Returns TRUE if the first entry of the process list has been copied to the buffer.        
            Returns FALSE otherwise.        
            </returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.Process32Next(System.IntPtr,ADK.Diagnostics.ProcessExt.PROCESSENTRY32@)">
      <summary>        
            Retrieves information about the next process recorded in a system snapshot.        
            </summary>        /// <param name="hSnapshot">A handle to the snapshot.</param><param name="lppe">A pointer to a PROCESSENTRY32 structure.</param><returns>        
            Returns TRUE if the next entry of the process list has been copied to the buffer.        
            Returns FALSE otherwise.</returns></member>
    <member name="M:ADK.Diagnostics.ProcessExt.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.ProcessExt" />.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.GetProcessSum(System.String,System.Int32@)">
      <summary>
            Gets the summation of all process IDs associated with processes with the specified <paramref name="appName" />.
            <remarks>Useful for taking a "snapshot" of the currently running processes, to determine which process was just launched.</remarks></summary>
      <param name="appName">Type: <see cref="T:System.String" /><para>The name of the processes to retrieve the ID summation for.</para></param>
      <param name="procCount">Type: <see cref="T:System.Int32" /><para>Provides the total number of processes associated with the <paramref name="appName" />.</para></param>
      <returns>Type: <see cref="T:System.Int64" /><para>The summation of all process IDs.</para><para>0 if an error/exception occurred.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.GetName(System.Int32)">
      <summary>
            Gets the name of the process, specified by <paramref name="pID" />.
            </summary>
      <param name="pID">Type: <see cref="T:System.Int32" /><para>The ID associated with the process to query.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The name of the process.</para><para><see cref="F:System.String.Empty" /> if an error occured, or the process was not found.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.Exists(System.Int32)">
      <summary>
            Determines if a process, specified by <paramref name="pID" />, is currently running.
            </summary>
      <param name="pID">Type: <see cref="T:System.Int32" /><para>The ID associated with the process to search for.</para></param>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.WaitForExit(System.Int32,System.TimeSpan)">
      <summary>
            Waits for the process, specified by <paramref name="pID" /> to exit.
            </summary>
      <param name="pID">Type: <see cref="T:System.Int32" /><para>The process ID of the target process.</para></param>
      <param name="waitTime">Type: <see cref="T:System.TimeSpan" /><para>The maximum time limit allowed before manually killing the target process.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the process exited.</para><para>False if an error/exception occurred.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.Kill(System.Int32)">
      <summary>
            Kills a process, specified by <paramref name="pID" />, if it is running.
            </summary>
      <param name="pID">Type: <see cref="T:System.Int32" /><para>The ID associated with the process to kill.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the process was terminated.</para><para>False if an error/exception occurred.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.KillByName(System.Int32,System.String)">
      <summary>
            Kills a process, specified by <paramref name="pID" />, if it is running, and if the current process' name is <paramref name="pName" />.
            </summary>
      <param name="pID">Type: <see cref="T:System.Int32" /><para>The ID associated with the process to kill.</para></param>
      <param name="pName">Type: <see cref="T:System.String" /><para>The name associated with the process to kill.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the process was terminated.</para><para>False if an error/exception occurred.</para></returns>
    </member>
    <member name="M:ADK.Diagnostics.ProcessExt.ParentProcess(System.Diagnostics.Process)">
      <summary>        
            Returns the Parent Process of a Process      
            <remarks>Original function from DockOfTheBay (http://www.dotbay.be), ProcessExtensions.cs.  Modified and added to <see cref="T:ADK.Diagnostics.ProcessExt" /> by Aaron Schnarr.</remarks></summary>
      <param name="process">The Windows Process.</param>
      <returns>The Parent Process of the Process.</returns>
    </member>
    <member name="T:ADK.Diagnostics.ThreadSafeLogFile">
      <summary>
            Provides a thread-safe file-based logging system.
            </summary>
    </member>
    <member name="F:ADK.Diagnostics.ThreadSafeLogFile._SemaphoreName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name used to control system-wide access.</para></summary>
    </member>
    <member name="F:ADK.Diagnostics.ThreadSafeLogFile._semSec">
      <summary>
            Specifies the <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> to use when attempting to create the system wide semaphore.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.SetFileName">
      <summary>
            Changes the name of the current log file.
            </summary>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.#ctor(System.String,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Diagnostics.ThreadSafeLogFile" />.
            </summary>
      <param name="name">Type: <see cref="T:System.String" /><para>The name of the log file.</para></param>
      <param name="directory">Type: <see cref="T:System.String" /><para>The name of the directory where the log file is to be created.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" /> to the current thread-safe log.
            </summary>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(System.String,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Function" />, to the current log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Result" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(ADK.Results.ResultOrigin,ADK.Results.IResult)">
      <summary>
            Writes a user specified <paramref name="Result" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Result" /> originated.</para></param>
      <param name="Result">Type: <see cref="T:ADK.Results.IResult" /><para>The object, containing the result data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" /> to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(System.String,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Function" />, to the current log.<remarks>The <see cref="P:System.Exception.Message" />, and <see cref="P:System.Exception.StackTrace" /> are written to the log.</remarks></summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="ex" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="ex">
      </param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(ADK.Results.ResultOrigin,System.Exception)">
      <summary>
            Writes a user specified <paramref name="ex" />, originating from the specified <paramref name="Origin" />, to the current log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="ex" /> originated.</para></param>
      <param name="ex">Type: <see cref="T:System.Exception" /><para>The exception, containing error data to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(System.String)">
      <summary>
            Writes a user specified <paramref name="Message" /> to the current log.
            </summary>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(System.String,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Function" />, to the log.
            </summary>
      <param name="Function">Type: <see cref="T:System.String" /><para>The name of the function where the <paramref name="Message" /> originated.<remarks>This parameter is added to the log entry.</remarks></para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(ADK.Results.ResultOrigin,System.String)">
      <summary>
            Writes a user specified <paramref name="Message" />, originating from the specified <paramref name="Origin" />, to the log.
            </summary>
      <param name="Origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Details the class/function where the <paramref name="Message" /> originated.</para></param>
      <param name="Message">Type: <see cref="T:System.String" /><para>The message to be written to the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Write(ADK.Diagnostics.WriteLogEventArgs)">
      <summary>
            Writes the provided <paramref name="eArgs" /> to the current log.
            </summary>
      <param name="eArgs">Type: <see cref="T:ADK.Diagnostics.WriteLogEventArgs" /><para>Contains the details to be written in the log.</para></param>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.CheckLogSize">
      <summary>
            Checks to see if the current log file is larger than allowed, per <see cref="P:ADK.Diagnostics.Log.MaxLogSize" />.
            <remarks><para>If the log exceeds the size limit, it is deleted.</para></remarks></summary>
    </member>
    <member name="M:ADK.Diagnostics.ThreadSafeLogFile.Delete">
      <summary>
            Deletes the contents of the current log.
            </summary>
      <returns>Type: <see cref="T:System.Boolean" /><para>True if the log was deleted.</para><para>False if an error occured.</para></returns>
    </member>
    <member name="T:ADK.Crypto.EncryptionClient">
      <summary>
            Provides a simple class for encrypting passwords to be sent through an activePDF process.
            </summary>
    </member>
    <member name="T:ADK.Crypto.EncryptionClient.Encrypt_Context">
      <summary>
            Defines the properties associated with an encryption context.
            </summary>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.Encrypt_Context.Initialize">
      <summary>
            Initializes the current <see cref="T:ADK.Crypto.EncryptionClient.Encrypt_Context" />.
            </summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_context">
      <summary>
            Type: <see cref="T:ADK.Crypto.EncryptionClient.Encrypt_Context" /><para>Contains the current encryption context.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_prefix">
      <summary>
            Type: <see cref="T:System.String" /><para>The deprecated encrypted prefix.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_prefix2">
      <summary>
            Type: <see cref="T:System.String" /><para>The new encrypted prefix.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_provider">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the Windows Crypto provider.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_provType">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The type of provider.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_hashAlg">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The type of hash algorithm.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_keyAlg">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The algorithm key.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_flags">
      <summary>
            Type: <see cref="T:System.UInt32" /><para>The flags value.</para></summary>
    </member>
    <member name="F:ADK.Crypto.EncryptionClient.m_keyFlags">
      <summary>
            Type: <see cref="T:System.Int32" /><para>The flags value associated with the key.</para></summary>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Crypto.EncryptionClient" />.
            </summary>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.SetupCryptoClient">
      <summary>
            Deprecated: Setups the WinAPI Crypto context.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.SetupCryptoClient2">
      <summary>
            Sets up the WinAPI Crypto context.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.Initialize(System.Byte[],System.Int32)">
      <summary>
            Initializes the current instance.
            </summary>
      <param name="Key">Type: <see cref="T:System.Byte" />[]<para>The key to use with encryption/decryption.</para></param>
      <param name="KeyLen">Type: <see cref="T:System.Int32" /><para>The length of <paramref name="Key" />.</para></param>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.RC4(System.Byte[],System.Byte[]@,System.Int32)">
      <summary>
            Applies RC4 encryption.
            </summary>
      <param name="Input">Type: <see cref="T:System.Byte" />[]<para>The data to be encrypted.</para></param>
      <param name="Output">Type: <see cref="T:System.Byte" />[]<para>The encrypted data.</para></param>
      <param name="Length">Type: <see cref="T:System.Int32" /><para>The length of the data.</para></param>
    </member>
    <member name="M:ADK.Crypto.EncryptionClient.EncryptString(System.String,System.String@)">
      <summary>
            Encrypts the <paramref name="szPassword" /> to <paramref name="szEncryptedPwd" />.
            </summary>
      <param name="szPassword">Type: <see cref="T:System.String" /><para>The password to be encrypted.</para></param>
      <param name="szEncryptedPwd">Type: <see cref="T:System.String" /><para>The encrypted password.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the encryption was successful.</para></returns>
    </member>
    <member name="T:ADK.Crypto.WinAPI">
      <summary>
            Contains the Windows API function exports required for Cryptographic functionality.
            </summary>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptAcquireContext(System.IntPtr@,System.String,System.String,System.UInt32,System.UInt32)">
      <summary>
            Acquires a cryptography context.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>Point to a handle of a CSP.</para></param>
      <param name="pszContainer">Type: <see cref="T:System.String" /><para>The key container name.</para></param>
      <param name="pszProvider">Type: <see cref="T:System.String" /><para>Contains the name of the CSP to be used.</para></param>
      <param name="dwProvType">Type: <see cref="T:System.UInt32" /><para>Specifies the type of provider to acquire.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Flag values.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptGetUserKey(System.IntPtr,System.UInt32,System.IntPtr@)">
      <summary>
            Retrieves a handle of one of the user's two public/private key pairs.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>HCRYPTPROV handle of a cryptographic service provider.</para></param>
      <param name="dwKeySpec">Type: <see cref="T:System.UInt32" /><para>Identifies the private key to use from the key container.</para></param>
      <param name="hKey">Type: <see cref="T:System.IntPtr" /><para>A pointer to the HCRYPTKEY handle of the retrieved keys.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptGenKey(System.IntPtr,System.UInt32,System.UInt32,System.IntPtr@)">
      <summary>
            Generates a random cryptographic session key, or a public/private key pair.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>A handle to a CSP.</para></param>
      <param name="algId">Type: <see cref="T:System.UInt32" /><para>Identifies the algorithm for which the key is to be generated.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Specifies the type of key generated.</para></param>
      <param name="phKey">Type: <see cref="T:System.IntPtr" /><para>Address to which the function copies the handle of the newly generated key.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptReleaseContext(System.IntPtr,System.UInt32)">
      <summary>
            Releases the handle of a CSP and a key container.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>Handle of the CSP.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Reserved for future use and must be 0.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptDestroyKey(System.IntPtr)">
      <summary>
            Releases the handle referenced by <paramref name="phKey" />.
            </summary>
      <param name="phKey">Type: <see cref="T:System.IntPtr" /><para>The handle of the key to be destroyed.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptCreateHash(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.IntPtr@)">
      <summary>
            Initiates the hashing of a stream of data.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>A handle to the CSP.</para></param>
      <param name="algId">Type: <see cref="T:System.UInt32" /><para>Identifies the hash algorithm to use.</para></param>
      <param name="hKey">Type: <see cref="T:System.IntPtr" /><para>If the type of hash algorithm is a keyed hash, the key for the hash is passed in this parameter.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Not used.</para></param>
      <param name="phHash">Type: <see cref="T:System.IntPtr" /><para>The address to which the function copies a handle to the new hash object.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptHashData(System.IntPtr,System.Byte[],System.UInt32,System.UInt32)">
      <summary>
            Adds data to a specified hash object.
            </summary>
      <param name="hHash">Type: <see cref="T:System.IntPtr" /><para>Handle of the hash object.</para></param>
      <param name="pbData">Type: <see cref="T:System.Byte" />[]<para>Pointer to a buffer that contains the data to be added to the hash object.</para></param>
      <param name="dataLen">Type: <see cref="T:System.UInt32" /><para>Number of bytes of data to be added.</para></param>
      <param name="flags">Type: <see cref="T:System.UInt32" /><para>Flag values.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptDeriveKey(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
      <summary>
            Generates cryptographic session keys derived from a base data value.
            </summary>
      <param name="hProv">Type: <see cref="T:System.IntPtr" /><para>Handle of a CSP.</para></param>
      <param name="algId">Type: <see cref="T:System.Int32" /><para>Identifies the algorithm for which the key is to be generated.</para></param>
      <param name="hBaseData">Type: <see cref="T:System.IntPtr" /><para>Handle to a hash object that has been fed the exact base data.</para></param>
      <param name="flags">Type: <see cref="T:System.Int32" /><para>Specifies the type of key generated.</para></param>
      <param name="phKey">Type: <see cref="T:System.IntPtr" /><para>Receives the address of the handle of the newly generated key.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptEncrypt(System.IntPtr,System.IntPtr,System.Int32,System.UInt32,System.Byte[],System.UInt32@,System.UInt32)">
      <summary>
            Encrypts the data.
            </summary>
      <param name="hKey">Type: <see cref="T:System.IntPtr" /><para>Handle to the encryption key.</para></param>
      <param name="hHash">Type: <see cref="T:System.IntPtr" /><para>Handle to a hash object.</para></param>
      <param name="Final">Type: <see cref="T:System.Int32" /><para>Specifies whether this is the last section in a series being encrypted.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Flag values.</para></param>
      <param name="pbData">Type: <see cref="T:System.Byte" />[]<para>Pointer to a buffer containing the plaintext to be encrypted.</para></param>
      <param name="pdwDataLen">Type: <see cref="T:System.UInt32" /><para>Pointer to a DWORD specifies the length of the <paramref name="pbData" /> buffer.</para></param>
      <param name="dwBufLen">Type: <see cref="T:System.UInt32" /><para>Specifies teh total size, in bytes, of <paramref name="pbData" />.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptDestroyHash(System.IntPtr)">
      <summary>
            Destroys the hash object referenced by the <paramref name="hHash" /> parameter.
            </summary>
      <param name="hHash">Type: <see cref="T:System.IntPtr" /><para>The handle of the hash object to be destroyed.</para></param>
      <returns>
      </returns>
    </member>
    <member name="M:ADK.Crypto.WinAPI.CryptDecrypt(System.IntPtr,System.IntPtr,System.Int32,System.UInt32,System.Byte[],System.UInt32@)">
      <summary>
            Decrypts data previously encrypted.
            </summary>
      <param name="hKey">Type: <see cref="T:System.IntPtr" /><para>Handle to the key to use for the decryption.</para></param>
      <param name="hHash">Type: <see cref="T:System.IntPtr" /><para>Handle to a hash object.</para></param>
      <param name="Final">Type: <see cref="T:System.Int32" /><para>Specifies whether this is the last section in a series to be decrypted.</para></param>
      <param name="dwFlags">Type: <see cref="T:System.UInt32" /><para>Flag values.</para></param>
      <param name="pbData">Type: <see cref="T:System.Byte" />[]<para>Contains the data to be decrypted.</para></param>
      <param name="pdwDataLen">Type: <see cref="T:System.UInt32" /><para>Indicates the length of the <paramref name="pbData" /> buffer.</para></param>
      <returns>Type: <see cref="T:System.Boolean" /><para>Indicates if the function succeeded.</para></returns>
    </member>
    <member name="T:ADK.Conversion.OverwriteMethod">
      <summary>
            Enumerates the supported options for handling existing PDFs during conversion.
            </summary>
    </member>
    <member name="F:ADK.Conversion.OverwriteMethod.Always">
      <summary>
            Always overwrite the existing PDF.
            </summary>
    </member>
    <member name="F:ADK.Conversion.OverwriteMethod.Concatenate">
      <summary>
            Concatenate output PDF to the existing PDF.
            </summary>
    </member>
    <member name="F:ADK.Conversion.OverwriteMethod.Never">
      <summary>
            Never overwrite the existing PDF.
            </summary>
    </member>
    <member name="F:ADK.Conversion.OverwriteMethod.AlterFilename">
      <summary>
            Alter the output PDF filename.
            </summary>
    </member>
    <member name="T:ADK.Contracts.DownloadRequest">
      <summary>
            Class representing a download request for a specific file.
            </summary>
    </member>
    <member name="F:ADK.Contracts.DownloadRequest.DeleteOnDownloadComplete">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the file is to be deleted after the download completes.</para></summary>
    </member>
    <member name="F:ADK.Contracts.DownloadRequest.FileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The file that is being requested.</para></summary>
    </member>
    <member name="M:ADK.Contracts.DownloadRequest.#ctor">
      <summary>
            Creates a new instance of <see cref="T:ADK.Contracts.DownloadRequest" />.
            </summary>
    </member>
    <member name="T:ADK.Contracts.FileTransferInfo">
      <summary>
            Class representing an incoming transfer request.
            </summary>
    </member>
    <member name="F:ADK.Contracts.FileTransferInfo.FileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the file that will be transfered.</para></summary>
    </member>
    <member name="F:ADK.Contracts.FileTransferInfo.Length">
      <summary>
            Type: <see cref="T:System.Int64" /><para>The length of the file, in bytes.</para></summary>
    </member>
    <member name="F:ADK.Contracts.FileTransferInfo.FileDataStream">
      <summary>
            Type: <see cref="T:System.IO.Stream" /><para>The contents of the file.</para></summary>
    </member>
    <member name="T:ADK.Contracts.IFileTransferService">
      <summary>
            Defines the methods required to implement a file transfer service.
            </summary>
    </member>
    <member name="M:ADK.Contracts.IFileTransferService.UploadFile(ADK.Contracts.FileTransferInfo)">
      <summary>
            Transfers a file to the machine where the WCF is hosted.
            </summary>
      <param name="request">Type: <see cref="T:ADK.Contracts.FileTransferInfo" /><para>Provides details on the file to be uploaded.</para></param>
    </member>
    <member name="M:ADK.Contracts.IFileTransferService.DownloadFile(ADK.Contracts.DownloadRequest)">
      <summary>
            Requests for a file to be transfered to the requesting client.
            </summary>
      <param name="request">Type: <see cref="T:ADK.Contracts.DownloadRequest" /><para>Provides details on the file being requested.</para></param>
      <returns>Type: <see cref="T:ADK.Contracts.FileTransferInfo" /><para>The information required to transfer the file.</para></returns>
    </member>
    <member name="T:ADK.Contracts.IPingable">
      <summary>
            Defines the methods required to implement a pingable service.
            </summary>
    </member>
    <member name="M:ADK.Contracts.IPingable.Ping">
      <summary>
            Pings the hosted engine, determining if it is currently running.
            </summary>
      <returns>Type: <see cref="T:ADK.Results.Result" /><para>Details the success/failure of the ping attempt.</para></returns>
    </member>
    <member name="T:ADK.Client.ClientChannelFactory`1">
      <summary>
            Wraps WCF ChannelFactory creation/usage for easy/safe access in a "using" block.
            </summary>
      <typeparam name="TInterface">Desired service contract interface.</typeparam>
    </member>
    <member name="F:ADK.Client.ClientChannelFactory`1._ChannelFactory">
      <summary>
            Type: <see cref="T:System.ServiceModel.ChannelFactory`1" /><para><see cref="T:System.ServiceModel.ChannelFactory" /> used to create Client/Server side instances.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientChannelFactory`1._Channel">
      <summary>
            Type: <typeparamref name="TInterface" /><para>Instance of the desired <typeparamref name="TInterface" />.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientChannelFactory`1._MinimizeLogging">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Client.ClientChannelFactory`1" /> is to be used solely for testing purposes.</para></summary>
    </member>
    <member name="M:ADK.Client.ClientChannelFactory`1.#ctor(ADK.Client.ClientStartInfo)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Client.ClientChannelFactory`1" /> based on the details from <paramref name="startInfo" />.
            </summary>
      <param name="startInfo">Type: <see cref="T:ADK.Client.ClientStartInfo" /><para>Provides the details to use when creating the new wrapper.</para></param>
    </member>
    <member name="M:ADK.Client.ClientChannelFactory`1.Dispose">
      <summary>
            Called when the instance is being disposed.
            </summary>
    </member>
    <member name="P:ADK.Client.ClientChannelFactory`1.Channel">
      <summary>
            Type: <typeparamref name="TInterface" /><para>Instance of the desired <typeparamref name="TInterface" />.</para></summary>
    </member>
    <member name="T:ADK.Client.ClientDuplexChannelFactory`1">
      <summary>
            Wraps WCF DuplexChannelFactory creation/usage for easy/safe access in a "using" block.
            </summary>
      <typeparam name="TInterface">Desired service contract interface.</typeparam>
    </member>
    <member name="F:ADK.Client.ClientDuplexChannelFactory`1._ChannelFactory">
      <summary>
            Type: <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /><para><see cref="T:System.ServiceModel.ChannelFactory" /> used to create Client/Server side instances.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientDuplexChannelFactory`1._Channel">
      <summary>
            Type: <typeparamref name="TInterface" /><para>Instance of the desired <typeparamref name="TInterface" />.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientDuplexChannelFactory`1._MinimizeLogging">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the <see cref="T:ADK.Client.ClientDuplexChannelFactory`1" /> is to be used solely for testing purposes.</para></summary>
    </member>
    <member name="M:ADK.Client.ClientDuplexChannelFactory`1.#ctor(ADK.Client.DuplexClientStartInfo)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Client.ClientDuplexChannelFactory`1" /> based on the details from <paramref name="startInfo" />.
            </summary>
      <param name="startInfo">Type: <see cref="T:ADK.Client.DuplexClientStartInfo" /><para>Provides the details to use when creating the new wrapper.</para></param>
    </member>
    <member name="M:ADK.Client.ClientDuplexChannelFactory`1.Dispose">
      <summary>
            Called when the instance is being disposed.
            </summary>
    </member>
    <member name="P:ADK.Client.ClientDuplexChannelFactory`1.Channel">
      <summary>
            Type: <typeparamref name="TInterface" /><para>Instance of the desired <typeparamref name="TInterface" />.</para></summary>
    </member>
    <member name="T:ADK.Client.ClientEndpointFactory">
      <summary>
            Provides functions for retrieving endpoint addresses according to expected infrastructure.
            </summary>
    </member>
    <member name="M:ADK.Client.ClientEndpointFactory.GetNamedPipeAddress``1(System.String,System.String,System.String)">
      <summary>
            Retrieves the address associated with <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> endpoint.
            </summary>
      <typeparam name="TInterface">Specifies the type of contract that is hosted at the desired endpoint.</typeparam>
      <param name="applicationName">Type: <see cref="T:System.String" /><para>Specifies the name of the application/product that is hosting the endpoint.</para></param>
      <param name="endpointName">Type: <see cref="T:System.String" /><para>The name of the endpoint.</para></param>
      <param name="endpointSubName">Type: <see cref="T:System.String" /><para>The sub-name of the endpoint, or the name of the <typeparamref name="TInterface" /> if none provided.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The address for the expected endpoint.</para></returns>
    </member>
    <member name="M:ADK.Client.ClientEndpointFactory.GetTcpAddress``1(System.String,System.Int32,System.String,ADK.WCF.BindingSecurity,System.String)">
      <summary>
            Retrieves the address associated with a <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> endpoint.
            </summary>
      <typeparam name="TInterface">Specifies the type of contract that is hosted at the desired endpoint.</typeparam>
      <param name="applicationName">Type: <see cref="T:System.String" /><para>Specifies the name of the application/product that is hosting the endpoint.</para></param>
      <param name="port">Type: <see cref="T:System.Int32" /><para>Specifies the port number where the endpoint is expected.</para></param>
      <param name="machineName">Type: <see cref="T:System.String" /><para>Specifies the name of the machine where the endpoint is hosted.</para></param>
      <param name="security">Type: <see cref="T:ADK.WCF.BindingSecurity" /><para>Specifies the type of security that will be used for the endpoint.</para></param>
      <param name="endpointSubName">Type: <see cref="T:System.String" /><para>The sub-name of the endpoint, or the name of the <typeparamref name="TInterface" /> if none provided.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The address for the expected endpoint.</para></returns>
    </member>
    <member name="M:ADK.Client.ClientEndpointFactory.GetTcpAddress``1(System.String,System.Int32,System.String,System.String,System.String)">
      <summary>
            Retrieves the address associated with a <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> endpoint.
            </summary>
      <typeparam name="TInterface">Specifies the type of contract that is hosted at the desired endpoint.</typeparam>
      <param name="applicationName">Type: <see cref="T:System.String" /><para>Specifies the name of the application/product that is hosting the endpoint.</para></param>
      <param name="port">Type: <see cref="T:System.Int32" /><para>Specifies the port number where the endpoint is expected.</para></param>
      <param name="machineName">Type: <see cref="T:System.String" /><para>Specifies the name of the machine where the endpoint is hosted.</para></param>
      <param name="endpointName">Type: <see cref="T:System.String" /><para>The name of the endpoint.</para></param>
      <param name="endpointSubName">Type: <see cref="T:System.String" /><para>The sub-name of the endpoint, or the name of the <typeparamref name="TInterface" /> if none provided.</para></param>
      <returns>Type: <see cref="T:System.String" /><para>The address for the expected endpoint.</para></returns>
    </member>
    <member name="T:ADK.Client.ClientStartInfo">
      <summary>
            Defines values to use when starting a new <see cref="T:ADK.Client.ClientChannelFactory`1" />.
            </summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._ChannelBinding">
      <summary>
            Type: <see cref="T:System.ServiceModel.Channels.Binding" /><para>The WCF binding to be used when contacting the endpoint.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._ChannelEndpoint">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the endpoint to contact.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._MinimizeLogging">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if logging should be kept to a minimum.</para><remarks><para>This is useful when probing for endpoint existence, as it will prevent extraneous messages from being logged.</para></remarks></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._UsernameAuthentication">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if username/password authentication is to be used when accessing the endpoint.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._UserName">
      <summary>
            Type: <see cref="T:System.String" /><para>The user name, if any, to use when accessing the endpoint.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._Password">
      <summary>
            Type: <see cref="T:System.String" /><para>The password, if any, to use when accessing the endpoing.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._Domain">
      <summary>
            Type:  <see cref="T:System.String" /><para>The domain, if any, to use with Windows authentication.</para></summary>
    </member>
    <member name="F:ADK.Client.ClientStartInfo._DNSIdentity">
      <summary>
            Type: <see cref="T:System.String" /><para>The DNS identity to use when accessing the endpoint.</para></summary>
    </member>
    <member name="M:ADK.Client.ClientStartInfo.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Client.ClientStartInfo" />.
            </summary>
      <param name="channelBinding">Type: <see cref="T:System.ServiceModel.Channels.Binding" /><para>The WCF binding to be used when contacting the endpoint.</para></param>
      <param name="channelEndpoint">Type: <see cref="T:System.String" /><para>The address of the endpoint to contact.</para></param>
    </member>
    <member name="M:ADK.Client.ClientStartInfo.SetWindowsUserCredentials(System.String,System.String,System.String)">
      <summary>
            Sets the user credentials for Windows authentication.
            </summary>
      <param name="userName">Type: <see cref="T:System.String" /><para>The user name, if any, to use when accessing the endpoint.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password, if any, to use when accessing the endpoing.</para></param>
      <param name="domain">Type: <see cref="T:System.String" /><para>The domain, if any, to use with the Windows authentication.</para></param>
    </member>
    <member name="M:ADK.Client.ClientStartInfo.SetUsernameAuthentication(System.String,System.String)">
      <summary>
            Sets the username/password authentication properties.
            </summary>
      <param name="userName">Type: <see cref="T:System.String" /><para>The user name, if any, to use when accessing the endpoint.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password, if any, to use when accessing the endpoing.</para></param>
    </member>
    <member name="M:ADK.Client.ClientStartInfo.SetUsernameAuthentication(System.String,System.String,System.String)">
      <summary>
            Sets the username/password authentication properties.
            </summary>
      <param name="userName">Type: <see cref="T:System.String" /><para>The user name, if any, to use when accessing the endpoint.</para></param>
      <param name="password">Type: <see cref="T:System.String" /><para>The password, if any, to use when accessing the endpoing.</para></param>
      <param name="dnsIdentity">Type: <see cref="T:System.String" /><para>The DNS identity to use when accessing the endpoint.</para></param>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.ChannelBinding">
      <summary>
            Type: <see cref="T:System.ServiceModel.Channels.Binding" /><para>The WCF binding to be used when contacting the endpoint.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.ChannelEndpoint">
      <summary>
            Type: <see cref="T:System.String" /><para>The address of the endpoint to contact.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.UserName">
      <summary>
            Type: <see cref="T:System.String" /><para>The user name, if any, to use when accessing the endpoint.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.Password">
      <summary>
            Type: <see cref="T:System.String" /><para>The password, if any, to use when accessing the endpoing.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.Domain">
      <summary>
            Type:  <see cref="T:System.String" /><para>The domain, if any, to use with Windows authentication.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.DNSIdentity">
      <summary>
            Type: <see cref="T:System.String" /><para>The DNS identity to use when accessing the endpoint.</para><remarks><para>Currently this is only used during username authentication.</para></remarks></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.UsernameAuthentication">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if username/password authentication is to be used when accessing the endpoint.</para></summary>
    </member>
    <member name="P:ADK.Client.ClientStartInfo.MinimizeLogging">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if logging should be kept to a minimum.</para><remarks><para>This is useful when probing for endpoint existence, as it will prevent extraneous messages from being logged.</para></remarks></summary>
    </member>
    <member name="T:ADK.Client.DuplexClientStartInfo">
      <summary>
            Defines values to use when starting a new <see cref="T:ADK.Client.ClientDuplexChannelFactory`1" />.
            </summary>
    </member>
    <member name="M:ADK.Client.DuplexClientStartInfo.#ctor(System.ServiceModel.Channels.Binding,System.String,System.ServiceModel.InstanceContext)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Client.ClientStartInfo" />.
            </summary>
      <param name="channelBinding">Type: <see cref="T:System.ServiceModel.Channels.Binding" /><para>The WCF binding to be used when contacting the endpoint.</para></param>
      <param name="channelEndpoint">Type: <see cref="T:System.String" /><para>The address of the endpoint to contact.</para></param>
      <param name="callbackContext">Type: <see cref="T:System.ServiceModel.InstanceContext" /><para>The context to use when making a Callback call.</para></param>
    </member>
    <member name="P:ADK.Client.DuplexClientStartInfo.CallbackContext">
      <summary>
            Type: <see cref="T:System.ServiceModel.InstanceContext" /><para>The context to use when making a Callback call.</para></summary>
    </member>
    <member name="T:ADK.Authentication.Credentials">
      <summary>
            Represents the account credentials, if any, that should be used with an operation.
            </summary>
    </member>
    <member name="F:ADK.Authentication.Credentials._UseDefault">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current credentials should be used, instead of custom credentials.</para></summary>
    </member>
    <member name="F:ADK.Authentication.Credentials._Custom">
      <summary>
            Type: <see cref="T:ADK.Authentication.UsernameDomain" /><para>Custom account credentials that should be utilized, if any.</para></summary>
    </member>
    <member name="M:ADK.Authentication.Credentials.#ctor">
      <summary>
            Creates a default instance of <see cref="T:ADK.Authentication.Credentials" />.
            </summary>
    </member>
    <member name="M:ADK.Authentication.Credentials.#ctor(ADK.Authentication.UsernameDomain)">
      <summary>
            Creates a new instance of <see cref="T:ADK.Authentication.Credentials" />, with the provided <paramref name="customCreds" />.
            </summary>
      <param name="customCreds">Type: <see cref="T:ADK.Authentication.UsernameDomain" /><para>The custom account credentials to associate with the new instance.</para></param>
    </member>
    <member name="P:ADK.Authentication.Credentials.UseDefault">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Indicates if the current credentials should be used, instead of custom credentials.</para></summary>
    </member>
    <member name="P:ADK.Authentication.Credentials.Custom">
      <summary>
            Type: <see cref="T:ADK.Authentication.UsernameDomain" /><para>Custom account credentials that should be utilized, if any.</para></summary>
    </member>
    <member name="T:ADK.Authentication.ICredential">
      <summary>
            Defines properties required to implement an optional credential.
            </summary>
    </member>
    <member name="P:ADK.Authentication.ICredential.UseDefault">
      <summary>
            Type: <see cref="T:System.Boolean" /><para>Specifies if the default credential should be used.</para></summary>
    </member>
    <member name="P:ADK.Authentication.ICredential.Client">
      <summary>
            Type: <see cref="T:ADK.Authentication.IUsername" /><para>Specifies the client user authentication details, if <see cref="P:ADK.Authentication.ICredential.UseDefault" /> is false.</para></summary>
    </member>
    <member name="T:ADK.Authentication.Impersonator">
      <summary>
            Impersonation of a user. Allows to execute code under another
            user context.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
      <remarks>	
            This class is based on the information in the Microsoft knowledge base
            article http://support.microsoft.com/default.aspx?scid=kb;en-us;Q306158
            
            Encapsulate an instance into a using-directive like e.g.:
            
            	...
            	using ( new Impersonator( "myUsername", "myDomainname", "myPassword" ) )
            	{
            		...
            		[code that executes under the new context]
            		...
            	}
            	...
            
            Please contact the author Uwe Keim (mailto:uwe.keim@zeta-software.de)
            for questions regarding this class.
            </remarks>
    </member>
    <member name="T:ADK.Authentication.Impersonator.LogonType">
      <summary>
            The type of logon operation to perform.
            </summary>
    </member>
    <member name="M:ADK.Authentication.Impersonator.#ctor(ADK.Authentication.UsernameDomain)">
      <summary>
            Constructor. Starts the impersonation with the given credentials.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
      <param name="userInfo">The user credentials to impersonate.</param>
    </member>
    <member name="M:ADK.Authentication.Impersonator.#ctor(ADK.Authentication.UsernameDomain,ADK.Authentication.Impersonator.LogonType)">
      <summary>
            Constructor. Starts the impersonation with the given credentials.
            Please note that the account that instantiates the Impersonator class
            needs to have the 'Act as part of operating system' privilege set.
            </summary>
      <param name="userInfo">The user credentials to impersonate.</param>
      <param name="logonType">The logon type operation to use.</param>
    </member>
    <member name="M:ADK.Authentication.Impersonator.Dispose">
      <summary>
            Disposes of the current <see cref="T:ADK.Authentication.Impersonator" /> instance, and ending any current impersonation.
            </summary>
    </member>
    <member name="M:ADK.Authentication.Impersonator.ImpersonateValidUser(ADK.Authentication.UsernameDomain)">
      <summary>
            Does the actual impersonation.
            </summary>
      <param name="userInfo">The user credentials to impersonate.</param>
    </member>
    <member name="M:ADK.Authentication.Impersonator.UndoImpersonation">
      <summary>
            Reverts the impersonation.
            </summary>
    </member>
    <member name="T:ADK.Authentication.IUsername">
      <summary>
            Defines the properties associated with username/password authentication.
            </summary>
    </member>
    <member name="P:ADK.Authentication.IUsername.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name to use for authentication.</para></summary>
    </member>
    <member name="P:ADK.Authentication.IUsername.Password">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the password to use when authenticating the <see cref="P:ADK.Authentication.IUsername.Name" />.</para></summary>
    </member>
    <member name="T:ADK.Authentication.IUsernameDomain">
      <summary>
            Defines the properties associate
            </summary>
    </member>
    <member name="P:ADK.Authentication.IUsernameDomain.Domain">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the domain in which to authenicate.</para></summary>
    </member>
    <member name="T:ADK.Authentication.Username">
      <summary>
            Class used for username/password authentication.
            </summary>
    </member>
    <member name="F:ADK.Authentication.Username._Name">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name to use for authentication.</para></summary>
    </member>
    <member name="F:ADK.Authentication.Username._Password">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the password to use when authenticating the <see cref="P:ADK.Authentication.Username.Name" />.</para></summary>
    </member>
    <member name="P:ADK.Authentication.Username.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the name to use for authentication.</para></summary>
    </member>
    <member name="P:ADK.Authentication.Username.Password">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the password to use when authenticating the <see cref="P:ADK.Authentication.Username.Name" />.</para></summary>
    </member>
    <member name="T:ADK.Authentication.UsernameDomain">
      <summary>
            Class used for username/password authentication, on a specific domain.
            </summary>
    </member>
    <member name="F:ADK.Authentication.UsernameDomain._Domain">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the domain in which to authenicate.</para></summary>
    </member>
    <member name="P:ADK.Authentication.UsernameDomain.Domain">
      <summary>
            Type: <see cref="T:System.String" /><para>Specifies the domain in which to authenicate.</para></summary>
    </member>
    <member name="T:ADK.Attachments.Attachment">
      <summary>
            Represents an attachment used with email, ftp.
            </summary>
    </member>
    <member name="F:ADK.Attachments.Attachment._AttachmentType">
      <summary>
            Type: <see cref="P:ADK.Attachments.Attachment.AttachmentType" /><para>Indicates the type of attachment that the current instance supports.</para></summary>
    </member>
    <member name="F:ADK.Attachments.Attachment._BinaryAttachment">
      <summary>
            Type: <see cref="P:ADK.Attachments.Attachment.BinaryAttachment" /><para>The current <see cref="P:ADK.Attachments.Attachment.BinaryAttachment" />, if any.</para></summary>
    </member>
    <member name="F:ADK.Attachments.Attachment._FilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path of the file to attach, if any.</para></summary>
    </member>
    <member name="F:ADK.Attachments.Attachment._Output">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates if the attachment targets the current conversion output.</para></summary>
    </member>
    <member name="M:ADK.Attachments.Attachment.SetAttachmentType(ADK.Attachments.AttachmentType)">
      <summary>
            Sets the current <see cref="P:ADK.Attachments.Attachment.AttachmentType" />.
            </summary>
      <param name="newType">Type: <see cref="P:ADK.Attachments.Attachment.AttachmentType" /><para>The new type of attachment to be used.</para></param>
    </member>
    <member name="P:ADK.Attachments.Attachment.AttachmentType">
      <summary>
            Type: <see cref="P:ADK.Attachments.Attachment.AttachmentType" /><para>Indicates the type of attachment that the current instance supports.</para></summary>
    </member>
    <member name="P:ADK.Attachments.Attachment.BinaryAttachment">
      <summary>
            Type: <see cref="P:ADK.Attachments.Attachment.BinaryAttachment" /><para>The current <see cref="P:ADK.Attachments.Attachment.BinaryAttachment" />, if any.</para></summary>
    </member>
    <member name="P:ADK.Attachments.Attachment.FilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>The full path of the file to attach, if any.</para></summary>
    </member>
    <member name="P:ADK.Attachments.Attachment.Output">
      <summary>
            Type: <see cref="T:System.Int32" /><para>Indicates if the attachment targets the current conversion output.</para></summary>
    </member>
    <member name="T:ADK.Attachments.AttachmentType">
      <summary>
            Enumerates the supported attachment types.
            </summary>
    </member>
    <member name="F:ADK.Attachments.AttachmentType.FilePath">
      <summary>
            The attachment is the full path to the target file.
            </summary>
    </member>
    <member name="F:ADK.Attachments.AttachmentType.Binary">
      <summary>
            The attachment is binary data, with the corresponding file name.
            </summary>
    </member>
    <member name="F:ADK.Attachments.AttachmentType.Output">
      <summary>
            The output file(s) of the current request are to be attached to the email.
            </summary>
    </member>
    <member name="T:ADK.Attachments.BinaryAttachment">
      <summary>
            Details the properties representing a binary-based attachment.
            </summary>
    </member>
    <member name="P:ADK.Attachments.BinaryAttachment.BinaryFile">
      <summary>
            Type: <see cref="T:System.Byte" />[]<para>The binary contents of the file.</para></summary>
    </member>
    <member name="P:ADK.Attachments.BinaryAttachment.FileName">
      <summary>
            Type: <see cref="T:System.String" /><para>The name of the file, contained in <see cref="P:ADK.Attachments.BinaryAttachment.BinaryFile" />.</para></summary>
    </member>
    <member name="T:DCDK.Conversion.AttachmentInfo">
      <summary>
            Attachment information for the external file to be embedded into the PDF document.
            </summary>
    </member>
    <member name="M:DCDK.Conversion.AttachmentInfo.#ctor">
      <summary>
            Creates an instance of <see cref="T:DCDK.Conversion.AttachmentInfo" />.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.AttachmentInfo.Name">
      <summary>
            Type: <see cref="T:System.String" /><para>The name associated with this attachment.</para></summary>
    </member>
    <member name="P:DCDK.Conversion.AttachmentInfo.FilePath">
      <summary>
            Type: <see cref="T:System.String" /><para>The file path associated with this attachment.</para></summary>
    </member>
    <member name="T:DCDK.Conversion.ConversionOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.ConversionOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.ConversionOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.ConversionOptions.PredefinedConfiguration">
      <summary>
              Looks up a localized string similar to PredefinedConfiguration.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.ConversionOptions.ProcessEmailAttachment">
      <summary>
              Looks up a localized string similar to ProcessEmailAttachment.
            </summary>
    </member>
    <member name="P:DCDK.Conversion.ConversionOptions.SavePostscriptFile">
      <summary>
              Looks up a localized string similar to SavePostscriptFile.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.ExcelOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelExportAllWorksheet">
      <summary>
              Looks up a localized string similar to ExcelExportAllWorksheet.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelExportIgnorePrintArea">
      <summary>
              Looks up a localized string similar to ExcelExportIgnorePrintArea.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelExportIntent">
      <summary>
              Looks up a localized string similar to ExcelExportIntent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelExportPageRange">
      <summary>
              Looks up a localized string similar to ExcelExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelExportRange">
      <summary>
              Looks up a localized string similar to ExcelExportRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelPrintAllWorksheet">
      <summary>
              Looks up a localized string similar to ExcelPrintAllWorksheet.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelPrintPageRange">
      <summary>
              Looks up a localized string similar to ExcelPrintPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.ExcelOptions.ExcelPrintRange">
      <summary>
              Looks up a localized string similar to ExcelPrintRange.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.FromPDFOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFExcelAutoDetectSeparators">
      <summary>
              Looks up a localized string similar to FromPDFExcelAutoDetectSeparators.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFExcelDecimalSeparator">
      <summary>
              Looks up a localized string similar to FromPDFExcelDecimalSeparator.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFExcelTablesFromContent">
      <summary>
              Looks up a localized string similar to FromPDFExcelTablesFromContent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFExcelThousandsSeparator">
      <summary>
              Looks up a localized string similar to FromPDFExcelThousandsSeparator.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFImagePageDPI">
      <summary>
              Looks up a localized string similar to FromPDFImagePageDPI.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFImageStitchPages">
      <summary>
              Looks up a localized string similar to FromPDFImageStitchPages.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.FromPDFOptions.FromPDFWordHeadersAndFooters">
      <summary>
              Looks up a localized string similar to FromPDFWordHeadersAndFooters.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.GeneralOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.BypassToolkit">
      <summary>
              Looks up a localized string similar to BypassToolkit.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.ConversionType">
      <summary>
              Looks up a localized string similar to ConversionType.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.EmailDisplayUTCOffset">
      <summary>
              Looks up a localized string similar to EmailDisplayUTCOffset.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.EmailForceLocalDate">
      <summary>
              Looks up a localized string similar to EmailForceLocalDate.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.ExternalProfileName">
      <summary>
              Looks up a localized string similar to ExternalProfileName.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.FromPDF">
      <summary>
              Looks up a localized string similar to FromPDF.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.OverwriteMethod">
      <summary>
              Looks up a localized string similar to OverwriteMethod.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.PDFAComplianceLevel">
      <summary>
              Looks up a localized string similar to PDFAComplianceLevel.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.PDFCompression">
      <summary>
              Looks up a localized string similar to PDFCompression.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.PDFExtension">
      <summary>
              Looks up a localized string similar to PDFExtension.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.TIFFIgnoreCompression">
      <summary>
              Looks up a localized string similar to TIFFIgnoreCompression.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.TIFFIgnoreOrientation">
      <summary>
              Looks up a localized string similar to TIFFIgnoreOrientation.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.GeneralOptions.UseOriginalExtractedFilename">
      <summary>
              Looks up a localized string similar to UseOriginalExtractedFilename.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.LibreOfficeOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportCreatePDFForm">
      <summary>
              Looks up a localized string similar to LibreOfficeExportCreatePDFForm.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportCreatePDFFormAllowDuplicateFields">
      <summary>
              Looks up a localized string similar to LibreOfficeExportCreatePDFFormAllowDuplicateFields.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportCreatePDFFormSubmitFormat">
      <summary>
              Looks up a localized string similar to LibreOfficeExportCreatePDFFormSubmitFormat.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportIncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to LibreOfficeExportIncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportPageRange">
      <summary>
              Looks up a localized string similar to LibreOfficeExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.LibreOfficeOptions.LibreOfficeExportRange">
      <summary>
              Looks up a localized string similar to LibreOfficeExportRange.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.OfficeOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.IncludeDocumentProperties">
      <summary>
              Looks up a localized string similar to IncludeDocumentProperties.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.IncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to IncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.IntelligentPDF">
      <summary>
              Looks up a localized string similar to IntelligentPDF.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.IUT">
      <summary>
              Looks up a localized string similar to IUT.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.Macros">
      <summary>
              Looks up a localized string similar to Macros.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.OfficeOptions.WPA">
      <summary>
              Looks up a localized string similar to WPA.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.PowerPointOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportBitmapMissingFonts">
      <summary>
              Looks up a localized string similar to PowerPointExportBitmapMissingFonts.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportFrameSlides">
      <summary>
              Looks up a localized string similar to PowerPointExportFrameSlides.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportHiddenSlides">
      <summary>
              Looks up a localized string similar to PowerPointExportHiddenSlides.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportIncludeDocumentProperties">
      <summary>
              Looks up a localized string similar to PowerPointExportIncludeDocumentProperties.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportIncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to PowerPointExportIncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportIntent">
      <summary>
              Looks up a localized string similar to PowerPointExportIntent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportOutputType">
      <summary>
              Looks up a localized string similar to PowerPointExportOutputType.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportPageRange">
      <summary>
              Looks up a localized string similar to PowerPointExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointExportRange">
      <summary>
              Looks up a localized string similar to PowerPointExportRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintBitmapMissingFonts">
      <summary>
              Looks up a localized string similar to PowerPointPrintBitmapMissingFonts.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintColorType">
      <summary>
              Looks up a localized string similar to PowerPointPrintColorType.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintComment">
      <summary>
              Looks up a localized string similar to PowerPointPrintComment.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintFitToPage">
      <summary>
              Looks up a localized string similar to PowerPointPrintFitToPage.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintFrameSlides">
      <summary>
              Looks up a localized string similar to PowerPointPrintFrameSlides.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintHiddenSlides">
      <summary>
              Looks up a localized string similar to PowerPointPrintHiddenSlides.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintOutputType">
      <summary>
              Looks up a localized string similar to PowerPointPrintOutputType.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintPageRange">
      <summary>
              Looks up a localized string similar to PowerPointPrintPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PowerPointOptions.PowerPointPrintRange">
      <summary>
              Looks up a localized string similar to PowerPointPrintRange.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.PublisherOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportBitmapMissingFont">
      <summary>
              Looks up a localized string similar to PublisherExportBitmapMissingFont.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportColorDownsampleTarget">
      <summary>
              Looks up a localized string similar to PublisherExportColorDownsampleTarget.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportColorDownsampleThreshold">
      <summary>
              Looks up a localized string similar to PublisherExportColorDownsampleThreshold.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportIncludeDocumentProperties">
      <summary>
              Looks up a localized string similar to PublisherExportIncludeDocumentProperties.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportIncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to PublisherExportIncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportIntent">
      <summary>
              Looks up a localized string similar to PublisherExportIntent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportOneBitDownsampleTarget">
      <summary>
              Looks up a localized string similar to PublisherExportOneBitDownsampleTarget.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportOneBitDownsampleThreshold">
      <summary>
              Looks up a localized string similar to PublisherExportOneBitDownsampleThreshold.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportPageRange">
      <summary>
              Looks up a localized string similar to PublisherExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportRange">
      <summary>
              Looks up a localized string similar to PublisherExportRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherExportStyle">
      <summary>
              Looks up a localized string similar to PublisherExportStyle.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherPrintPageRange">
      <summary>
              Looks up a localized string similar to PublisherPrintPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherPrintRange">
      <summary>
              Looks up a localized string similar to PublisherPrintRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.PublisherOptions.PublisherPrintStyle">
      <summary>
              Looks up a localized string similar to PublisherPrintStyle.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.VisioOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportColorAsBlack">
      <summary>
              Looks up a localized string similar to VisioExportColorAsBlack.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportIncludeBackground">
      <summary>
              Looks up a localized string similar to VisioExportIncludeBackground.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportIncludeDocumentProperties">
      <summary>
              Looks up a localized string similar to VisioExportIncludeDocumentProperties.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportIncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to VisioExportIncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportIntent">
      <summary>
              Looks up a localized string similar to VisioExportIntent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportPageRange">
      <summary>
              Looks up a localized string similar to VisioExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioExportRange">
      <summary>
              Looks up a localized string similar to VisioExportRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioPrintColorAsBlack">
      <summary>
              Looks up a localized string similar to VisioPrintColorAsBlack.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioPrintPageRange">
      <summary>
              Looks up a localized string similar to VisioPrintPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.VisioOptions.VisioPrintRange">
      <summary>
              Looks up a localized string similar to VisioPrintRange.
            </summary>
    </member>
    <member name="T:DCDK.ConverterOptions.WordOptions">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportBitmapMissingFonts">
      <summary>
              Looks up a localized string similar to WordExportBitmapMissingFonts.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportCreateBookmarks">
      <summary>
              Looks up a localized string similar to WordExportCreateBookmarks.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportCreateHyperlinks">
      <summary>
              Looks up a localized string similar to WordExportCreateHyperlinks.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportIncludeDocumentProperties">
      <summary>
              Looks up a localized string similar to WordExportIncludeDocumentProperties.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportIncludeDocumentStructureTags">
      <summary>
              Looks up a localized string similar to WordExportIncludeDocumentStructureTags.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportIntent">
      <summary>
              Looks up a localized string similar to WordExportIntent.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportKeepTrackedChanges">
      <summary>
              Looks up a localized string similar to WordExportKeepTrackedChanges.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportPageRange">
      <summary>
              Looks up a localized string similar to WordExportPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordExportRange">
      <summary>
              Looks up a localized string similar to WordExportRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordPrintOutItem">
      <summary>
              Looks up a localized string similar to WordPrintOutItem.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordPrintPageRange">
      <summary>
              Looks up a localized string similar to WordPrintPageRange.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordPrintPageType">
      <summary>
              Looks up a localized string similar to WordPrintPageType.
            </summary>
    </member>
    <member name="P:DCDK.ConverterOptions.WordOptions.WordPrintRange">
      <summary>
              Looks up a localized string similar to WordPrintRange.
            </summary>
    </member>
    <member name="T:DCDK.Converters.SupportedConversion">
      <summary>
            Enumerates the types of conversions supported by a converter.
            </summary>
    </member>
    <member name="F:DCDK.Converters.SupportedConversion.ToPDF">
      <summary>
            The converter supports converting files to PDF.
            </summary>
    </member>
    <member name="F:DCDK.Converters.SupportedConversion.FromPDF">
      <summary>
            The converter supports converting files from PDF.
            </summary>
    </member>
    <member name="T:DCDK.Environment.DCEnvironment">
      <summary>
            Provides some DocConverter Environment functionality
            </summary>
    </member>
    <member name="T:DCDK.Environment.DCEnvironment.DCTemporaryDirectory">
      <summary>
            The temporary directories of DocConverter
            </summary>
    </member>
    <member name="M:DCDK.Environment.DCEnvironment.GetTemporaryFolderPath(DCDK.Environment.DCEnvironment.DCTemporaryDirectory)">
      <summary>
            Gets the corresponding folder path of the temporary directory
            </summary>
      <param name="tempDir">Type: <see cref="T:DCDK.Environment.DCEnvironment.DCTemporaryDirectory" /><para>The DC temporary directory enum.</para></param>
      <returns>Returns the corresponding folder path.</returns>
    </member>
    <member name="M:DCDK.Environment.DCEnvironment.GetTempPrefix(DCDK.Environment.DCEnvironment.DCTemporaryDirectory)">
      <summary>
            Get the corresponding temporary directory prefix
            </summary>
      <param name="tempDir">Type: <see cref="T:DCDK.Environment.DCEnvironment.DCTemporaryDirectory" /><para>The temporary directory enum.</para></param>
      <returns>Returns the corresponding temporary directory prefix.</returns>
    </member>
    <member name="T:DCDK.Results.IDocConverterResult">
      <summary>
            Defines the properties/methods required to implement a DocConverter specific result.
            </summary>
    </member>
    <member name="P:DCDK.Results.IDocConverterResult.DocConverterStatus">
      <summary>
            Type: <see cref="P:DCDK.Results.IDocConverterResult.DocConverterStatus" /><para>Details the DocConverter-based result code.</para></summary>
    </member>
    <member name="T:DCDK.Results.DocConverterResult">
      <summary>
            The base DocConverter specific result class.
            </summary>
    </member>
    <member name="M:DCDK.Results.DocConverterResult.#ctor(DCDK.Results.DocConverterStatus,ADK.Results.ResultOrigin)">
      <summary>
            Creates a new instance of <see cref="T:DCDK.Results.ConversionResult" />.
            </summary>
      <param name="status">Type: <see cref="P:DCDK.Results.DocConverterResult.DocConverterStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Indicates the origin of the new instance.</para></param>
    </member>
    <member name="P:DCDK.Results.DocConverterResult.DocConverterStatus">
      <summary>
            Type: <see cref="P:DCDK.Results.DocConverterResult.DocConverterStatus" /><para>Details the DocConverter-based result code.</para></summary>
    </member>
    <member name="T:DCDK.Results.ConversionResult">
      <summary>
            Represents the result details fro a DocConverter-based conversion request.
            </summary>
    </member>
    <member name="F:DCDK.Results.ConversionResult._Paths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The list of paths associated with the current result.</para></summary>
    </member>
    <member name="F:DCDK.Results.ConversionResult._Originals">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The list of original file paths corresponding to a successful result.</para></summary>
    </member>
    <member name="F:DCDK.Results.ConversionResult._TempPaths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The list of temporary file paths that would be marked for deletion upon writing the result.</para></summary>
    </member>
    <member name="F:DCDK.Results.ConversionResult._AttachmentPaths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The list of embedded attachment</para></summary>
    </member>
    <member name="F:DCDK.Results.ConversionResult._SubdirectoriesPaths">
      <summary>
            Type: <see cref="!:List&lt;string&gt;" /><para>The list of subdirectories, if needed.</para></summary>
    </member>
    <member name="M:DCDK.Results.ConversionResult.#ctor(DCDK.Results.DocConverterStatus,ADK.Results.ResultOrigin)">
      <summary>
            Creates a new instance of <see cref="T:DCDK.Results.ConversionResult" />.
            </summary>
      <param name="status">Type: <see cref="T:DCDK.Results.DocConverterStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Indicates the origin of the new instance.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.#ctor(DCDK.Results.DocConverterStatus,ADK.Results.ResultOrigin,System.String)">
      <summary>
            Creates a new instance of <see cref="T:DCDK.Results.ConversionResult" />.
            </summary>
      <param name="status">Type: <see cref="T:DCDK.Results.DocConverterStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Indicates the origin of the new instance.</para></param>
      <param name="file">Type: <see cref="T:System.String" /><para>The path of the file associated with the new instance.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.#ctor(DCDK.Results.DocConverterStatus,ADK.Results.ResultOrigin,System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Creates a new instance of <see cref="T:DCDK.Results.ConversionResult" />.
            </summary>
      <param name="status">Type: <see cref="T:DCDK.Results.DocConverterStatus" /><para>Indicates the success/failure of the result.</para></param>
      <param name="origin">Type: <see cref="T:ADK.Results.ResultOrigin" /><para>Indicates the origin of the new instance.</para></param>
      <param name="paths">Type: <see cref="T:System.String" /><para>The collection of file paths associated with the new instance.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddPath(System.String,System.String)">
      <summary>
            Adds the <paramref name="newPath" /> to the current <see cref="P:DCDK.Results.ConversionResult.Paths" /> value.
            </summary>
      <param name="newPath">Type: <see cref="T:System.String" /><para>The new path to be added.</para></param>
      <param name="subDir">Type: <see cref="T:System.String" /><para>The subdirectory for the path, if any.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddPaths(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the <paramref name="newPaths" /> to the current <see cref="P:DCDK.Results.ConversionResult.Paths" /> value.
            </summary>
      <param name="newPaths">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of paths that are to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddOriginal(System.String)">
      <summary>
            Adds the <paramref name="origPath" /> to the current <see cref="P:DCDK.Results.ConversionResult.Originals" /> value.
            </summary>
      <param name="origPath">Type: <see cref="T:System.String" /><para>The original path to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddOriginals(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the <paramref name="origPaths" /> to the current <see cref="P:DCDK.Results.ConversionResult.Originals" /> value.
            </summary>
      <param name="origPaths">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of original paths that are to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddTempPath(System.String)">
      <summary>
            Adds the <paramref name="tempPath" /> to the current <see cref="P:DCDK.Results.ConversionResult.TempPaths" /> value.
            </summary>
      <param name="tempPath">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The new temporary path that are to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddTempPaths(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Adds the <paramref name="tempPaths" /> to the current <see cref="P:DCDK.Results.ConversionResult.TempPaths" /> value.
            </summary>
      <param name="tempPaths">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of temporary paths that are to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.ReplacePaths(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Replaces the current <see cref="P:DCDK.Results.ConversionResult.Paths" /> with the list in <paramref name="paths" />.
            </summary>
      <param name="paths">Type:<see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of paths that will overwrite the existing list of paths.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddAttachmentPath(DCDK.Conversion.AttachmentInfo)">
      <summary>
            Adds the <paramref name="attachment" /> to the current <see cref="P:DCDK.Results.ConversionResult.AttachmentPaths" /> value.
            </summary>
      <param name="attachment">Type: <see cref="T:DCDK.Conversion.AttachmentInfo" /><para>The attachment to be added.</para></param>
    </member>
    <member name="M:DCDK.Results.ConversionResult.AddAttachmentPaths(System.Collections.Generic.IEnumerable{DCDK.Conversion.AttachmentInfo})">
      <summary>
            Adds the <paramref name="attachPaths" /> to the current <see cref="P:DCDK.Results.ConversionResult.AttachmentPaths" /> value.
            </summary>
      <param name="attachPaths">Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The collection of attachments to be added.</para></param>
    </member>
    <member name="P:DCDK.Results.ConversionResult.TempPaths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>List of temporary path associated with this result to be deleted.</para></summary>
    </member>
    <member name="P:DCDK.Results.ConversionResult.AttachmentPaths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>List of attachment path associated with the result.</para></summary>
    </member>
    <member name="P:DCDK.Results.ConversionResult.SubdirectoriesPaths">
      <summary>
            Type: <see cref="!:List&lt;string&gt;" /><para>List of subdirectories path associated with each path;</para></summary>
    </member>
    <member name="P:DCDK.Results.ConversionResult.Paths">
      <summary>
            Type: <see cref="T:System.Collections.Generic.IEnumerable`1" /><para>The path(s) associated with the <see cref="T:ADK.Results.IPathsResult" />.</para></summary>
    </member>
    <member name="P:DCDK.Results.ConversionResult.Originals">
      <summary>
            Type: <see cref="T:System.Collections.Generic.List`1" /><para>The list of original file paths corresponding to a successful result.</para></summary>
    </member>
    <member name="T:DCDK.Results.DocConverterStatus">
      <summary>
            Enumerates the supported return values for DocConverter-based conversion requests.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.Success">
      <summary>
            The corresponding call was successfully executed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ProductError">
      <summary>
            A product specific error has occured.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.FileNotFound">
      <summary>
            The file was not found.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.OldFileFound">
      <summary>
            The file exists, but is older than the expected conversion time.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.DirectoryNotFound">
      <summary>
            A directory could not be found.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ValueOutofRange">
      <summary>
            The specified value was not found in a collection.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CannotOverwriteExisting">
      <summary>
            The desired output file exists, but current settings do not allow the file to be overwritten.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnableToMoveFile">
      <summary>
            A file could not be moved/copied to the desired location.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CreateDirectoryFailed">
      <summary>
            An attempt to create a directory failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnableToAccessFile">
      <summary>
            Unable to access the desired file.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InvalidParameter">
      <summary>
            An invalid value/object was passed to a function.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.NullParameter">
      <summary>
            A null argument was passed to a function.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.Exception">
      <summary>
            An exception occurred outside any specific functionality.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CallNotSupported">
      <summary>
            The current call is not supported in the executing context.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.FailedPerSettings">
      <summary>
            The current call failed due to an implicit setting.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ServiceAlreadyRunning">
      <summary>
            The service engine is already running.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ServiceNotRunning">
      <summary>
            The service engine is not running.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.SettingsUpToDate">
      <summary>
            The settings are already current and require no updates.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.SettingsUpdated">
      <summary>
            The settings were updated from a 'stale' condition.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnableToAccessSettingsFile">
      <summary>
            The settings file could not be accessed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.HttpPostFailed">
      <summary>
            An attempt to Post data via Http failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.HttpUnlockFailed">
      <summary>
            An attempt to unlock the Http library failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.NotInitialized">
      <summary>
            A plugin, or initializable instance, was not properly initialized before being called.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.PluginAssemblyInvalid">
      <summary>
            The plugin assembly is not valid for hosting.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.PluginTypeMismatch">
      <summary>
            The plugin assembly/type do not match the values exported.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.EndpointNotAdded">
      <summary>
            An attempt to add an endpoint failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.EndpointNotFound">
      <summary>
            The target endpoint was not found.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.WCFCommunicationException">
      <summary>
            Unhandled WCF communication exception was encountered.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnableToAccessSemaphore">
      <summary>
            Unable to access critical section protected by a semaphore.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.Timeout">
      <summary>
            Request timed out.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.JobDataNotFound">
      <summary>
            JobData for the conversion was not present in the input stream.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnableToDecodeJobData">
      <summary>
            JobData could not be decoded.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.PrintedToPostScriptFile">
      <summary>
            The print job was saved to PostScript.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionEngineInitializationFailed">
      <summary>
            The PostScript conversion engine failed to initialize.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionApplicationException">
      <summary>
            The conversion application threw an exception.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UnknownConversionCommand">
      <summary>
            The conversion application received an unknown command.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.RunStringEndFailed">
      <summary>
            Call to GhostScript RunStringEnd failed.  Check log for more details.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.OpenInputFileFailed">
      <summary>
            A call to OpenInputFile failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.OpenOutputFileFailed">
      <summary>
            A call to OpenOutputFile failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CopyFormFailed">
      <summary>
            A call to CopyForm failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.LinearizeFailed">
      <summary>
            A call to LinearizeFile failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InvisiblySignFileFailed">
      <summary>
            A call to InvisiblySignFile failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ImageToPDFFailed">
      <summary>
            A call to ImageToPDF failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.SaveMemoryToDiskFailed">
      <summary>
            A call to SaveMemoryToDisk failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.FindCertificateFailed">
      <summary>
            A call to FindCertificate failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.MergeFileFailed">
      <summary>
            A call to MergeFile failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.StampPDFFailed">
      <summary>
            Attempt to add stamps to the PDF failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.NotLicensed">
      <summary>
            The product is not licensed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.DefaultConverterDisabled">
      <summary>
            The converter associated with the request is currently disabled.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterNotFound">
      <summary>
            The converter associated with the request was not found in the system.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InvalidConversionType">
      <summary>
            The converter associated with the request does not support the desired conversion type.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterFileOpenFailed">
      <summary>
            The converter associated with the request could not open the file.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterFileCloseFailed">
      <summary>
            The converter associated with the request failed to close the file.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InputToBeDeleted">
      <summary>
            The input file will be deleted according to the settings.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InputFileEmpty">
      <summary>
            The input file is empty.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionPacketEmpty">
      <summary>
            The provided packet is empty.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionApplicationMissing">
      <summary>
            The conversion application is missing
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterErrorInPSToPDF">
      <summary>
            Converter error in PS to PDF conversion
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionInstanceFailedToStart">
      <summary>
            The conversion instance failed to start correctly.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionInstanceAlreadyRunning">
      <summary>
            The conversion instance is already running, and cannot be started.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.NoConversionStub">
      <summary>
            There is not conversion instance stub available.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterSoftwareRequirements">
      <summary>
            The converter failed to validate/verify all of its Software Requirements.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConverterInstanceFailure">
      <summary>
            The converter reached a failure or instable state, will need to relaunch.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.PostConversionPDFAFailure">
      <summary>
            Post-conversion PDF/A failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ArchiveExtractionFailure">
      <summary>
            Archive file extraction failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ArchiveConversionFailure">
      <summary>
            Archive file conversion failed.
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionFailed">
      <summary>
            Conversion failed
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.ConversionPrinterMissing">
      <summary>
            DocConverter Printer Missing
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.UploadFileFailed">
      <summary>
            Uploading of the file failed
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.DownloadFileFailed">
      <summary>
            Downloading of the file failed
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CannotMoveInputToOriginals">
      <summary>
            Unable to move input file to originals
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CannotMoveInputToErrors">
      <summary>
            Unable to move input file to errors
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.CannotCopyToOutput">
      <summary>
            Unable to move output file to correct location
            </summary>
    </member>
    <member name="F:DCDK.Results.DocConverterStatus.InvalidInputFileExtension">
      <summary>
            Invalid input extensions for conversion
            </summary>
    </member>
    <member name="T:DCDK.WCF.IConversionService">
      <summary>
            Defines the methods exposed in a DocConverter WCF service.
            </summary>
    </member>
    <member name="M:DCDK.WCF.IConversionService.ConvertFile(System.String)">
      <summary>
            Converts the file associated with <paramref name="xapl" />.
            </summary>
      <param name="xapl">Type: <see cref="T:System.String" /><para>The XML string associated with the XAPL request.</para></param>
      <returns>Type: <see cref="T:DCDK.Results.ConversionResult" /><para>Contains data related to the success/failure of the conversion attempt.</para></returns>
    </member>
    <member name="T:DCDK.WCF.IDocConverterService">
      <summary>
            Defines the methods/properties required to implement the primary service for DocConverter product.
            </summary>
    </member>
  </members>
</doc>